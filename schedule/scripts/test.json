{
    "cid": "11821", 
    "course_name": "ADV LINGUISTICS SEMR", 
    "course_rating": 3.33, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 4.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "LEVIN": [
            3.33, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "5821", 
    "course_name": "APP RSCH MTH: QUALTV", 
    "course_rating": 4.56, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.33, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KIESLER": [
            4.56, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5820", 
    "course_name": "SOCIAL WEB", 
    "course_rating": 4.073333333333333, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.676666666666667, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "HONG": [
            4.13, 
            1
        ], 
        "KITTUR": [
            4.21, 
            1
        ], 
        "KRAUT": [
            3.88, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15390", 
    "course_name": "ENTREPRENEURSHIP CS", 
    "course_rating": 4.61, 
    "description": "This course is designed to develop skills related to entrepreneurship and innovation for non-business undergraduate and graduate students in the School of Computer Science.  The course assumes no background courses in business and is appropriate for those who are interested in bringing innovations to market either through new companies or existing companies.   The course provides an overview of entrepreneurship and innovation, develops an entrepreneurial frame of mind, and provides a framework for learning the rudiments of how to generate ideas.  Students come up with or are presented with potential ideas and learn how to develop these ideas into opportunities, and to explore their potential for becoming viable businesses.  They learn how to do market research, to develop go-to-market strategies, value propositions and to differentiate their products or services from potential competitors.  The focus is on understanding and developing strategies for approaching the key elements of the entrepreneurial process...opportunity, resources and team. The course consists of a balance of lectures, case studies and encounters with entrepreneurs, investors and business professionals.  The students are exposed to financial and intellectual property issues, and encounter a real world perspective on entrepreneurship, innovation and leadership.  The output of the course is a mini-business plan or venture opportunity screening document that can be developed into a business plan in a subsequent course entitled New Venture Creation or through independent study.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 6.33, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "COURTRIGHT": [
            4.61, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15464", 
    "course_name": "TECHNICAL ANIMATION", 
    "course_rating": 4.2, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "POLLARD": [
            4.2, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11910", 
    "course_name": "DIRECTED RESEARCH", 
    "course_rating": 5.0, 
    "description": "This course number documents the research being done by Masters and pre-proposal PhD students. Beginning in Fall 2001, every LTI graduate student will register for at least 24 units of 11-910 each semester, unless they are ABD (i.e., they have had a thesis proposal accepted), in which case they should register for 48 units of 11-930. The student will be expected to write a report and give a presentation at the end of the semester, documenting the research done. The report will be filed by either the faculty member or the LTI graduate program administrator. \r\n(Until Fall 2001 this course number was used for individual study in connection with LTI project research work and was a Pass/Fail course.)", 
    "endTime": "", 
    "hrsPerWeek": 21.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "SMOLA": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5651", 
    "course_name": "INRCTN DESG FUNDMNTL", 
    "course_rating": 4.6339999999999995, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.98, 
    "numRatings": 5, 
    "prereqs": "", 
    "professors": {
        "BERNTSEN": [
            4.9399999999999995, 
            2
        ], 
        "DOW": [
            4.22, 
            1
        ], 
        "LEE": [
            4.535, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16778", 
    "course_name": "MECHATRONIC DESIGN", 
    "course_rating": 3.9849999999999994, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 14.604999999999999, 
    "numRatings": 6, 
    "prereqs": "Mechatronics is the synergistic integration of mechanism, electronics, and computer control to achieve a functional system. This course is a semester-long multidisciplinary capstone hardware project design experience in which small (typically four-person) teams of electrical and computer engineering, mechanical engineering and robotics students deliver an end-of-course demonstration of a final integrated system capable of performing a mechatronic task.  Throughout the semester, the students design, configure, implement, test and evaluate in the laboratory devices and subsystems culminating in the final integrated mechatronic system.\n\nLectures will complement the laboratory experience with comparative surveys,  operational principles, and integrated design issues associated with the spectrum of mechanism, microcontroller, electronic, sensor, and control components.", 
    "professors": {
        "DOLAN": [
            4.276666666666666, 
            3
        ], 
        "NEUMAN": [
            3.6933333333333334, 
            3
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15610", 
    "course_name": "ENGNRING DISTRBT SYS", 
    "course_rating": 4.855, 
    "description": "15410", 
    "endTime": "", 
    "hrsPerWeek": 13.245, 
    "numRatings": 2, 
    "prereqs": "This is a master's level course for students with strong design and\r\nimplementation skills who are likely to pursue careers as software\r\narchitects and lead engineers.  It may be taken by well-prepared\r\nundergraduates with excellent design and implementation skills in\r\nlow-level systems programing.  The course assumes a high level of\r\nproficiency in all aspects of operating system design and implementation.\r\n\r\nThis course will help students prepare for leadership roles in creating\r\nand evolving the complex, large-scale computer systems that society will\r\nincreasingly depend on in the future.  The course will teach the\r\norganizing principles of such systems, identifying a core set of\r\nversatile techniques that are applicable across many system layers.\r\nStudents will acquire the knowledge base, intellectual tools, hands-on\r\nskills and modes of thought needed to build well-engineered computer\r\nsystems that withstand the test of time, growth in scale, and stresses of\r\nlive use.\r\n \r\nTopics covered include: caching, prefetching, damage containment,\r\nscale reduction, hints, replication, hash-based techniques, and\r\nfragmentation reduction.  A substantial project component is an\r\nintegral part of the course.\r\n\r\nA high level of proficiency in systems programming is expected.", 
    "professors": {
        "SATYANARAYANAN": [
            4.855, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15611", 
    "course_name": "COMPILER DESIGN", 
    "course_rating": 4.82, 
    "description": "This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.\r\n\r\n\r\nPrerequisites:  15213 or 15312", 
    "endTime": "", 
    "hrsPerWeek": 18.55, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "PFENNING": [
            4.82, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15615", 
    "course_name": "DATABASE APPLICATNS", 
    "course_rating": 4.87, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.39, 
    "numRatings": 1, 
    "prereqs": "This course covers the fundamental topics for Database Management \r\nSystems: Database System Architectural Principles (ACID properties; data\r\nabstraction; external, conceptual, and internal schemata; data \r\nindependence; data definition and data manipulation languages), Data \r\nmodels (entity-relationship and relational data models; data \r\nstructures, integrity constraints, and operations for each data \r\nmodel; relational query languages: SQL, algebra, calculus), Theory of \r\ndatabase design (functional dependencies; normal forms; dependency \r\npreservation; information loss), Query Optimization (equivalence of \r\nexpressions, algebraic manipulation; optimization of selections and \r\njoins), Storage Strategies (indices, B-trees, hashing), Query Processing\r\n(execution of sort, join, and aggregation operators), and\r\nTransaction Processing (recovery and concurrency control).", 
    "professors": {
        "FALOUTSOS": [
            4.87, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15618", 
    "course_name": "PARL CMP ARC PRGNG", 
    "course_rating": 4.93, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 14.5, 
    "numRatings": 1, 
    "prereqs": "The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.", 
    "professors": {
        "FATAHALIAN": [
            4.93, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15619", 
    "course_name": "CLOUD COMPUTING", 
    "course_rating": 3.4859999999999998, 
    "description": "This on-line course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. The course will introduce this domain and cover the topics of data centers, resource management, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on existing approaches for resource management including resource abstraction, sharing and virtualization technologies. Students will learn about different cloud storage concepts including data distribution, durability, consistency and redundancy. HDFS, PVFS, HBase, Cassandra and S3 will be presented as examples of underlying distributed file systems. Students will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with a public cloud service (such as Amazon Web Services), use it to rent and provision compute resources and then program and deploy applications that run on these resources. Students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm.", 
    "endTime": "", 
    "hrsPerWeek": 16.25, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "GIBSON": [
            4.25, 
            1
        ], 
        "SAKR": [
            3.295, 
            4
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15750", 
    "course_name": "GRADUATE ALGORITHMS", 
    "course_rating": 3.835, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.75, 
    "numRatings": 2, 
    "prereqs": "Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.htm for the most recent schedule updates.", 
    "professors": {
        "BLUM": [
            3.835, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "2317", 
    "course_name": "ALGORITHMS IN NATURE", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "BAR-JOSEPH": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15855", 
    "course_name": "INTRO CMP CMPLX THRY", 
    "course_rating": 3.0, 
    "description": "Please refer to href=\"http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.\r\nClass will not begin until the week of September 9th.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 9.5, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "RUDICH": [
            3.0, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15851", 
    "course_name": "COMPUTATN & DEDUCTN", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "CRARY": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15853", 
    "course_name": "ALGORITHMS REAL WRLD", 
    "course_rating": 4.045, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.1, 
    "numRatings": 2, 
    "prereqs": "Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.", 
    "professors": {
        "BLELLOCH": [
            4.045, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "10805", 
    "course_name": "SP TPC: DEEP LEARNG", 
    "course_rating": 4.29, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "RAMAKRISHNAN": [
            4.29, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15859", 
    "course_name": "SPC TPCS IN THEORY", 
    "course_rating": 4.796, 
    "description": "Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedulef14.html this link for the most recent schedule updates. \n\nSection B: Machine Learning Theory\n\nCourse Description: http://www.cs.cmu.edu/~avrim/ML14/coursedesc.html\n\nThis course will focus on theoretical aspects of machine learning. We will examine questions such as: What kinds of guarantees can we prove about machine learning algorithms? Can we design algorithms for interesting learning tasks with strong guarantees on accuracy and amounts of data needed? (Why) is Occam's razor a good idea and what does that even mean? What can we say about the inherent ease or difficulty of learning problems? Can we devise models that are both amenable to theoretical analysis and make sense empirically? Addressing these questions will bring in connections to probability and statistics, online algorithms, game theory, complexity theory, information theory, cryptography, and empirical machine learning research.", 
    "endTime": "", 
    "hrsPerWeek": 9.562000000000001, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "BLUM": [
            5.0, 
            1
        ], 
        "GURUSWAMI": [
            4.93, 
            2
        ], 
        "MILLER": [
            4.2, 
            1
        ], 
        "ODONNELL": [
            4.92, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17654", 
    "course_name": "ANLYS SFTWR ARTIFACT", 
    "course_rating": 3.6100000000000003, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 12.9975, 
    "numRatings": 4, 
    "prereqs": "Analysis is the systematic examination of an artifact to determine its properties. This course will focus on analysis of software artifacts--primarily code, but also including analysis of designs, architectures, and test suites. We will focus on functional properties, but also cover non-functional properties like performance and security. In order to illustrate core analysis concepts in some depth, the course will center on static program analysis; however, the course will also include a breadth of techniques such as testing, model checking, theorem proving, dynamic analysis, and type systems.  The course will balance theoretical discussions with lab exercises in which students will apply the ideas they are learning to real artifacts.\r\n\r\nAfter completing this course, students will:\r\n   * know what kinds of analyses are available and how to use them\r\n   * understand their scope and power,when they can be applied and what\r\n     conclusions can be drawn from their results\r\n   * have a grasp of fundamental notions sufficient to evaluate new kinds of\r\n     analysis when they are developed\r\n   * have some experience selecting and writing analyses for a real piece of\r\n     software, applying them and interpreting the results\r\n\r\nPh.D. students taking the 17-754 version of the course will gain a broad overview of the analysis research literature and in-depth knowledge of a particular sub-area through a course project.\r\n\r\nRequirement: A recent discrete math course and programming experience.\r\nStrongly Recommended: Models of SW Development course (17-651) before taking this course.\r\nThis course is for letter grade only (no pass/fail grades).  This is a graduate course.  Only undergrad SE minors may take this course with the instructor's permission.", 
    "professors": {
        "GENNARI": [
            2.87, 
            1
        ], 
        "MIRANDA": [
            3.856666666666667, 
            3
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "17655", 
    "course_name": "ARCH SFTWR SYSTEMS", 
    "course_rating": 4.016, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 14.74, 
    "numRatings": 15, 
    "prereqs": "Successful design of complex software systems requires the ability to describe, evaluate, and create systems at an architectural level of abstraction.  This course introduces architectural design of complex software systems.  The course considers commonly-used software system structures, techniques for designing and implementing these structures, models and formal notations for characterizing and reasoning about architectures, tools for generating specific instances of an architecture, and case studies of actual system architectures. It teaches the skills and background students need to evaluate the architectures of existing systems and to design new systems in principled ways using well-founded architectural paradigms. After completing this course, students will be able to:\n1. describe an architecture accurately\n2. recognize major architectural styles in existing software systems\n3. generate architectural alternatives for a problem and choose among\nthem\n4. construct a medium-sized software system that satisfies an\narchitectural specification\n5. use existing definitions and development tools to expedite such tasks\n6. understand the formal definition of a number of architectures and be\nable to reason about the properties of those architectures\n7. use domain knowledge to specialize an architecture for a particular\nfamily of applications\nREQUIREMENT:  Experience with at least one large software system, either through industrial software development experience or an undergraduate course in software engineering, compilers, operating sys., or the like. This course is for letter grade only.\n\nInstructor wants each student who wants to take his Architectures class to have worked on a significant software system in your courses or in industry. Write to (garlan@cs.cmu.edu) for admission into the course stating the experience you have had.\nThis is a graduate course.  Only undergrad SE minors may take this course", 
    "professors": {
        "BASS": [
            3.42, 
            2
        ], 
        "GARLAN": [
            4.195, 
            4
        ], 
        "KEELING": [
            3.8, 
            1
        ], 
        "LATTANZE": [
            4.57, 
            4
        ], 
        "MELLINGER": [
            4.2, 
            2
        ], 
        "PETERSON": [
            3.0700000000000003, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "17656", 
    "course_name": "COMMNCTN SOFT ENGR I", 
    "course_rating": 3.893333333333333, 
    "description": "This seminar is designed for graduate students in software engineering.\r\nTechnical communication experts introduce principles and approaches for\r\nwriting and speaking effectively. Students have opportunities to practice\r\nwriting, speaking, and listening skills. Documents and presentations for\r\nthe MSE Studio and core courses are integrated into seminar instruction.\r\nClass participation is essential.", 
    "endTime": "04:50PM", 
    "hrsPerWeek": 2.75, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "CIROLI": [
            3.6, 
            1
        ], 
        "KEATING": [
            4.33, 
            1
        ], 
        "KOLENICH": [
            3.75, 
            1
        ]
    }, 
    "startTime": "03:30PM", 
    "units": ""
}
{
    "cid": "17657", 
    "course_name": "COMMCTN SOFT ENGR II", 
    "course_rating": 4.176666666666667, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 2.143333333333333, 
    "numRatings": 6, 
    "prereqs": "This course is for Master of Software Engineering and Master of Science in Information Technology in Software Engineering students only.", 
    "professors": {
        "CIROLI": [
            4.154999999999999, 
            2
        ], 
        "KEATING": [
            4.54, 
            2
        ], 
        "KOLENICH": [
            3.835, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "3,6         "
}
{
    "cid": "17651", 
    "course_name": "MODELS SOFTWR SYSTMS", 
    "course_rating": 4.503333333333333, 
    "description": "Scientific foundations for software engineering depend on the use of precise, abstract models for describing and reasoning about properties of software systems. This course considers a variety of standard models for representing sequential and concurrent systems, such as state machines, algebras, and traces. It shows how different logics can be used to specify properties of systems, such as functional correctness, deadlock freedom, and internal consistency. Concepts such as compositionality, abstraction, invariants, non-determinism, and inductive definitions are recurrent themes throughout the course. After completing this course, students will:\r\n1. Understand the strengths and weaknesses of certain models and logics including state machines, algebraic and process models, and temporal logic;\r\n2. Be able to select and describe appropriate abstract formal models for certain classes of systems, describe abstraction relations between different levels of description, and reason about the correctness of refinements;\r\n3. Be able to prove elementary properties about systems described by the models introduced in the course; and\r\n4. Understand some of the strengths and weakness of formal automated reasoning tools.\r\n\r\nPrerequisites: Undergraduate discrete math including first-order logic, sets, functions, relations, and simple proof techniques such as induction. \r\nSections D, PP and G are NOT available for on-campus students. \r\nAdmission to the class is by approval from the instructor: If you are not MSE/MSIT-SE/MITS, send email to garlan@cs.cmu.edu for permission to enroll. The email should briefly describe your background, whether you have taken an undergraduate discrete math course, and why you would like to take the course. The course must be taken for a letter grade (not pass/fail).   This is a graduate level course.", 
    "endTime": "", 
    "hrsPerWeek": 13.766666666666666, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "GARLAN": [
            4.255, 
            2
        ], 
        "MCLAUGHLIN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17652", 
    "course_name": "MTHDS DECIDE DESIGN", 
    "course_rating": 3.68, 
    "description": "Sections D and PP are NOT available for on-campus students.\r\n\r\nPractical development of software requires an understanding of successful methods for bridging the gap between a problem to be solved and a working software system. In this course you will study a variety of ways of understanding the problem to be solved by the system you're developing and of framing an\r\nappropriate solution to that problem.\r\n\r\nAfter completing this course, you will be able to\r\n\r\no identify different classes of problems and their structures \r\no analyze technical, organizational, usability, business, and marketing    constraints on solutions      \t\r\no apply engineering approaches to frame solutions \r\no understand how your understanding of the problem should be reflected in the software design \r\n\r\nPREREQUISITE: minimum of 3 months hands-on software development experience in industry.  Students not accepted into the MSE program must present a current resume showing relevant industrial experience to department coordinator.\r\n\r\nThis course is offered to only MSE/MITS and MSIT-SE students for fall semester. This course is for graduate students only.  This course is for letter grade only (no pass/fail grades).\r\nTo register for Methods course, you will need a requirement of a minimum of 3 mos hands-on software\r\ndevelopment experience in industry.\r\nPlease submit a statement that gives the company, the dates, and a\r\nsentence or two about what you were actually doing during that time\r\n(i.e. programming, testing, other things actually involved in software\r\ndevelopment)to jdh@cs.cmu.edu.  This is a graduate course.  Only undergrad SE minors may take this course.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 11.285, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "BREAUX": [
            4.36, 
            1
        ], 
        "DAMASCENO": [
            3.0, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "17653", 
    "course_name": "MANAGE SFTWR DVLPMT", 
    "course_rating": 3.9520000000000004, 
    "description": "Sections D, F, PP and G are NOT available for on-campus students.\r\nLarge scale software development requires the ability to manage resources - both human and computational - through control of the development process. This course provides the knowledge and skills necessary to lead a project team, understand the relationship of software development to overall product engineering, estimate time and costs, and understand the software process.  After completing this course, students will: \r\n1. be able to write a software project management plan, addressing issues of risk analysis, schedule, costs, team organization, resources, and technical approach\r\n2. be able to define the key process areas of the Capability Maturity Model and the technology and practices associated with each and a variety of software development life cycle models and explain the strengths, weaknesses, and applicability of each \r\n3. understand the relationship between software products and overall products (if embedded), or the role of the product in the organizational product line\r\n4. understand the legal issues involved in liability, warranty, patentability, and copyright\r\n5. understand the purpose and limitations of software development standards and be able to apply sensible tailoring where needed\r\n6. be able to use software development standards for documentation and implementation \r\n7. be able to apply leadership principles\r\n8. be able to perform requirements elicitation\r\n\r\nREQUIREMENT:  Students must have had industrial software engineering experience with a large project, or a comprehensive undergraduate course in software engineering.    This course is for letter grade only. Contact the instructor (droot@cs.cmu.edu) for permission to join the class.  This is a course for graduate students.  Only undergrad SE minors may take this course.", 
    "endTime": "06:50PM", 
    "hrsPerWeek": 13.012, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "GREENHALGH": [
            3.695, 
            2
        ], 
        "KEELING": [
            4.57, 
            1
        ], 
        "MIRANDA": [
            3.57, 
            1
        ], 
        "ROOT": [
            4.23, 
            1
        ]
    }, 
    "startTime": "05:30PM", 
    "units": ""
}
{
    "cid": "8602", 
    "course_name": "CURNT TPC PRVY SEMR", 
    "course_rating": 4.9399999999999995, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 3.315, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "CRANOR": [
            5.0, 
            1
        ], 
        "SADEH": [
            4.88, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8600", 
    "course_name": "JAVA J2EE PROGRAMMNG", 
    "course_rating": 4.8, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.34, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "EPPINGER": [
            4.8, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8604", 
    "course_name": "FOUNDATIONS OF PRIVC", 
    "course_rating": 4.44, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 13.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DATTA": [
            4.44, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15549", 
    "course_name": "IND STUDY COMP SYSTM", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "OFLAZER": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16250", 
    "course_name": "GADGETRY", 
    "course_rating": 4.6850000000000005, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.645, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KIRBY": [
            4.63, 
            1
        ], 
        "LAUWERS": [
            4.74, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16311", 
    "course_name": "INTRO TO ROBOTICS", 
    "course_rating": 3.9850000000000003, 
    "description": "18202 or 21241 or 21260 or 24311", 
    "endTime": "", 
    "hrsPerWeek": 14.649999999999999, 
    "numRatings": 2, 
    "prereqs": "This course presents an overview of robotics in practice and research with topics including vision, motion planning, mobile mechanisms, kinematics, inverse kinematics, and sensors. In course projects, students construct robots which are driven by a microcontroller, with each project reinforcing the basic principles developed in lectures. Students nominally work in teams of three: an electrical engineer, a mechanical engineer, and a computer scientist. This course will also expose students to some of the contemporary happenings in robotics, which includes current robot lab research, applications, robot contests and robots in the news.", 
    "professors": {
        "CHOSET": [
            3.9850000000000003, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "8781", 
    "course_name": "MBL PRVSV CMPTNG SRV", 
    "course_rating": 4.396666666666667, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.983333333333334, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "SADEH": [
            4.396666666666667, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15101", 
    "course_name": "EXPLORNG PRGMG ALICE", 
    "course_rating": 4.35, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.33, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SLATER": [
            4.35, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5410", 
    "course_name": "USER-CN RSRCH EVALN", 
    "course_rating": 3.3600000000000003, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.280000000000001, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KRAUT": [
            3.33, 
            1
        ], 
        "MORRIS": [
            3.39, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5413", 
    "course_name": "HUMAN FACTORS", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DABBISH": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11683", 
    "course_name": "BIOTCHY OUTSG & GRWT", 
    "course_rating": 4.6933333333333325, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 5.923333333333333, 
    "numRatings": 3, 
    "prereqs": "An especially dangerous time for new ventures is right after the initial product launch. At startup, many ventures run lean with a small headcount and minimal operational overhead. After some success, the startup is compelled to expand headcount, increase capital expansion, and scale up operations. In many cases, what was a promising theoretical business model may fail due to inadequate growth management. \r\n\r\nBiotechnology companies in particular are increasingly having key functions outsourced to reduce cost and increasing efficiency. The capital cost for laboratories and specialized lab technicians is often prohibitive for biotech startups with a clear and narrow focus. Biotech startups are therefore running much leaner but with a distributed organizational structure. Under these circumstances, managing outsourced functions becomes critical and is a focus of this course. This course will introduce students to issues with growth strategy and outsourcing management.", 
    "professors": {
        "NYBERG": [
            4.56, 
            1
        ], 
        "VU": [
            4.76, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "17629", 
    "course_name": "ARCHTG ENTRS SYSTEMS", 
    "course_rating": 3.67, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 13.33, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "BASS": [
            3.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16385", 
    "course_name": "COMPUTER VISION", 
    "course_rating": 4.15, 
    "description": "(18202 and 15122) or (15122 and 21259 and 21241)", 
    "endTime": "", 
    "hrsPerWeek": 9.7, 
    "numRatings": 1, 
    "prereqs": "Basic concepts in machine vision, including sensing and perception, 2D image analysis, pattern classification, physics-based vision, stereo and motion, and object recognition.", 
    "professors": {
        "LEE": [
            4.15, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "16384", 
    "course_name": "ROBOT KNMATCS DYNMCS", 
    "course_rating": 4.3, 
    "description": "Foundations and principles of robotic kinematics. Topics include transformations, forward kinematics, inverse kinematics, differential kinematics (Jacobians),  manipulability, and basic equations of motion. Course also include programming on robot arms.", 
    "endTime": "10:20AM", 
    "hrsPerWeek": 10.65, 
    "numRatings": 1, 
    "prereqs": "15122 or 18202 or 24311 or 21241 or 16311", 
    "professors": {
        "CHOSET": [
            4.3, 
            1
        ]
    }, 
    "startTime": "09:00AM", 
    "units": ""
}
{
    "cid": "11763", 
    "course_name": "STRC PRD LNG DSC DTA", 
    "course_rating": 4.43, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.629999999999999, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "DYER": [
            4.29, 
            1
        ], 
        "SMITH": [
            4.57, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2261", 
    "course_name": "QNTV CL MLC BLG LAB", 
    "course_rating": 4.46, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.206666666666665, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "THICKMAN": [
            4.46, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8732", 
    "course_name": "LAW OF COMPUTER TECH", 
    "course_rating": 4.91, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.48, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SHAMOS": [
            4.91, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8733", 
    "course_name": "PRIVCY POL LAW TECH", 
    "course_rating": 4.835, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.835, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "BREAUX": [
            5.0, 
            1
        ], 
        "CRANOR": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8731", 
    "course_name": "INFM SECURITY & PRVC", 
    "course_rating": 3.8, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SADEH": [
            3.8, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "10708", 
    "course_name": "PROB GRAPHCL MODELS", 
    "course_rating": 3.6950000000000003, 
    "description": "10701 or 15781", 
    "endTime": "", 
    "hrsPerWeek": 12.010000000000002, 
    "numRatings": 2, 
    "prereqs": "Many of the problems in artificial intelligence, statistics, computer systems, computer vision, natural language processing, and computational biology, among many other fields, can be viewed as the search for a coherent global conclusion from local information. The probabilistic graphical models framework provides an unified view for this wide range of problems, enabling efficient inference, decision-making and learning in problems with a very large number of attributes and huge datasets. This graduate-level course will provide you with a strong foundation for both applying graphical models to complex problems and for addressing core research topics in graphical models.\n\nThe class will cover three aspects: The core representation, including Bayesian and Markov networks, and dynamic Bayesian networks; probabilistic inference algorithms, both exact and approximate; and, learning methods for both the parameters and the structure of graphical models. Students entering the class should have a pre-existing working knowledge of probability, statistics, and algorithms, though the class has been designed to allow students with a strong numerate background to catch up and fully participate.\n\nIt is expected that after taking this class, the students should have obtain sufficient working knowledge of multi-variate probablistic modeling and inference for practical applications, should be able to fomulate and solve a wide range of problems in their own domain using GM, and can advance into more specialized technical literature by themselves.\n\nStudents are required to have successfully completed 10701/15781, or an equivalent class.", 
    "professors": {
        "XING": [
            3.6950000000000003, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15492", 
    "course_name": "ST:SPEECH PROCESSING", 
    "course_rating": 4.86, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.43, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "BLACK": [
            4.86, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53733", 
    "course_name": "ETC FUNDMTL PRODCNG", 
    "course_rating": 4.383333333333333, 
    "description": "The purpose of this class is to provide you with an introduction to the role of the producer in developing or helping to develop the creative vision, administrative responsibilities such as scheduling and budgeting and the ethical responsibility and dilemmas you may encounter.   We will discuss the qualities of leadership, uncompromising professionalism, and personal passion and persistence necessary to become a successful producer.\nAdditionally, we will use role playing to perfect the pitch process.  Being able to easily and effectively pitch your project \ufffd or yourself \ufffd will help you to become comfortable with the \ufffdreal life\ufffd situations you will encounter when you enter the industry. Meeting deadlines, in the entertainment industry, is of major importance and taken very seriously.  Students will be expected to exhibit a professional attitude of attention to detail and deadline.", 
    "endTime": "10:20AM", 
    "hrsPerWeek": 5.25, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "SALDAMARCO": [
            4.383333333333333, 
            3
        ]
    }, 
    "startTime": "09:00AM", 
    "units": ""
}
{
    "cid": "10702", 
    "course_name": "STATISTCL MACH LRNG", 
    "course_rating": 4.536666666666666, 
    "description": "10701 and 36705", 
    "endTime": "", 
    "hrsPerWeek": 11.75, 
    "numRatings": 3, 
    "prereqs": "This course builds on the material presented in 10-701(Machine Learning), introducing new learning methods and going more deeply into their statistical foundations and computational aspects. Applications and case studies from statistics and computing are used to illustrate each topic. Aspects of implementation and practice are also treated. A tentative list of topics to be covered includes (but is not restricted to) the following: Maximum likelihood vs. Bayesian inference; Regression, Classfication, and Clustering; Graphical Methods, including Causal Inference; The EM Algorithm; Data Augmentation, Gibbs, and Markov Chain Monte Carlo Algorithms; Techniques for Supervised and Unsupervised Learning; Sequential Decision making and Experimental Design.", 
    "professors": {
        "SINGH": [
            3.92, 
            1
        ], 
        "WASSERMAN": [
            4.845, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "10701", 
    "course_name": "MACHINE LEARNING", 
    "course_rating": 3.56, 
    "description": "Machine learning studies the question \"How can we build computer\nprograms that automatically improve their performance through\nexperience?\"   This includes learning to perform many types of tasks\nbased on many types of experience.  For example, it includes robots\nlearning to better navigate based on experience gained by roaming\ntheir environments, medical decision aids that learn to predict which\ntherapies work best for which diseases based on data mining of\nhistorical health records, and speech recognition systems that lean to\nbetter understand your speech based on experience listening to you.\nThis course is designed to give PhD students a thorough grounding in\nthe methods, theory, mathematics and algorithms needed to do research\nand applications in machine learning. The topics of the course draw\nfrom from machine learning, from classical statistics, from data\nmining, from Bayesian statistics and from information theory.\n\nStudents entering the class with a pre-existing working knowledge of\nprobability, statistics and algorithms will be at an advantage, but\nthe class has been designed so that anyone with a strong numerate\nbackground can catch up and fully participate.  If you are interested\nin this topic, but are not a PhD student, or are a PhD student not\nspecializing in machine learning, you might consider the master's\nlevel course on Machine Learning, 10-601.\"", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 13.187999999999999, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "BAR-JOSEPH": [
            3.9, 
            1
        ], 
        "GORDON": [
            4.15, 
            1
        ], 
        "POCZOS": [
            3.5, 
            1
        ], 
        "SMOLA": [
            3.125, 
            2
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "2760", 
    "course_name": "LAB MTHDS COMP BIO", 
    "course_rating": 4.2675, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.3, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "Ayoob": [
            4.6, 
            2
        ], 
        "THICKMAN": [
            3.935, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "10705", 
    "course_name": "INTERMED STATISTICS", 
    "course_rating": 3.98, 
    "description": "This course covers the fundamentals of theoretical statistics. Topics\r\ninclude: probability inequalities, point and interval estimation,\r\nminimax theory, hypothesis testing, data reduction, convergence\r\nconcepts, Bayesian inference, nonparametric statistics, bootstrap\r\nresampling, VC dimension, prediction and model selection.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 11.56, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "LEI": [
            3.98, 
            1
        ]
    }, 
    "startTime": "12:30PM", 
    "units": ""
}
{
    "cid": "10704", 
    "course_name": "INFO PRCG & LEARNG", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.79, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SINGH": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5671", 
    "course_name": "HCI PROJECT", 
    "course_rating": 4.2025, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 17.16, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "ANGIOLILLO": [
            4.44, 
            1
        ], 
        "DATE": [
            4.425000000000001, 
            2
        ], 
        "MYERS": [
            3.52, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5672", 
    "course_name": "HCI PROJECT II", 
    "course_rating": 4.155, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 19.0, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "ANGIOLILLO": [
            4.18, 
            1
        ], 
        "DATE": [
            4.125, 
            2
        ], 
        "HONG": [
            4.19, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5822", 
    "course_name": "APP RES QUANTV METHD", 
    "course_rating": 4.25, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KIESLER": [
            4.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5771", 
    "course_name": "HCI PROCESS & THEORY", 
    "course_rating": 3.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MANKOFF": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5773", 
    "course_name": "C S PERSPECTIVES HCI", 
    "course_rating": 3.78, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.33, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MYERS": [
            3.78, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5772", 
    "course_name": "SOCIAL PERSPCTVS HCI", 
    "course_rating": 4.17, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.58, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DABBISH": [
            4.17, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5775", 
    "course_name": "CGNTV PRSPCTVS HCII", 
    "course_rating": 4.8, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.2, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KITTUR": [
            4.8, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5774", 
    "course_name": "DSGN PRSPCTVS HCII", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "FORLIZZI": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16811", 
    "course_name": "MATH FUND FOR ROBOT", 
    "course_rating": 4.67, 
    "description": "This course covers selected topics in applied mathematics useful in\r\nrobotics, taken from the following list: \r\n\r\n    1. Solution of Linear Equations. \r\n    2. Polynomial Interpolation and Approximation. \r\n    3. Solution of Nonlinear Equations. \r\n    4. Roots of Polynomials, Resultants. \r\n    5. Approximation by Orthogonal Functions (includes Fourier series). \r\n    6. Integration of Ordinary Differential Equations. \r\n    7. Optimization. \r\n    8. Calculus of Variations (with applications to Mechanics). \r\n    9. Probability and Stochastic Processes (Markov chains). \r\n    10. Computational Geometry. \r\n    11. Differential Geometry.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 13.02, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "ERDMANN": [
            4.67, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "2510", 
    "course_name": "COMPUTATNL GENOMICS", 
    "course_rating": 3.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "BAR-JOSEPH": [
            3.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5571", 
    "course_name": "UNGERGRAD PROJ HCI", 
    "course_rating": 4.31, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.89, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "ALEVEN": [
            4.33, 
            1
        ], 
        "DATE": [
            4.5, 
            1
        ], 
        "KRAUT": [
            4.1, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11611", 
    "course_name": "NATRL LNGUAG PRCSSNG", 
    "course_rating": 4.75, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 7.5, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "BLACK": [
            4.5, 
            1
        ], 
        "DYER": [
            4.75, 
            1
        ], 
        "SMITH": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "53607", 
    "course_name": "ETC INTRDSCP PRJ II", 
    "course_rating": 5.0, 
    "description": "The central part of the ETC curriculum is the project course. In this course, students are in small, interdisciplinary teams, creating artifacts under direct faculty supervision. An artifact may be a web site, a piece of software, a piece of hardware, a design document, or a number of other things. Artifacts are typically intended to be prototypes, not production models. Each project team, working with their faculty member, must design what they are going to create, the mechanisms by which they will create it, and then actually create it.", 
    "endTime": "05:20PM", 
    "hrsPerWeek": 24.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "CHEN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "02:30PM", 
    "units": ""
}
{
    "cid": "53604", 
    "course_name": "PRODCTN & LEADERSHIP", 
    "course_rating": 4.73, 
    "description": "Production & Leadership is a course is designed to recreate the training in production you might receive over the first 6 months at a development studio. Class topics will focus on the development of Interactive Experiences (Games and Location Based) however the majority of topics can be applied to many types of production and leadership. \r\nThe syllabi will mirror the semester and will dove tail into YOUR ETC semester projects. Topics, examples, and assignments will relate directly to the classes projects. Because of this your participation in discussions will be critical component of the course - this includes sharing project details, struggles, issues, and successes with the class.  If you are an aspiring producer or looking for a comprehensive understanding of how teams work together and how to help lead them - then this is the place for you.\r\nThe goal of this course is to introduce students to the world of game production and  help them achieve a comprehensive knowledge of the field. At the end of the course you should understand the fundamental role and responsibility of a Producer.  You should be able to:\r\n\ufffd\tDesign and build a full project schedule\r\n\ufffd\tEstablish team roles and responsibilities\r\n\ufffd\tUnderstand standard industry milestones and how to apply them \r\n\ufffd\tFacilitate communication, provide visibility, and manage expectations with outside clients\r\n\ufffd\tApply learning of how to successfully radiate information within the team\r\n\ufffd\tIdentify various personality types and understand how to be the best producer possible for each\r\n\ufffd\tHave a clear understanding of what it takes to develop a game project from concept to release\r\nThis course is reserved for ETC students attending the ETC-CMU campus.", 
    "endTime": "08:50PM", 
    "hrsPerWeek": 7.125, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "HOOVER": [
            4.73, 
            2
        ]
    }, 
    "startTime": "06:00PM", 
    "units": ""
}
{
    "cid": "53600", 
    "course_name": "ETC COOPERATV EDCTN", 
    "course_rating": 4.33, 
    "description": "During the semester, students on coop are considered full-time, registered Carnegie Mellon students, and pay full tuition. A contact person at the company must agree to act as the local representative to the ETC faculty, and the representative, the student, and the ETC Program Directors will establish what activities the student will participate in during the coop (during which time the student may be paid by the company, as well). The student must be able to discuss his or her work with the ETC faculty and community in some level of detail. When on coop, it is customary (but not guaranteed) that students will have the elective course requirement waived. \r\nStudents on coop will be advised by the Program Director. As faculty advisor, the director will contact the student\ufffds supervisor to set academic expectations for the coop. Then the faculty will talk with the supervisor and the student twice during the semester (around midterm and the end of the semester). The supervisor will evaluate the student\ufffds performance at each of these discussions.", 
    "endTime": "", 
    "hrsPerWeek": 19.67, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "DAVIDSON": [
            4.33, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53609", 
    "course_name": "GAME DESIGN", 
    "course_rating": 4.720000000000001, 
    "description": "The goal of this course is to prepare you for a career involving design of computer games and other interactive experiences. Students in this course will read and write about game design, and design many games of their own. Do not mistake this for a course in computer game development. This course is focused on the rules and methods of game design, which remain fairly constant regardless of the technology used to develop a game. While technology will play a significant role in our studies, technological details will not be our focus. You will study and design games of all sorts: card games, dice games, athletic games, story games, and yes, even video games. How to design games, how to design them well, and how to see your designs to completion will be what you study here.", 
    "endTime": "", 
    "hrsPerWeek": 12.76, 
    "numRatings": 2, 
    "prereqs": "53831", 
    "professors": {
        "SCHELL": [
            4.720000000000001, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53608", 
    "course_name": "VISUAL STORY", 
    "course_rating": 4.1866666666666665, 
    "description": "Students are taught the language of filmmaking and the director\ufffds craft as it applies to the digital format. Aspects of mise-en-scene, visual storytelling, continuity-style coverage, temporal and spatial montage theory, directing actors and thinking visually, will be essential to the new media director\ufffds palette. All forms of digital filmmaking will be discussed including dramatic, documentary and independent features as well as commercials, music videos and experimental subjects. Through lectures, readings, screenings, web-postings, discussions, writing and production assignments, you will learn the basic principles and vocabulary of film theory and aesthetics. Understanding these fundamental ideas will help you develop a more critical eye towards creating new media.", 
    "endTime": "11:20AM", 
    "hrsPerWeek": 12.800000000000002, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "VITUCCIO": [
            4.1866666666666665, 
            3
        ]
    }, 
    "startTime": "09:30AM", 
    "units": ""
}
{
    "cid": "11344", 
    "course_name": "MACHINE LRNG PRACTCE", 
    "course_rating": 4.443333333333333, 
    "description": "Machine Learning is concerned with computer programs that enable the behavior of a computer to be learned from examples or experience rather than dictated through rules written by hand.  It has practical value in many application areas of computer science such as on-line communities and digital libraries.  This class is meant to teach the practical side of machine learning for applications, such as mining newsgroup data or building adaptive user interfaces.  The emphasis will be on learning the process of applying machine learning effectively to a variety of problems rather than emphasizing an understanding of the theory behind what makes machine learning work.  This course does not assume any prior exposure to machine learning theory or practice. In the first 2/3 of the course, we will cover a wide range of learning algorithms that can be applied to a variety of problems.  In particular, we will cover topics such as decision trees, rule based classification, support vector machines, Bayesian networks, and clustering. In the final third of the class, we will go into more depth on one application area, namely the application of machine learning to problems involving text processing, such as information retrieval or text categorization.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 7.0, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "ROSE": [
            4.443333333333333, 
            3
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15322", 
    "course_name": "INTRO COMPUTER MUSIC", 
    "course_rating": 3.57, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.28, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DANNENBERG": [
            3.57, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15323", 
    "course_name": "COMPTR MUSIC SYSTEMS", 
    "course_rating": 3.88, 
    "description": "15122", 
    "endTime": "", 
    "hrsPerWeek": 6.32, 
    "numRatings": 1, 
    "prereqs": "This course presents concepts and techniques for representing and manipulating discrete music information, both in real time and off line. Representations of music as explicitly timed event sequences will be introduced, and students will learn how to build efficient run-time systems for event scheduling, tempo control, and interactive processing. The MIDI protocol is used to capture real-time performance information and to generate sound. The course will also cover non-real-time processing of music data, including Markov models, style recognition, computer accompaniment, query-by-humming, and algorithmic composition. This course is independent of, and complementary to 15-322, Introduction to Computer Music, which focuses on sound synthesis and signal processing.", 
    "professors": {
        "DANNENBERG": [
            3.88, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "15321", 
    "course_name": "RES MTHDS FOR EXP CS", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MAXION": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15869", 
    "course_name": "SP TPCS IN GRAPHICS", 
    "course_rating": 4.45, 
    "description": "This course will explore research topics in physically based character animation, where the goal is to obtain a character performance that appears both natural and physically plausible. In particular, we will investigate how the physical properties of a character such as range of motion, weight distribution, and level of coordination constrain and suggest plausible motions for that character. We will explore theory and advances in motion controllers, strengths and limitations of motion optimization algorithms, opportunities for fast physics algorithms for interactive applications, the nature of natural motion and aspects of motion style. In addition to computer graphics literature, we will search biomechanics, human motor control, and evolutionary biology literature for insights obtained from these fields. The course should be appropriate for graduate students with some computer graphics and / or robotics experience and for advanced undergraduates who have taken 15-462 or equivalent. \n\n Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.", 
    "endTime": "", 
    "hrsPerWeek": 9.2, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "FATAHALIAN": [
            4.9, 
            1
        ], 
        "POLLARD": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15719", 
    "course_name": "ADV CLOUD COMPUTING", 
    "course_rating": 4.155, 
    "description": "to be determined", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 11.35, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "GIBSON": [
            4.2, 
            1
        ], 
        "SAKR": [
            4.11, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15712", 
    "course_name": "ADV OP SYS & DST SYS", 
    "course_rating": 4.713333333333334, 
    "description": "15-712 is a graduate course in operating systems. The goals are:\r\n\r\nTo understand the state of the art in operating systems and distributed systems, and how and why we got there.\r\n\r\nTo understand how to engage in systems research.\r\n\r\nTo investigate novel ideas in systems through a semester-long research project.\r\n\r\nPlease refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.  CLASS WILL BEGIN THE WEEK OF SEPTEMBER 9th.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 11.153333333333334, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "ANDERSEN": [
            4.76, 
            1
        ], 
        "ZHANG": [
            4.6899999999999995, 
            2
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15862", 
    "course_name": "COMPTNAL PHOTOGRAPHY", 
    "course_rating": 4.67, 
    "description": "Computational Photography is an emerging new field created by the convergence of computer graphics, computer vision and photography. Its role is to overcome the limitations of the traditional camera by using computational techniques to produce a richer, more vivid, perhaps more perceptually meaningful representation of our visual world.\r\n\r\nThe aim of this advanced undergraduate course is to study ways in which samples from the real world (images and video) can be used to generate compelling computer graphics imagery. We will learn how to acquire, represent, and render scenes from digitized photographs. Several popular image-based algorithms will be presented, with an emphasis on using these techniques to build practical systems. This hands-on emphasis will be reflected in the programming assignments, in which students will have the opportunity to acquire their own images of indoor and outdoor scenes and develop the image analysis and synthesis tools needed to render and view the scenes on the computer.\r\n\r\nPlease refer to href=\"https://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.  Class will not begin until week of September 9th.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 11.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "KITANI": [
            4.67, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "15819", 
    "course_name": "ADVD TPCS PROG LANGU", 
    "course_rating": 4.57, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.57, 
    "numRatings": 1, 
    "prereqs": "Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef14.html this link for the most recent schedule updates.", 
    "professors": {
        "ALDRICH": [
            4.57, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5795", 
    "course_name": "APPLCTNS COG SCIENCE", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KLATZKY": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15812", 
    "course_name": "PROG LANG SEMANTICS", 
    "course_rating": 3.7649999999999997, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.125, 
    "numRatings": 2, 
    "prereqs": "Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.\n\nDescription: We survey the theory behind the design, description, and implementation of programming languages, and of methods for specifying and verifying program behavior. Both imperative and functional programming languages are covered, as well as ways of integrating these paradigms into more general languages. Coverage will include:\n\n- program specification and proof (including Hoare logic, weakest preconditions, and separation logic)\n\n- concurrent programming (including shared-variable and message-passing approaches) \n\n- functional programing (including continuations and lazy evaluation)\n\n- type systems (including subtyping, polymorphism, and modularization)\n\nIn exploring these topics, we will use a variety of fundamental concepts and techniques, such as compositional semantics, binding structure, domains, transition systems, and inference rules.", 
    "professors": {
        "BROOKES": [
            3.7649999999999997, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5813", 
    "course_name": "HUMAN FACTORS", 
    "course_rating": 4.33, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.19, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DABBISH": [
            4.33, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15814", 
    "course_name": "TYPE SYSTM PROG LANG", 
    "course_rating": 3.82, 
    "description": "CLASSES WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 9TH\r\n\r\nDescription: \r\nThis is an introductory course on the foundations of programming languages. The central organizing principle of language design is the identification of language features with types. The theory of programming languages, therefore, reduces to the theory of types. Type theory is a comprehensive foundational theory of computation. Type theory has its orgins in proof theory (the theory of human reason) and is closely related to category theory (the general theory of mathematical structures). The tripartite relationship between type theory, proof theory, and category theory is fundamental to the study of programming languages. We will place special emphasis on the propositions-as-types correspondence, in which programs of a type are identified with proofs of the corresponding proposition. (Similar correspondences hold between type theory and category theory (types are objects, programs are maps) and between category theory and proof theory (propositions are objects, proofs are maps), but we shall not consider these in this course.) \r\n\r\nPlease refer to href=\"http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 13.64, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "CRARY": [
            3.82, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "15816", 
    "course_name": "ADV TOPICS IN LOGIC", 
    "course_rating": 4.92, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.15, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "PFENNING": [
            4.92, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15817", 
    "course_name": "GRAD VERFCTN SEMINAR", 
    "course_rating": 3.95, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.95, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "CLARKE": [
            3.95, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16741", 
    "course_name": "MECH OF MANIPULATION", 
    "course_rating": 4.45, 
    "description": "Kinematics, statics, and dynamics of robotic manipulator's interaction with a task, focusing on intelligent use of kinematic constraint, gravity, and frictional forces. Automatic planning based on mechanics. Application examples drawn from manufacturing and other domains.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 6.583333333333333, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "Mason": [
            4.45, 
            3
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "17619", 
    "course_name": "INTRO RT SFTWR SYSTM", 
    "course_rating": 4.6, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 11.915, 
    "numRatings": 2, 
    "prereqs": "Introduction to Real-Time Software and Systems presents an overview of time as it relates engineering complex systems. Any system that responds at the pace of relevant events has real-time constraints whether the timescale is short, like the flight controls for an aircraft, or longer, like the flight reservation system for an airline.\r\n\r\nFundamental concepts, terminology, and issues of real-time systems are introduced in this course. The focus is on software solutions to real-time problems\ufffdsolutions that must be both correct and timely. Software development is examined with emphasis on real-time issues during each phase of the software lifecycle. Real-time requirements analysis, architecting real-time systems, designing and modeling system timing, and implementation and testing strategies are studied. Modeling techniques using UML 2.0 are applied. Particular emphasis is placed on real-time scheduling to achieve desired timing, reliability, and robustness. Languages and operating systems for real-time computing, and real-time problems in concurrent and distributed systems are explored.\r\n\r\nThis course provides a comprehensive view of real-time systems with theory, techniques and methods for the practitioner. After successfully completing this course, the student will be able to identify constraints and understand real-time issues in system development, and propose approaches to typical real-time problems. The aim of this course is to motivate and prepare students to pursue more in-depth study of specific problems in real-time computing and systems development.\r\n\r\nREQUIREMENT: Proficiency with a high-level programming language such as C or Ada and basic concepts of computing systems. Familiarity with software engineering concepts and system development lifecycle.", 
    "professors": {
        "CLARK": [
            4.6, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "16745", 
    "course_name": "DYNAMIC OPTIMIZTN", 
    "course_rating": 3.83, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.035, 
    "numRatings": 2, 
    "prereqs": "This course surveys the use of optimization (especially optimal\r\ncontrol) to design behavior.  We will explore ways to represent\r\npolicies including hand-designed parametric functions, basis\r\nfunctions, tables, and trajectory libraries. We will also explore\r\nalgorithms to create policies including parameter optimization and\r\ntrajectory optimization (first and second order gradient methods,\r\nsequential quadratic programming, random search methods, evolutionary\r\nalgorithms, etc.).  We will discuss how to handle the discrepancy\r\nbetween models used to create policies and the actual system being\r\ncontrolled (evaluation and robustness issues). The course will combine\r\nlectures, student-presented material, and projects. The goal of this\r\ncourse will be to help participants find the most effective methods\r\nfor their problems.", 
    "professors": {
        "ATKESON": [
            3.83, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "17610", 
    "course_name": "RSK MNGT SFTW IN PRJ", 
    "course_rating": 4.928571428571429, 
    "description": "It is estimated that half of all software projects fail to meet initial requirements, cost, schedule and/or customer expectations due to problems that occur during the development life cycle.  Some of these problems began as risks that, if properly identified, analyzed and mitigated, should not have escalated to the problem state. Despite its benefits, the practice of risk management in industry is ad-hoc, inconsistent, and often ineffective, leading decision makers to make poor choices based upon lack of, or mis-communicated, information.\n\nThe goal of this course is to develop risk managers; individuals who are capable of identifying both the risks and the underlying factors influencing them in order make better project decisions. Students will become familiar with existing tools, techniques and strategies that serve to identify, analyze and assist in mitigating or avoiding risks.\n\nAt the end of the course, students will have gained confidence in their ability to apply a range of risk management techniques to a software intensive project.\nStudents need to be software engineering students.  All others, please contact instructor (droot@cs.cmu.edu) for registration.", 
    "endTime": "", 
    "hrsPerWeek": 7.828571428571428, 
    "numRatings": 7, 
    "prereqs": "None", 
    "professors": {
        "ROOT": [
            4.875, 
            4
        ], 
        "ROSSO-LLOPART": [
            5.0, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17615", 
    "course_name": "SFTWR PROCS DEFINTN", 
    "course_rating": 4.4675, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.1875, 
    "numRatings": 4, 
    "prereqs": "A software process definition is the cornerstone of implementing and improving a software process.  The objective of this course is to prepare students to understand how processes work within the context of an operational, day-to-day engineering company, and most importantly how they can, as an individual within an engineering environment, change a process for the betterment of all. Although the focus is on software process, this course will be useful to all students who will be executing, improving, or defining most any type of process.\n\nAn incremental methodology and modular approach to software process definition is used and covers: \n                                  \n* guidelines for early success and building a sound foundation\n* organizing the process definition as it develops\n* approaches to avoid unnecessarily elaborate or formal notations\n* developing the process using organizational goals and constraints \n* using the environmental context that the process resides within and builds upon\n\nAlthough the focus is on software process, this course will be useful to all students who will be executing, improving, or defining most any type of process.\n\nRequirement:\nThis course is intended for individuals who have operational software engineering experience or a comprehensive undergraduate coursework in software engineering.", 
    "professors": {
        "ROZUM": [
            4.4675, 
            4
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "15780", 
    "course_name": "GRAD ARTIFICL INTELL", 
    "course_rating": 4.135, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 13.0425, 
    "numRatings": 4, 
    "prereqs": "Description: This course is targeted at graduate students who want to learn about and perform current-day research in artificial intelligence---the discipline of designing intelligent decision-making machines.  Techniques from probability, statistics, game theory, algorithms, operations research and optimal control are increasingly important tools for improving the intelligence and autonomy of machines, whether those machines are robots surveying Antarctica, schedulers moving billions of dollars of inventory, spacecraft deciding which experiments to perform, or vehicles negotiating for lanes on the freeway. This course covers the core of AI from a modern perspective.  The course will cover the core ideas, their implementation, and how to use them or extend them in your research.  The course includes a final project of each student's choosing.\n\nPlease refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.", 
    "professors": {
        "HEBERT": [
            4.5, 
            1
        ], 
        "PROCACCIA": [
            4.22, 
            1
        ], 
        "SANDHOLM": [
            3.52, 
            1
        ], 
        "VELOSO": [
            4.3, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15781", 
    "course_name": "MACHINE LEARNING", 
    "course_rating": 2.976, 
    "description": "Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 15.0, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "BAR-JOSEPH": [
            1.5, 
            1
        ], 
        "GORDON": [
            4.13, 
            1
        ], 
        "POCZOS": [
            3.5, 
            1
        ], 
        "SMOLA": [
            2.875, 
            2
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15663", 
    "course_name": "COMPUTATNL PHOTGRPHY", 
    "course_rating": 4.67, 
    "description": "Computational Photography is an emerging new field created by the\r\nconvergence of computer graphics, computer vision and\r\nphotography. Its role is to overcome the limitations of the\r\ntraditional camera by using computational techniques to produce a\r\nricher, more vivid, perhaps more perceptually meaningful\r\nrepresentation of our visual world.\r\n\r\nThe aim of this advanced undergraduate course is to study ways in\r\nwhich samples from the real world (images and video) can be used to\r\ngenerate compelling computer graphics imagery. We will learn how to\r\nacquire, represent, and render scenes from digitized photographs.\r\nSeveral popular image-based algorithms will be presented, with an\r\nemphasis on using these techniques to build practical systems. This\r\nhands-on emphasis will be reflected in the programming assignments, in\r\nwhich students will have the opportunity to acquire their own images\r\nof indoor and outdoor scenes and develop the image analysis and\r\nsynthesis tools needed to render and view the scenes on the computer.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 13.33, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "KITANI": [
            4.67, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "15662", 
    "course_name": "COMPUTER GRAPHICS", 
    "course_rating": 4.32, 
    "description": "This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 17.185000000000002, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "NARASIMHAN": [
            4.21, 
            1
        ], 
        "POLLARD": [
            4.43, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15666", 
    "course_name": "COMPTR GAME PROGRMNG", 
    "course_rating": 4.09, 
    "description": "The goal of the course is two-fold. The first goal is to teach students \r\nsome of the higher-level techniques that are necessary to implement \r\ninteresting computer games. In particular, a large emphasis will be on \r\ngame AI. The class will also cover such topics as game networking, \r\nscheduling of tasks in computationally intensive games, and game design. \r\nThe class will also briefly cover few selected topics such as collision \r\ndetection and physically-based animation that are good to know even if one \r\nis developing games using a game engine. The second goal of the class is \r\nto get students familiar with programming games on various platforms using \r\nstate-of-the-art game engines. To this end, the course will have a heavy \r\nprogramming focus. It will have a number of projects requiring students to \r\napply the learned material to develop games using Unity 3D game engine. \r\nThe students will develop games that run on a standalone PC, games that \r\nrun on an Android platform and games that work in a multi-user mode.\r\nIn addition to learning the material and learning how to use game engines, \r\nthe projects will provide students with portfolios of games they have \r\ndeveloped. Such a portfolio is important in getting a job in game \r\nindustry.\r\n\r\nPREREQUISITE: 15-462, or contact the instructor for permission", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 13.55, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "LIKHACHEV": [
            4.09, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15664", 
    "course_name": "TECHNICAL ANIMATION", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.8, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "POLLARD": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2223", 
    "course_name": "HOW ANLYZ OWN GENME", 
    "course_rating": 2.575, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 4.925, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KIM": [
            2.575, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "10831", 
    "course_name": "SP TPC: MCH LN & PLY", 
    "course_rating": 5.0, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 2, 
    "prereqs": "Special Topics in Machine Learning and Policy (90-921/10-831) is intended\nfor Ph.D. students in Heinz College, MLD, and other university departments\nwho wish to engage in detailed exploration of a specific topic at the\nintersection of machine learning and public policy. Qualified master's\nstudents may also enroll with permission of the instructor; all students\nare expected to have some prior background in machine learning and data\nmining (10-601, 10-701, 90-866, 90-904/10-830, or a similar course).\n\nWe will explore state-of-the-art methods for detection of emerging events and\nother relevant patterns in massive, high-dimensional datasets, and discuss\nhow such methods can be applied usefully for the public good in medicine,\npublic health, law enforcement, security, and other domains. The course\nwill consist of lectures, discussions on current research articles and\nfuture directions, and course projects. Specific topics to be covered may\ninclude: anomaly detection, change-point detection, time series\nmonitoring, spatial and space-time scan statistics, pattern detection in\ngraph data, submodularity and LTSS properties for efficient pattern\ndetection, combining multiple data sources, scaling up pattern detection\nto massive datasets, applications to public health, law enforcement,\nhomeland security, and health care.\n\nA sample syllabus is available at:\nhttp://www.cs.cmu.edu/~neill/courses/90921-S10.html", 
    "professors": {
        "NEILL": [
            5.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "10830", 
    "course_name": "RSRCH SM MACH LRN PL", 
    "course_rating": 4.776666666666666, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 6.333333333333333, 
    "numRatings": 3, 
    "prereqs": "The Research Seminar in Machine Learning and Policy (90-904/10-830) is\r\nintended for Ph.D. students in Heinz College, the Machine Learning\r\nDepartment, and other university departments who wish to engage in\r\ncutting-edge research at the intersection of machine learning and public\r\npolicy. Qualified master's students may also enroll with permission of the\r\ninstructor; all students are expected to have some prior background in\r\nmachine learning and/or artificial intelligence (10-601, 10-701, 90-866,\r\nor a similar course).\r\n\r\nThe course has three main objectives: 1) to facilitate in-depth\r\ndiscussions of current research articles and essential topics in machine\r\nlearning and policy, 2) to benefit the students' own ongoing research\r\nprojects through presentations, critiques, and discussions, and 3) to\r\nencourage interdisciplinary research collaborations between students in\r\nHeinz, MLD, and other departments. We plan to achieve these goals through\r\na discussion-based course format: students will present and discuss\r\ncurrent research articles on selected topics in machine learning and\r\npolicy, as well as giving presentations on their ongoing research projects\r\nand/or smaller-scale course projects in this domain.", 
    "professors": {
        "NEILL": [
            4.776666666666666, 
            3
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15446", 
    "course_name": "ST:NTWRKD SYS PRACT", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SESHAN": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15441", 
    "course_name": "COMPUTER NETWORKS", 
    "course_rating": 3.5100000000000002, 
    "description": "The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.\r\n\r\nThe goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,\r\npeer-to-peer and the web, internetworking, and network security.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 16.7725, 
    "numRatings": 4, 
    "prereqs": "15213", 
    "professors": {
        "ANDERSON": [
            2.56, 
            1
        ], 
        "HARRAS": [
            5.0, 
            1
        ], 
        "STEENKISTE": [
            3.6, 
            1
        ], 
        "ZHANG": [
            2.88, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15440", 
    "course_name": "DISTRIBUTED SYSTEMS", 
    "course_rating": 4.208, 
    "description": "The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.\n\nThe major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 12.857999999999999, 
    "numRatings": 5, 
    "prereqs": "15213", 
    "professors": {
        "HAMMOUD": [
            4.67, 
            1
        ], 
        "KESDEN": [
            4.0925, 
            4
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "16362", 
    "course_name": "MOBILE ROB PRGRM LAB", 
    "course_rating": 5.0, 
    "description": "This course is a comprehensive hands-on introduction to the concepts and basic algorithms needed to make a mobile robot function reliably and effectively. We will work in small groups with small robots that are controlled over wireless from your laptop computers. The robots are Neato household vacuum robots that have been converted to mini forktrucks that can move pallets from place to place just like commercial automated guided vehicles do today. The robots are programmed in the modern MATLAB programming environment. It is a pretty easy language to learn, and a very powerful one for prototyping robotics algorithms.\n \nYou will get a lot of experience in this course in addition to some theory. Lectures are focussed on the content of the next lab. There is a lab every week and they build on each other so that a complete robot software system results. The course will culminate with a class-wide robot competition that tests the performance of all of your code implemented in the semester. In order to succeed in the course, students must have a 2nd year science/engineering level background in mathematics (matrices, vectors, coordinate systems) and have already mastered at least one procedural programming language like C or Java. When the course is over, you will have written a single software system that has been incrementally extended in functionality and regularly debugged throughout the semester.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 16.63, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "KELLY": [
            5.0, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "53886", 
    "course_name": "WHY TYPOGRPY MTR MED", 
    "course_rating": 5.0, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.25, 
    "numRatings": 1, 
    "prereqs": "This course will explore how typography and graphic design will be developed to produce engaging and innovative visual information for entertainment in the interactive medium. Discussion will include the history of typography across the entertainment industry, and the role of typography in marketing games, film, and television. Students will produce unique projects that express their creative visual communication and technical skills for successful design solutions in the interactive medium.", 
    "professors": {
        "YEE": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "16697", 
    "course_name": "MRSD BUSINESS SEMN 1", 
    "course_rating": 4.5, 
    "description": "Students will be required to participate in a two-semester on-campus seminar-style lecture and team-project class. These two mini-courses will cover technical, business, management, finance, production, marketing & sales and writing/presentation topics at a broad yet deep enough level, to allow students to participate in individual teams towards the creation of a Technology Development Plan (TDP; akin to a Business Plan with less emphasis on detailed monthly cash-flow). Speakers from academia (technical, business) and industry (production, case-studies, etc.) will cover a myriad number of topics to provide students the foundation to be able to compose a TDP. The Technology Plan is expected to cover all aspects required by a company to define a new product development: analyze the competition and market opportunity, detail the envisioned product, lay out the development path and its required resources (personnel, facilities, hardware, etc.), plan out (time, resources & cost) the production-readiness activities, develop costing and pricing models and develop a marketing and sales plan for the product introduction. All these elements will form part of the TDP, which will be submitted as a final report and orally presented by the team to the class / faculty at the conclusion of the two-semester course.\r\n\r\nThe course will be taught using a weekly lecture series. The format of the lectures will be based on the coverage of key topics of importance to understanding the connections between technology (design, development, etc.), management (leadership, teaming, negotiations, etc.) and business (finance, etc.), marketing/sales, intellectual property protection and manufacturing and pricing. Students will be expected to form development teams and have out-of-class team-meetings to self-organize themselves and work on their joint TDP.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 8.28, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "SCHEMPF": [
            4.5, 
            1
        ]
    }, 
    "startTime": "10:00AM", 
    "units": ""
}
{
    "cid": "16698", 
    "course_name": "MRSD BUSINESS SEMNR", 
    "course_rating": 4.46, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 6.145, 
    "numRatings": 2, 
    "prereqs": "Students will be required to participate in a two-semester on-campus seminar-style lecture and team-project class. These two mini-courses will cover technical, business, management, finance, production, marketing & sales and writing / presentation topics at a broad yet deep enough level, to allow students to participate in individual teams towards the creation of a Technology Development Plan (TDP; akin to a Business Plan with less emphasis on detailed monthly cash-flow). Speakers from academia (technical, business) and industry (production, case-studies, etc.) will cover a myriad number of topics to provide students the foundation to be able to compose a TDP. The Technology Plan is expected to cover all aspects required by a company to define a new product development: analyze the competition and market opportunity, detail the envisioned product, lay out the development path and its required resources (personnel, facilities, hardware, etc.), plan out (time, resources & cost) the production-readiness activities, develop costing and pricing models and develop a marketing and sales plan for the product introduction. All these elements will form part of the TDP, which will be submitted as a final report and orally presented by the team to the class / faculty at the conclusion of the two-semester course.", 
    "professors": {
        "SCHEMPF": [
            4.46, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "11713", 
    "course_name": "ADVANCED NLP SEMINAR", 
    "course_rating": 4.67, 
    "description": "This course aims to improve participants' knowledge of current techniques, challenges, directions, and developments in all areas of NLP (i.e., across applications, symbolic formalisms, and approaches to the use of data and knowledge); to hone students' critical technical reading skills, oral presentation skills, and written communication skills; to generate discussion among students across research groups to inspire new research. In a typical semester, a set of readings will be selected (with student input) primarily from the past 2-3 years' conference proceedings (ACL and regional variants, EMNLP, and COLING), journals (CL, JNLE), and relevant collections and advanced texts. Earlier papers may be assigned as background reading. In 2010, the readings will primarily be recent dissertations in NLP. The format of each meeting will include a forty-minute, informal, critical student presentation on the week's readings, with presentations rotating among participants, followed by general discussion. Apart from the presentation and classroom participation, each student will individually write a 3-4-page white paper outlining a research proposal for new work extending research discussed in class - this is similar to the Advanced IR Seminar.", 
    "endTime": "07:20PM", 
    "hrsPerWeek": 4.5, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "SMITH": [
            4.67, 
            1
        ]
    }, 
    "startTime": "06:00PM", 
    "units": ""
}
{
    "cid": "11712", 
    "course_name": "LAB IN NLP", 
    "course_rating": 3.335, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 4.5, 
    "numRatings": 2, 
    "prereqs": "The Self-Paced Lab in NLP Algorithms is intended to complement the 11-711 lecture course by providing a chance for hands-on, in-depth exploration of various NLP paradigms. Students will study a set of on-line course materials and complete a set of programming assignments illustrating the concepts taught in the lecture course. Timing of individual assignments is left up to the student, although all assignments must be successfully completed and turned in before the end of the semester for the student to receive credit for the course.", 
    "professors": {
        "LAVIE": [
            3.0, 
            1
        ], 
        "SMITH": [
            3.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "11711", 
    "course_name": "ALGORITHMS FOR NLP", 
    "course_rating": 4.24, 
    "description": "Algorithms for NLP is an introductory graduate-level course on the computational properties of natural languages and the fundamental algorithms for processing natural languages. The course will provide an in-depth presentation of the major algorithms used in NLP, including Lexical, Morphological, Syntactic and Semantic analysis, with the primary focus on parsing algorithms and their analysis.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 12.656666666666666, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "FREDERKING": [
            4.0, 
            1
        ], 
        "LAVIE": [
            4.32, 
            1
        ], 
        "SMITH": [
            4.4, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "8766", 
    "course_name": "MOBL PERVASV COMP SV", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.416666666666667, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "SADEH": [
            4.5, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8761", 
    "course_name": "INFO SECURTY PRIVACY", 
    "course_rating": 4.6, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.4, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SADEH": [
            4.6, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8763", 
    "course_name": "INTRO HCI TECH EXECS", 
    "course_rating": 4.55, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.79, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MYERS": [
            4.55, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11714", 
    "course_name": "TOOLS FOR NLP", 
    "course_rating": 4.27, 
    "description": "This course is designed as a hands-on lab to help students interested in NLP build their own compendium of the open-source tools and resources available online.  Ideally taken in the first semester, the course focuses on one basic topic every two weeks, during which each student will download, install, and play with two or three packages, tools, or resources, and compare notes.  The end-of-semester assignment will be to compose some of the tools into a system that does something interesting.  We will cover a range, from the most basic tools for sentence splitting and punctuation removal through resources such as WordNet and the Penn Treebank to parsing and Information Extraction engines.", 
    "endTime": "05:50PM", 
    "hrsPerWeek": 5.21, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "HOVY": [
            4.27, 
            1
        ]
    }, 
    "startTime": "04:30PM", 
    "units": ""
}
{
    "cid": "2530", 
    "course_name": "CELL SYSTMS MODELING", 
    "course_rating": 4.75, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.25, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "LANGMEAD": [
            4.75, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2712", 
    "course_name": "CMPL MTHD BIO MDL SM", 
    "course_rating": 4.6899999999999995, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.0, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "SCHWARTZ": [
            4.6899999999999995, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2713", 
    "course_name": "ALGTHM & DATA STRUCT", 
    "course_rating": 4.19, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KINGSFORD": [
            4.19, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2710", 
    "course_name": "COMPUTATNL GENOMICS", 
    "course_rating": 3.485, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.35, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "BAR-JOSEPH": [
            3.8, 
            1
        ], 
        "KIM": [
            3.17, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2711", 
    "course_name": "CMPT MOLC BLG GENMC", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.78, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DURAND": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2717", 
    "course_name": "ALGORITHMS IN NATURE", 
    "course_rating": 3.67, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "BAR-JOSEPH": [
            3.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2715", 
    "course_name": "ADV TPC COMPTNL GENM", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KIM": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2652", 
    "course_name": "OPPORTUNS BIOTECHNGY", 
    "course_rating": 4.4399999999999995, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.469999999999999, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "VU": [
            4.4399999999999995, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2651", 
    "course_name": "NW TCHNLG FTR MRKTS", 
    "course_rating": 4.175, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.49, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "VU": [
            4.175, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2654", 
    "course_name": "BIOTCHNG ENTRP DEVLP", 
    "course_rating": 4.785, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.785, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "VU": [
            4.785, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15369", 
    "course_name": "SP TPC: PERCPTL COMP", 
    "course_rating": 4.33, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SHEIKH": [
            4.33, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16843", 
    "course_name": "MANIPULATION ALGRTHM", 
    "course_rating": 4.82, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.45, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SRINIVASA": [
            4.82, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17714", 
    "course_name": "SEMR SOCO TCHN ECOSY", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 3.25, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "CATALDO": [
            3.0, 
            1
        ], 
        "GARLAN": [
            4.25, 
            1
        ], 
        "HERBSLEB": [
            4.75, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53650", 
    "course_name": "ETC COOPRTV EDC II", 
    "course_rating": 4.175, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 17.925, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "DAVIDSON": [
            4.175, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15214", 
    "course_name": "PRIN 0-0 SFTWR CONST", 
    "course_rating": 3.8500000000000005, 
    "description": "Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, program structures, and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object oriented programming, (3) static and dynamic analysis for programs, and (4) concurrent and distributed software. Student assignments involve engagement with complex software such as distributed massively multi-player game systems and frameworks for graphical user interaction.", 
    "endTime": "10:20AM", 
    "hrsPerWeek": 11.51, 
    "numRatings": 9, 
    "prereqs": "(15121 or 15122) and (21127 or 15151)", 
    "professors": {
        "ALDRICH": [
            3.6166666666666667, 
            3
        ], 
        "GARROD": [
            4.11, 
            3
        ], 
        "KASTNER": [
            3.56, 
            1
        ], 
        "SANS": [
            4.67, 
            1
        ], 
        "SCHERLIS": [
            3.24, 
            1
        ]
    }, 
    "startTime": "09:00AM", 
    "units": ""
}
{
    "cid": "15212", 
    "course_name": "PRINCIPLES PROGRAMMG", 
    "course_rating": 4.465, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.1825, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "CERVESATO": [
            4.5, 
            2
        ], 
        "SANS": [
            4.43, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15213", 
    "course_name": "INTR CMPUTER SYSTEMS", 
    "course_rating": 4.4235, 
    "description": "This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation.\r\n\r\nNOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 14.338999999999999, 
    "numRatings": 20, 
    "prereqs": "15122", 
    "professors": {
        "Bryant": [
            4.5, 
            2
        ], 
        "GANGER": [
            4.25, 
            1
        ], 
        "GOLDSTEIN": [
            4.31, 
            1
        ], 
        "HARRAS": [
            4.605, 
            2
        ], 
        "KESDEN": [
            4.35, 
            8
        ], 
        "MOWRY": [
            4.35, 
            1
        ], 
        "OHALLARON": [
            4.516666666666667, 
            3
        ], 
        "ROWE": [
            4.5, 
            2
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15210", 
    "course_name": "PRL SEQ DATA STR ALG", 
    "course_rating": 3.591249999999999, 
    "description": "Teaches students about how to design, analyze, and program algorithms and data structures.  The course emphasizes parallel algorithms and analysis, and how sequential algorithms can be considered a special case.  The course goes into more theoretical content on algorithm analysis than 15-122 and 15-150 while still including a significant programming component and covering a variety of practical applications such as problems in data analysis, graphics, text processing, and the computational sciences.\n\nNOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer \nScience course.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 13.41375, 
    "numRatings": 16, 
    "prereqs": "15122 and 15150", 
    "professors": {
        "ACAR": [
            4.196666666666666, 
            3
        ], 
        "BLELLOCH": [
            3.98, 
            1
        ], 
        "OFLAZER": [
            3.9, 
            2
        ], 
        "REID-MILLER": [
            3.41, 
            7
        ], 
        "SLEATOR": [
            2.825, 
            2
        ], 
        "TANGWONGSAN": [
            3.57, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "16662", 
    "course_name": "ROBOT AUTONOMY", 
    "course_rating": 4.77, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 14.546666666666667, 
    "numRatings": 3, 
    "prereqs": "Robot autonomy delves into the interplay between perception, manipulation, navigation, and learning required to develop fully autonomous systems. We will focus on application domains like the home, retail, and healthcare and identify common themes and key bottlenecks. We will discuss the state of the art algorithms, their computational and hardware requirements, and their limitations. An end-to-end system often requires mixing and matching various algorithms and you will learn some tried and true methods for making systematic decisions. You will learn how to address clutter and uncertainty in manipulation tasks, develop robust object recognition algorithms in real-world scenes, navigate safely in human spaces, and build behavior engines for high-level tasks, among many other things.", 
    "professors": {
        "SRINIVASA": [
            4.77, 
            3
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15745", 
    "course_name": "OPTMZ CMPLR MOD ARCH", 
    "course_rating": 4.295, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.655, 
    "numRatings": 2, 
    "prereqs": "Description: Theoretical and practical aspects of building optimizing compilers that effectively exploit modern architectures. The course will begin with the fundamentals of compiler optimization, and will build upon these fundamentals to address issues in state-of-the-art commercial and research machines. Topics include: intermediate representations, basic blocks and flow graphs, data flow analysis, partial evaluation and redundancy elimination, loop optimizations, register allocation, instruction scheduling, interprocedural analysis, memory hierarchy optimizations, extracting parallelism, and dynamic optimizations. Students will implement significant optimizations within the framework of a modern research compiler. \nPlease refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.", 
    "professors": {
        "MOWRY": [
            4.295, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15746", 
    "course_name": "ADVANCED STORAGE SYS", 
    "course_rating": 4.655, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 12.902500000000002, 
    "numRatings": 4, 
    "prereqs": "Storage systems are among the most fascinating and the most important parts of computer systems. They often dominate the performance of a system, and their components' inner workings require amazing feats of engineering. At the same time, storage systems hold the crown jewels of most organizations: their information (from source code to Microsoft's software to the sales databases of every e-commerce site). Within the field of computer systems and computer engineering, there is no area whose demand for bright people and better solutions is more robust. \n\nThis course will cover the design, implementation, and use of storage systems, from the characteristics and operation of individual storage devices to the OS, database, and networking approaches involved in tying them together and making them useful. Along the way, we will examine several case studies of real systems, demands placed on storage systems by important applications, and impacts of trends and emerging technologies on future storage systems. \n\nFor those familiar with 18-316 (Intro. to Data Storage Systems Technology) and 18-517 (Data Storage Systems Design Project): one should consider these courses as distinct and complementary, with neither being a pre-requisite to the other. 18-316 and 18-517 focus on the low-level technologies (magnetics, materials, applied physics, etc.) whereas 746 focuses on storage's incorporation and role in computer systems. \n\nPlease refer to http://www.cs.cmu.edu/~csd-grad/courseschedules11.html for the most recent schedule updates.", 
    "professors": {
        "GANGER": [
            4.734999999999999, 
            2
        ], 
        "GIBSON": [
            4.575, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15740", 
    "course_name": "COMPUTER ARCHITECTR", 
    "course_rating": 4.6, 
    "description": "CLASS WILL BEGIN THE WEEK OF SEPTEMBER 9th.\r\n\r\nhttps://www.cs.cmu.edu/~csd-grad/courseschedulef13.html \r\n\r\nPlease refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 14.2, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "GOLDSTEIN": [
            4.6, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "5499", 
    "course_name": "SP TPC IN HCI", 
    "course_rating": 3.6174999999999997, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.875, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "KITTUR": [
            3.4, 
            2
        ], 
        "MORRIS": [
            4.0, 
            1
        ], 
        "ZIMMERMAN": [
            3.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15821", 
    "course_name": "MBLE PERVASIVE COMP", 
    "course_rating": 4.75, 
    "description": "This is a course exploring research issues in the emerging fields of mobile computing and its close relative, pervasive computing. Many traditional areas of computer science and computer engineering are impacted by the constraints and demands of mobile and pervasive computing. Examples include network protocols, power management, user interfaces, file access, usability and security. This will be an \"advanced\" course in the truest sense --- most, if not all, the topics discussed will be ones where there is little consensus in the research community on the best approaches. The course will also offer significant \"hand-on\" experience in this area. \r\nEach student will have to present and lead the discussion on a number of papers. Students will work in groups of three under the guidance of a mentor on a hands-on project. Each student will also be required to write one of two documents based on an idea in mobile and pervasive computing: (a) a research proposal (similar in spirit to an NSF proposal) or (b) a short business plan for a commercial opportunity. Grading will be based on the quality of the presentations, the project, the proposal or business plan, and brief in-class quizzes on the readings. \r\n\r\nPlease refer to href=\"http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.", 
    "endTime": "05:50PM", 
    "hrsPerWeek": 14.0, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "SATYANARAYANAN": [
            4.67, 
            1
        ], 
        "SIEWIOREK": [
            4.83, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "8801", 
    "course_name": "DYNAMC NETWRK ANALYS", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.4, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "CARLEY": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15826", 
    "course_name": "MLTIMEDIA DB & DMING", 
    "course_rating": 4.85, 
    "description": "Please refer to href=\"http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.  CLASS WILL NOT BEGIN UNTIL THE WEEK OF SEPTEMBER 9TH.\r\n\r\nDESCRIPTION\r\n\r\nThe course covers advanced algorithms for learning, analysis, data management and visualization of large datasets. Topics include indexing for text and DNA databases, searching medical and multimedia databases by content, fundamental signal processing methods, compression, fractals in databases, data mining, privacy and security issues, rule discovery, data visualization, graph mining, stream mining.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 13.63, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "FALOUTSOS": [
            4.85, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15829", 
    "course_name": "SP TPCS SOFTWARE SYS", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.25, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "ANDERSEN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17622", 
    "course_name": "EST SFT DEV MNTN PRJ", 
    "course_rating": 4.69, 
    "description": "Time, resources, and money are the three criteria by which society and organizations decide what gets built, how it is built, and by whom.  The importance of having credible and reliable estimates of these quantities cannot be overstressed. The objective of this course is to help students understand how to develop estimates for software development and maintenance projects, how to communicate them to others, and how to include them in a contract. Although the orientation is basically quantitative, the course will delve into the cognitive biases and the administrative behaviors that affect the estimation process.  Foundational knowledge of probability and statistics, along with an understanding of algebra and basic calculus, is expected.  \r\n\r\nNote:  this 9-unit course is offered in a compressed summer schedule.  Classes will meet twice weekly from 9:30 a.m - 12:20 p.m., beginning on May 21 and ending June 27.\r\n\r\nThis course is for letter grade only - not pass/fail", 
    "endTime": "", 
    "hrsPerWeek": 11.5, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "MIRANDA": [
            4.69, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17624", 
    "course_name": "OPEN SOURCE SOFTWRE", 
    "course_rating": 4.6899999999999995, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.895, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "DANIEL": [
            4.6899999999999995, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17627", 
    "course_name": "SFTW SECTY ENGINRG", 
    "course_rating": 4.29, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.375, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "MEAD": [
            4.29, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17626", 
    "course_name": "AGILE METHODS", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.2, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "PAULK": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16899", 
    "course_name": "SPECIAL TOPICS", 
    "course_rating": 4.94, 
    "description": "16-899D - This class aims to discuss approaches that harness the increasing amount of visual data available on the Internet. Facebook and Flickr has more than billion images; 80hrs of video is uploaded on YouTube every minute. According to Cisco, visual data will soon account for more than 90% of Internet traffic, yet most Big Data research remains confined to web text. The overall goal of this class is to foster discussion which will lead to big data vision research with the goal of making large-scale visual data (i.e. \nimages and video, along with meta-data such as 3D depth and geo-tags) into a first-class citizen.\n\n16-899F - Soft Robots", 
    "endTime": "", 
    "hrsPerWeek": 9.363333333333333, 
    "numRatings": 3, 
    "prereqs": "(10701 or 15781) and (16720)", 
    "professors": {
        "BAGNELL": [
            4.82, 
            1
        ], 
        "NOURBAKHSH": [
            5.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17628", 
    "course_name": "THE MODERN CIO", 
    "course_rating": 4.14, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.29, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MILHOLLAND": [
            4.14, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8200", 
    "course_name": "ETHCS POLICY CMPTNG", 
    "course_rating": 4.665, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.25, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "HERBSLEB": [
            4.665, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15131", 
    "course_name": "GREAT PRAC IDEAS CS", 
    "course_rating": 4.13, 
    "description": "THIS COURSE IS OPEN TO CS FRESHMAN ONLY. Throughout your education as a Computer Scientist at Carnegie Mellon, you will take courses on programming, theoretical ideas, logic, systems, etc. As you progress, you will be expected to pick up the so-called \"tools of the trade.\" This course is intended to help you learn what you need to know in a friendly, low-stress, high-support way. We will discuss UNIX, LaTeX, debugging and many other essential tools. Laptop required. (Laptops will be available for those without their own laptops.)", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 2.66, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "CARRASQUEL": [
            4.13, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "16711", 
    "course_name": "KNMTCS DYN SYS & CTL", 
    "course_rating": 4.390000000000001, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.25, 
    "numRatings": 2, 
    "prereqs": "Kinematics, Dynamic Systems, and Control is a graduate level introduction to robotics. The course covers fundamental concepts and methods to analyze, model and control robotic mechanisms which move in the physical world and manipulate it.\n\nShort Syllabus:\n\nJan-Feb Kinematics\n    Rigid Body Fundamentals (Screw Theory)\n    Multi-Body Robots (Forward/Inverse Kinematics, Jacobian)\n\nFeb-Mar Dynamics\n    Fundamentals (Principle of Virtual Work/Power, Lagrange, Inertia Tensor) \n    Multi-Body Robots (EOMs, Forward/Inverse Dynamics)\n\nMar-Apr Control\n    Fundamentals (LTI, PID, Observers)\n    Multi-Body Robots (Motion & Force Control)", 
    "professors": {
        "GEYER": [
            4.390000000000001, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11756", 
    "course_name": "THRY PRAC SPEECH SYS", 
    "course_rating": 5.0, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.0, 
    "numRatings": 2, 
    "prereqs": "Voice recognition systems invoke concepts from a variety of fields including speech production, algebra, probability and statistics, information theory, linguistics, and various aspects of computer science. Voice recognition has therefore largely been viewed as an advanced science, typically meant for students and researchers who possess the requisite background and motivation.\n\nIn this course we take an alternative approach. We present voice recognition systems through the perspective of a novice. Beginning from the very simple problem of matching two strings, we present the algorithms and techniques as a series of intuitive and logical increments, until we arrive at a fully functional continuous speech recognition system.\n\nFollowing the philosophy that the best way to understand a topic is to work on it, the course will be project oriented, combining formal lectures with required hands-on work. Students will be required to work on a series of projects of increasing complexity. Each project will build on the previous project, such that the incremental complexity of projects will be minimal and eminently doable. At the end of the course, merely by completing the series of projects students would have built their own fully-functional speech recognition systems.\n\nGrading will be based on project completion and presentation.", 
    "professors": {
        "RAMAKRISHNAN": [
            5.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11755", 
    "course_name": "MACHINE LRNG SGN PRC", 
    "course_rating": 4.86, 
    "description": "Signal Processing is the science that deals with extraction of information from signals of various kinds. This has two distinct aspects -- characterization and categorization. Traditionally, signal characterization has been performed with mathematically-driven transforms, while categorization and classification are achieved using statistical tools. \r\n\r\nMachine learning aims to design algorithms that learn about the state of the world directly from data. \r\n\r\nA increasingly popular trend has been to develop and apply machine learning techniques to both aspects of signal processing, often blurring the distinction between the two. \r\n\r\nThis course discusses the use of machine learning techniques to process signals. We cover a variety of topics, from data driven approaches for characterization of signals such as audio including speech, images and video, and machine learning methods for a variety of speech and image processing problems.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 15.57, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "RAMAKRISHNAN": [
            4.86, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "11754", 
    "course_name": "PROJ DIALOG SYSTEMS", 
    "course_rating": 4.3100000000000005, 
    "description": "This course will teach participants how to implement a complete spoken language system while providing opportunities to explore research topics of interest in the context of a functioning system. The course will produce a complete implementation of a system to access and manipulate email through voice only, for example to allow users to interact with the mail system over a telephone while away from their computer. In doing so the class will address the component activities of spoken language system building. These include, but are not limited to, task analysis and language design, application-specific acoustic and language modeling, grammar design, task design, dialog management, language generation and synthesis. The course will place particular emphasis on issues in task design and dialog management and on issues in language generation and synthesis. \r\n\r\nFor Fall, we will implement a simple telephone-based information access application. The domain is bus schedules (see http://www.speech.cs.cmu.edu/BusLine for a web-based interface to this domain) and the goal will be to create one or more usable applications that can provide a real service and can be deployed for actual use by the University community. Participants will chose individual components of the system to concentrate on and will collaborate to put together the entire system. It is perfectly acceptable for several individuals to concentrate on a single component, particularly if their work will exemplify alternative approaches to the same problem.", 
    "endTime": "", 
    "hrsPerWeek": 8.465, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "BLACK": [
            4.33, 
            1
        ], 
        "RUDNICKY": [
            4.29, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11753", 
    "course_name": "ADV LAB SPEECH REC", 
    "course_rating": 4.585, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 5.75, 
    "numRatings": 2, 
    "prereqs": "The technology to allow humans to communicate by speech with machines or by which machines can understand when humans communicate with each other is rapidly maturing. While the 11-751 speech course focussed on an introduction to the theoretical foundations, essential algorithms, major approaches, and strategies for current state-of-the-art systems, the 11-753 speech lab complements the education by concentrating on the experimental practice in developing speech recognition and understanding speech-based systems, and by getting hands-on experience on relevant research questions using state-of-the art tools. Possible problem sets include both core speech recognition technology, and the integration of speech-based components into multi-modal, semantic, learning, or otherwise complex systems and interfaces.", 
    "professors": {
        "METZE": [
            4.585, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "11752", 
    "course_name": "SPEECH II", 
    "course_rating": 4.085, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 6.25, 
    "numRatings": 2, 
    "prereqs": "The goal of the course is to give the student basic knowledge from several fields that is necessary in order to pursue research in automatic speech processing. The course will begin with a study of the acoustic content of the speech signal. The students will use the spectrographic display to examine the signal and discover its variable properties. Phones in increasingly larger contexts will be studied with the goal of understanding coarticulation. Phonological rules will be studied as a contextual aid in understanding the spectrographic display. The spectrogram will then serve as a first introduction to the basic elements of prosody. Other displays will then be used to study the three parts of prosody: amplitude, duration, and pitch. Building on these three elements, the student will then examine how the three interact in careful and spontaneous speech. \r\n\r\nNext, the students will explore perception. Topics covered will be: \r\nphysical aspects of perception, psychological aspects of perception, testing perception processes, practical applications of knowledge about perception. \r\nThe second part of this course will cover all aspects of speech synthesis. \r\n\r\nStudents need only have a basic knoweldge of speech and language processing. Some degree of programming and statistical modelling will be beneficial, but not required.\r\n\r\nTaught every other year", 
    "professors": {
        "BLACK": [
            4.5, 
            1
        ], 
        "ESKENAZI": [
            3.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11751", 
    "course_name": "SPCH RECOGN & UNDSTG", 
    "course_rating": 3.8, 
    "description": "The technology to allow humans to communicate by speech with machines or by which machines can understand when humans communicate with each other is rapidly maturing. This course provides an introduction to the theoretical tools as well as the experimental practice that has made the field what it is today. We will cover theoretical foundations, essential algorithms, major approaches, experimental strategies and current state-of-the-art systems and will introduce the participants to ongoing work in representation, algorithms and interface design. This course is suitable for graduate students with some background in computer science and electrical engineering, as well as for advanced undergraduates. Prerequisites: Sound mathematical background, knowledge of basic statistics, good computing skills. No prior experience with speech recognition is necessary. This course is primarily for graduate students in LTI, CS, Robotics, ECE, Psychology, or Computational Linguistics. Others by prior permission of instructor.", 
    "endTime": "05:50PM", 
    "hrsPerWeek": 8.8, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "METZE": [
            3.8, 
            1
        ]
    }, 
    "startTime": "04:30PM", 
    "units": ""
}
{
    "cid": "11695", 
    "course_name": "COMPETITIVE ENGNRG", 
    "course_rating": 4.5, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.833333333333334, 
    "numRatings": 3, 
    "prereqs": "In the second core course, students will be tasked with building a software application prototype for a biotech/pharmaceutical firm. Students will be introduced to a particular firm (through one of the program advisors) and will learn how to conduct and develop requirements analysis and convert that into feature definition. The customer requirements are often a moving target: they're influenced by the emergence of competitive alternatives (e.g. internal consultants, off-the-shelf software) and also by the team interaction with each others. Students will learn to create a product that best captures the best balance of the customer priorities and feasibility and distinguishing it from competitive alternatives. They will then use this learning to develop their respective prototypes. At the conclusion of the term, teams will compete with each other to determine which team's product is superior. In addition to having to apply various aspects of software development and computational learning, the course will help to provide students with some key insights into how biotech/pharmaceutical businesses operate.\r\n\r\n\r\n\r\nIn addition to concepts regarding market demand, students will learn how to aggregate and synthesize information related to demand, pricing and competition. They will then apply this learning to define and prioritize market driven requirements as it relates to a product. This information will then be used to build a product development plan. Students will utilize methods to enhance product quality and customer satisfaction: benchmarking; industry and customer analyses; project metrics, and a range of customer relationship management tools.", 
    "professors": {
        "NYBERG": [
            4.625, 
            2
        ], 
        "VU": [
            4.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11693", 
    "course_name": "SFTW MTHS BIOTCHLGY", 
    "course_rating": 4.0, 
    "description": "Moore's law describes how processing power continues to be faster, better, and cheaper. It not only powered the computer industry forward, but it also is a key driver for propelling biotechnology. It is hard to imagine the world of biotechnology without the world of software. Moreover, the future will further underscore software's importance for enabling biotechnology innovations. \n\nThis course is focusing on the relationship between biotechnology processes and information technology where students will be introduced to business process workflow modeling and how these concepts are applied in large organizations. Through this method, students will learn the key drivers behind information systems and how to identify organizational opportunities and leverage these to create disruptive models. Student will also learn to assess new technology sectors for unsolved problems and commercially viable solutions \n\nBy taking this course, students will become conversant with the software technologies that can be applied to commercial life science problems in the present and future.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 13.67, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "NYBERG": [
            4.0, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "11690", 
    "course_name": "IIS DIRECTED STUDY", 
    "course_rating": 4.5, 
    "description": "to be determined by the department", 
    "endTime": "", 
    "hrsPerWeek": 10.0, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "CALLAN": [
            4.5, 
            1
        ], 
        "HOVY": [
            4.0, 
            1
        ], 
        "NYBERG": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11691", 
    "course_name": "SFTWR PLNG & MNGMNT", 
    "course_rating": 4.723333333333334, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.5, 
    "numRatings": 3, 
    "prereqs": "There is a familiar picture regarding software development: it is often delivered late, over-budget, and lacking important features. There is often an inability to capture the customer's actual way of accomplishing work, and then creating a realistic project plan. This will be especially important as software development in the life sciences involves creating applications that are relatively new to the industry. \r\n\r\nThe course will introduce students to the \"Balanced Framework\" of project management process that assists biotechnology organizations in planning and managing software projects that support their product development. It provides the identification, structuring, evaluation and ongoing management of the software project that deliver the benefits expected from the organization's investments. It focuses on the delivery of business value being initiated by the project. It helps an organization answer the basic question \"Are the things we are doing providing value to the business?\" \r\n\r\nIn this course, students will learn how to examine and explain customer processes and create requirements that reflect how work is actually done. Students will additionally create a software project plan that incorporates: problem framing; customer workflow, planning, project tracking, monitoring, and measurement.", 
    "professors": {
        "NYBERG": [
            4.67, 
            1
        ], 
        "VU": [
            4.75, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "8721", 
    "course_name": "EBUSINESS DISASTERS", 
    "course_rating": 4.59, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.84, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "TELANG": [
            4.59, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8723", 
    "course_name": "MBL APPLCTN DVLP AND", 
    "course_rating": 3.955, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.315, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "JEONG": [
            3.955, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8722", 
    "course_name": "DATA STRCR APPL PRGM", 
    "course_rating": 4.74, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.418000000000001, 
    "numRatings": 5, 
    "prereqs": "", 
    "professors": {
        "LEE": [
            4.74, 
            5
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8724", 
    "course_name": "CLIENT-SDE WEB TCHNL", 
    "course_rating": 4.625, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.385, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "MUSSITSCH": [
            4.625, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15418", 
    "course_name": "PRLL COMP ARC & PGMG", 
    "course_rating": 4.923333333333333, 
    "description": "15213", 
    "endTime": "", 
    "hrsPerWeek": 12.033333333333333, 
    "numRatings": 3, 
    "prereqs": "The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.", 
    "professors": {
        "FATAHALIAN": [
            4.923333333333333, 
            3
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15415", 
    "course_name": "DATABASE APPLICATNS", 
    "course_rating": 4.359999999999999, 
    "description": "(15210) or (15211 and 15213)", 
    "endTime": "", 
    "hrsPerWeek": 8.16, 
    "numRatings": 2, 
    "prereqs": "This course covers the fundamental topics for Database Management \nSystems: Database System Architectural Principles (ACID properties; data\nabstraction; external, conceptual, and internal schemata; data \nindependence; data definition and data manipulation languages), Data \nmodels (entity-relationship and relational data models; data \nstructures, integrity constraints, and operations for each data \nmodel; relational query languages: SQL, algebra, calculus), Theory of \ndatabase design (functional dependencies; normal forms; dependency \npreservation; information loss), Query Optimization (equivalence of \nexpressions, algebraic manipulation; optimization of selections and \njoins), Storage Strategies (indices, B-trees, hashing), Query Processing\n(execution of sort, join, and aggregation operators), and\nTransaction Processing (recovery and concurrency control).", 
    "professors": {
        "FALOUTSOS": [
            4.359999999999999, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15417", 
    "course_name": "HOT COMPILATION", 
    "course_rating": 4.67, 
    "description": "15312 or 15317", 
    "endTime": "", 
    "hrsPerWeek": 11.83, 
    "numRatings": 1, 
    "prereqs": "The course covers the implementation of compilers for higher-order, typed languages such as ML and Haskell, and gives an introduction to type-preserving compilation.  Topics covered include type inference, elaboration, CPS conversion, closure conversion, garbage collection, phase splitting, and typed assembly language.", 
    "professors": {
        "CRARY": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15410", 
    "course_name": "OP SYS DESIGN & IMPL", 
    "course_rating": 4.379999999999999, 
    "description": "Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.\nThe core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware\nsimulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and \"team programming\" skills (source control,\nmodularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.\n\nStudents, especially graduate students, who have not satisfied the prerequisite at\nCarnegie Mellon are strongly cautioned - to enter the class you must be able\nto write a storage allocator in C, use a debugger, understand 2's-complement\narithmetic, and translate between C and x86 assembly language.  The\ninstructor may require you to complete a skills assessment exercise before\nthe first week of the semester in order to remain registered in the class.\n\nAuditing:  this course is usually full, and we generally receive\nmany more requests to audit than we can accept.  If you wish to\naudit, please have your advisor contact us before the semester\nbegins to discuss your educational goals.", 
    "endTime": "11:20AM", 
    "hrsPerWeek": 19.572499999999998, 
    "numRatings": 4, 
    "prereqs": "15213", 
    "professors": {
        "ECKHARDT": [
            4.463333333333333, 
            3
        ], 
        "MOWRY": [
            4.13, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "15411", 
    "course_name": "COMPILER DESIGN", 
    "course_rating": 4.82, 
    "description": "This course covers the design and implementation of compiler and run-time systems for high-level languages, and examines the interaction between language design, compiler design, and run-time organization. Topics covered include syntactic and lexical analysis, handling of user-defined types and type-checking, context analysis, code generation and optimization, and memory management and run-time organization.", 
    "endTime": "10:20AM", 
    "hrsPerWeek": 18.5, 
    "numRatings": 1, 
    "prereqs": "15213 or 15312", 
    "professors": {
        "PFENNING": [
            4.82, 
            1
        ]
    }, 
    "startTime": "09:00AM", 
    "units": ""
}
{
    "cid": "15413", 
    "course_name": "SFTWR ENGRG PRACTCUM", 
    "course_rating": 4.6, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 11.200000000000001, 
    "numRatings": 3, 
    "prereqs": "In this course, students will carry out a semester-long software development project for a real client.  Students will have the choice of a client at CMU, or a client who is part of an open-source development project.  Students who choose the open-source option will have the opportunity to collaborate with students at other universities such as Stanford or MIT, and will participate in a kickoff meeting sponsored by Facebook, February 7-9 in Menlo Park, CA.  Students in the open-source option should sign up for the course and notify the instructors of their interest by November 22, 2013.\n\nA few lectures at the beginning of the course will introduce the process, tools, and documents to be used in the course, all of which will be specified by the instructors. Throughout the project, groups will be mentored through weekly team meetings with faculty.  Students will make regular presentations, and will be evaluated on the code delivered, software engineering process, client satisfaction, and their contribution to the team.\n\nStudents will leave the course with a firsthand understanding of the software engineering realities that drive SE practices. They will have concrete experience with these practices, and will have engaged in active reflection on this experience. They will have teamwork, process, and product skills to support immediate competency in a software engineering organization, along with a deeper understanding that prepares them to evaluate the new processes and techniques they will encounter in the workplace.", 
    "professors": {
        "GARROD": [
            4.6, 
            1
        ], 
        "ROSSO-LLOPART": [
            4.6, 
            1
        ], 
        "SCHMERL": [
            4.6, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5540", 
    "course_name": "RPD PROTOTYPNG CP SY", 
    "course_rating": 3.835, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.5, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "SIEWIOREK": [
            3.835, 
            2
        ], 
        "SMAILAGIC": [
            3.835, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53610", 
    "course_name": "ETC INTERDIS PRJ III", 
    "course_rating": 4.040312499999998, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 22.872187499999995, 
    "numRatings": 32, 
    "prereqs": "", 
    "professors": {
        "AIDANA": [
            3.4166666666666665, 
            3
        ], 
        "CHRISTEL": [
            3.96, 
            2
        ], 
        "COMLEY": [
            4.576666666666667, 
            3
        ], 
        "CULYBA": [
            4.5, 
            1
        ], 
        "DAVIDSON": [
            3.67, 
            1
        ], 
        "DESSLER": [
            4.3, 
            3
        ], 
        "HARGER": [
            4.0, 
            1
        ], 
        "KLUG": [
            4.5, 
            1
        ], 
        "LAM": [
            4.83, 
            1
        ], 
        "LEE": [
            3.54, 
            2
        ], 
        "OTAKI": [
            4.75, 
            1
        ], 
        "ROSENDAHL": [
            4.0, 
            2
        ], 
        "SALDAMARCO": [
            4.11, 
            3
        ], 
        "STEVENS": [
            3.8333333333333335, 
            3
        ], 
        "TRYBUS": [
            4.08, 
            2
        ], 
        "VITUCCIO": [
            3.67, 
            1
        ], 
        "YEE": [
            3.75, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53615", 
    "course_name": "FUNDMNTLS AUDIO DSGN", 
    "course_rating": 4.67, 
    "description": "This course teaches students starting from music composition in its most basic form to various sound design techniques applied to games and films industry. Students will learn how to use Logic Pro music software to compose music and design sound. The course will be held at the ETC-SV location registration will be limited to ETC students.", 
    "endTime": "", 
    "hrsPerWeek": 12.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "LEE": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53619", 
    "course_name": "CUR ISS ENTN TCHN DS", 
    "course_rating": 4.515000000000001, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 7.4925, 
    "numRatings": 4, 
    "prereqs": "Students select and research a topic of their interest within the area of Entertainment Technology and Design. Students will share the knowledge they gained with the class.  Students will also be exposed to the Bay Area entertainment technology industry. We visit companies in the Bay Area or have guest speakers from different areas of entertainment technology.", 
    "professors": {
        "LEE": [
            4.38, 
            3
        ], 
        "ROSENDAHL": [
            4.92, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5891", 
    "course_name": "DES HUMAN CENTR SFTW", 
    "course_rating": 3.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.25, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DEY": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5897", 
    "course_name": "ADP SERVICE DESIGN", 
    "course_rating": 4.6, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.4, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "FORLIZZI": [
            4.6, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5898", 
    "course_name": "SPECIAL TOPICS", 
    "course_rating": 4.2, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.7, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "HONG": [
            4.4, 
            1
        ], 
        "MANKOFF": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5899", 
    "course_name": "SPECIAL TPCS IN HCI", 
    "course_rating": 4.131, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.678, 
    "numRatings": 10, 
    "prereqs": "", 
    "professors": {
        "CARRYER": [
            4.875, 
            2
        ], 
        "DOW": [
            4.09, 
            1
        ], 
        "ENGLER": [
            4.13, 
            1
        ], 
        "FASTE": [
            4.53, 
            1
        ], 
        "KITTUR": [
            4.125, 
            2
        ], 
        "KOEDINGER": [
            4.25, 
            1
        ], 
        "MORRIS": [
            3.31, 
            1
        ], 
        "ZIMMERMAN": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15313", 
    "course_name": "FNDTNS SFTWR ENGNRNG", 
    "course_rating": 4.46, 
    "description": "Students gain exposure to the fundamentals of modern software\r\nengineering.  This includes both core CS technical knowledge and\r\nthe means by which this knowledge can be applied in the practical\r\nengineering of complex software.  Topics related to software\r\nartifacts include design models, patterns, coding, static and\r\ndynamic analysis, testing and inspection, measurement, and\r\nsoftware architecture and frameworks.  Topics related to software\r\nprocess include modeling, requirements engineering, process models\r\nand evaluation, team development, and supply chain issues\r\nincluding outsourcing and open source.  This course has a strong\r\ntechnical focus, and will include both written and programming\r\nassignments.  Students will get experience with modern software\r\nengineering tools.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 8.393333333333333, 
    "numRatings": 3, 
    "prereqs": "15214", 
    "professors": {
        "KASTNER": [
            4.43, 
            1
        ], 
        "SCHERLIS": [
            4.475, 
            2
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15312", 
    "course_name": "FNDTNS PROGRMG LANG", 
    "course_rating": 4.596666666666667, 
    "description": "(15210 and 15251) or (15212)", 
    "endTime": "", 
    "hrsPerWeek": 12.74, 
    "numRatings": 3, 
    "prereqs": "This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.", 
    "professors": {
        "CERVESATO": [
            5.0, 
            1
        ], 
        "HARPER": [
            4.395, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15317", 
    "course_name": "CONSTRUCTIVE LOGIC", 
    "course_rating": 4.375, 
    "description": "This multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 9.5, 
    "numRatings": 2, 
    "prereqs": "15210 or 15212", 
    "professors": {
        "ANDERSON": [
            4.75, 
            1
        ], 
        "CERVESATO": [
            4.0, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "15319", 
    "course_name": "CLOUD COMPUTING", 
    "course_rating": 3.59, 
    "description": "This on-line course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. The course will introduce this domain and cover the topics of data centers, resource management, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on existing approaches for resource management including resource abstraction, sharing and virtualization technologies.\r\n\r\nStudents will learn about different cloud storage concepts including data distribution, durability, consistency and redundancy. HDFS, PVFS, HBase, Cassandra and S3 will be presented as examples of underlying distributed file systems. Students will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with a public cloud service (such as Amazon Web Services), use it to rent and provision compute resources and then program and deploy applications that run on these resources. Students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm.", 
    "endTime": "08:50AM", 
    "hrsPerWeek": 8.91, 
    "numRatings": 3, 
    "prereqs": "15213", 
    "professors": {
        "GIBSON": [
            3.5, 
            1
        ], 
        "SAKR": [
            3.635, 
            2
        ]
    }, 
    "startTime": "08:00AM", 
    "units": ""
}
{
    "cid": "15251", 
    "course_name": "GRT THERTCL IDEAS CS", 
    "course_rating": 3.8879999999999995, 
    "description": "This course is about how to use theoretical ideas to formulate and solve problems in computer science. It integrates mathematical material with general problem solving techniques and computer science applications. Examples are drawn from algorithms, complexity theory, game theory, probability theory, graph theory, automata theory, algebra, cryptography, and combinatorics. Assignments involve both mathematical proofs and programming.\n\nNOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 15.933000000000002, 
    "numRatings": 10, 
    "prereqs": "(15112) and (21127 or 15151)", 
    "professors": {
        "ADAMCHIK": [
            3.685, 
            2
        ], 
        "COOPER": [
            4.36, 
            1
        ], 
        "GURUSWAMI": [
            4.1, 
            1
        ], 
        "ODONNELL": [
            4.54, 
            2
        ], 
        "PROCACCIA": [
            4.58, 
            1
        ], 
        "RUDICH": [
            2.42, 
            1
        ], 
        "SLEATOR": [
            2.68, 
            1
        ], 
        "VON AHN ARELLANO": [
            4.29, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "53724", 
    "course_name": "ENTRTNMNT DES STD II", 
    "course_rating": 4.5, 
    "description": "None", 
    "endTime": "05:20PM", 
    "hrsPerWeek": 16.165, 
    "numRatings": 2, 
    "prereqs": "53723", 
    "professors": {
        "COMLEY": [
            4.5, 
            2
        ]
    }, 
    "startTime": "02:30PM", 
    "units": ""
}
{
    "cid": "10710", 
    "course_name": "STR PRDC LNG DSC DTA", 
    "course_rating": 3.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.0, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "DYER": [
            3.0, 
            1
        ], 
        "SMITH": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53721", 
    "course_name": "SPECIAL PROJECTS II", 
    "course_rating": 5.0, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 24.0, 
    "numRatings": 1, 
    "prereqs": "This is the elective course for the ETC-Japan campus.  This course will cover the basics of the Japanese language to allow the ETC students to better communicate while they are in Japan.  It will also include field trips and attending cultural events to allow the ETC students to experience the most of Osaka and Japan.", 
    "professors": {
        "CHEN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "3-24        "
}
{
    "cid": "2750", 
    "course_name": "AUTOMTN BIOLGL RESRC", 
    "course_rating": 4.476, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.476, 
    "numRatings": 5, 
    "prereqs": "", 
    "professors": {
        "Carbonell": [
            5.0, 
            1
        ], 
        "Murphy": [
            4.3149999999999995, 
            2
        ], 
        "NAIK": [
            3.75, 
            1
        ], 
        "SCHNEIDER": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53723", 
    "course_name": "ENTNTNMNT DESGN STD", 
    "course_rating": 4.1, 
    "description": "The Entertainment Design Studio is intended to give students who are seeking an Independent Study a community where they can design a path of study on their own but still have the support structure that a more traditional class provides.  The class has a regular meeting time that ensures that its students get some time away from their other work to dedicate to their studies.  Weekly presentations allow the students to showcase their progress and seek feedback from the other students.", 
    "endTime": "05:20PM", 
    "hrsPerWeek": 14.8, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "COMLEY": [
            4.1, 
            1
        ]
    }, 
    "startTime": "02:30PM", 
    "units": ""
}
{
    "cid": "8765", 
    "course_name": "INNOVATN ECOSYSTEMS", 
    "course_rating": 4.67, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "HERBSLEB": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11732", 
    "course_name": "SELF-PACED LAB: MT", 
    "course_rating": 4.415, 
    "description": "The Self-Paced Lab in MT is intended to complement the 11-731 lecture course by providing a chance for hands-on, in-depth exploration of various MT paradigms. MT faculty will present a set of possible topics to the students enrolled in the course. The students will indicate their first and second choices for lab projects, and will then be matched to a lab project advisor. At the end of the semester, the students will present the results of their projects in class, and submit a short paper describing them.", 
    "endTime": "", 
    "hrsPerWeek": 3.25, 
    "numRatings": 2, 
    "prereqs": "11731", 
    "professors": {
        "DYER": [
            4.33, 
            1
        ], 
        "LAVIE": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8764", 
    "course_name": "WEB APPLICATNS DEVLP", 
    "course_rating": 4.58, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.915, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "EPPINGER": [
            4.58, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11719", 
    "course_name": "COMPTNL MDLS DSC ANL", 
    "course_rating": 4.655, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 7.859999999999999, 
    "numRatings": 2, 
    "prereqs": "Discourse analysis is the area of linguistics that focuses on the structure of language above the clause level.  It is interesting both in the complexity of structures that operate at that level and in the insights it offers about how personality, relationships, and community identification are revealed through patterns of language use.  A resurgence of interest in topics related to modeling language at the discourse level is in evidence at recent language technologies conferences.  This course is designed to help students get up to speed with foundational linguistic work in the area of discourse analysis, and to use these concepts to challenge the state-of-the-art in language technologies for problems that have a strong connection with those concepts, such as dialogue act tagging, sentiment analysis, and bias detection.\r\nThis is meant to be a hands on and intensely interactive course with a heavy programming component.  The course is structured around 3 week units, all but the first of which have a substantial programming assignment structured as a competition (although grades will not be assigned based on ranking within the competition, rather grades will be assigned based on demonstrated comprehension of course materials and methodology).", 
    "professors": {
        "ROSE": [
            4.655, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11411", 
    "course_name": "NATRL LNGUAG PRCSSNG", 
    "course_rating": 4.213333333333334, 
    "description": "15122", 
    "endTime": "", 
    "hrsPerWeek": 9.503333333333332, 
    "numRatings": 3, 
    "prereqs": "This course will introduce students to the highly interdisciplinary area of Artificial Intelligence known alternately as Natural Language Processing (NLP) and Computational Linguistics. The course aims to cover the techniques used today in software that does useful things with text in human languages like English and Chinese. Applications of NLP include automatic translation between languages, extraction and summarization of information in documents, question answering and dialog systems, and conversational agents. This course will focus on core representations and algorithms, with some time spent on real-world applications. Because modern NLP relies so heavily on Machine Learning, we'll cover the basics of discrete classification and probabilistic modeling as we go. Good computational linguists also know about Linguistics, so topics in linguistics (phonology, morphology, and syntax) will be covered when fitting. From a software engineering perspective, there will be an emphasis on rapid prototyping, a useful skill in many other areas of Computer Science. In particular, we will introduce some high-level languages (e.g., regular expressions and Dyna) and some scripting languages (e.g., Python and Perl) that can greatly simplify prototype implementation.", 
    "professors": {
        "BLACK": [
            4.23, 
            1
        ], 
        "DYER": [
            4.0, 
            1
        ], 
        "SMITH": [
            4.41, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11792", 
    "course_name": "INTLG INF SYS PROJCT", 
    "course_rating": 4.213333333333334, 
    "description": "11791 or 15393", 
    "endTime": "", 
    "hrsPerWeek": 9.409999999999998, 
    "numRatings": 3, 
    "prereqs": "The Software Engineering for IS sequence combines classroom material and assignments in the fundamentals of software engineering (11-791) with a self-paced, faculty-supervised directed project (11-792). The two courses cover all elements of project design, implementation, evaluation, and  documentation. Students may elect to take only 11-791; however, if both parts are taken, they should be taken in proper sequence. Prerequisite: 11-791. The course is required for VLIS students.", 
    "professors": {
        "NYBERG": [
            4.005, 
            2
        ], 
        "TOMASIC": [
            4.63, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11791", 
    "course_name": "DESG ENG INTL INF SY", 
    "course_rating": 3.1, 
    "description": "The Software Engineering for IT sequence combines classroom material and assignments in the fundamentals of software engineering (11-791) with a self-paced, faculty-supervised directed project (11-792). The two courses cover all elements of project design, implementation, evaluation, and documentation.\r\n\r\nFor students intending to complete both courses, it is recommended that the project design and proof-of-concept prototype be completed and approved by the faculty advisor before the start of 11-792, if possible. Students may elect to take only 11-791; however, if both parts are taken, they should be taken in proper sequence.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 9.72, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "NYBERG": [
            3.1, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "11796", 
    "course_name": "QUESTION ANSWERING", 
    "course_rating": 4.8125, 
    "description": "11791", 
    "endTime": "", 
    "hrsPerWeek": 6.875, 
    "numRatings": 4, 
    "prereqs": "The Question Answering Lab provides a hands-on introduction to existing approaches to question answering (QA). Students will define their own project, with approval from the instructor. Each student will work independently. If multiple students work as a team on a particular topic, each should choose an approach that is different from the approaches used by the other students working on the same problem. Students will document their approach and progress on a wiki page that is shared with the instructor. Grading will be based on periodic and final review of the student progress as documented on the wiki.", 
    "professors": {
        "MITAMURA": [
            4.75, 
            2
        ], 
        "NYBERG": [
            4.875, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "11795", 
    "course_name": "SEMINAR: ALGM PVC SC", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 2.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "RAMAKRISHNAN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16299", 
    "course_name": "INTRO FEEDBK CTL SYS", 
    "course_rating": 4.206666666666667, 
    "description": "15122 and 21122", 
    "endTime": "", 
    "hrsPerWeek": 7.466666666666666, 
    "numRatings": 3, 
    "prereqs": "This course is designed as a first course in feedback control systems  for computer science majors. Course topics include classical linear  control theory (differential equations, Laplace transforms, feedback  control), linear state-space methods (controllability/observability,  pole placement, LQR), nonlinear systems theory, and an introduction  to control using computer learning techniques. Priorities  will be given to computer science majors with robotics minor.", 
    "professors": {
        "KANTOR": [
            4.13, 
            1
        ], 
        "KELLY": [
            4.245, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15451", 
    "course_name": "ALGORITHM DES & ANLS", 
    "course_rating": 3.9591666666666665, 
    "description": "This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 11.230000000000002, 
    "numRatings": 12, 
    "prereqs": "15251 and 15210 and 21241", 
    "professors": {
        "ADAMCHIK": [
            3.21, 
            1
        ], 
        "BLUM": [
            4.53, 
            1
        ], 
        "COOPER": [
            4.413333333333333, 
            3
        ], 
        "GUPTA": [
            4.47, 
            1
        ], 
        "KAPOUTSIS": [
            4.8, 
            1
        ], 
        "MILLER": [
            3.08, 
            2
        ], 
        "SLEATOR": [
            2.9, 
            1
        ], 
        "SZUDZIK": [
            4.1, 
            2
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "15453", 
    "course_name": "FRML LNG ATMT & CMPB", 
    "course_rating": 4.413333333333333, 
    "description": "An introduction to the fundamental ideas and models underlying computing: finite automata, regular sets, pushdown automata, context-free grammars, Turing machines, undecidability, and complexity theory.", 
    "endTime": "05:20PM", 
    "hrsPerWeek": 9.583333333333334, 
    "numRatings": 3, 
    "prereqs": "21228 or 15251", 
    "professors": {
        "BLUM": [
            4.305, 
            2
        ], 
        "KAPOUTSIS": [
            4.63, 
            1
        ]
    }, 
    "startTime": "04:30PM", 
    "units": ""
}
{
    "cid": "15454", 
    "course_name": "ST CMPTNL AUTM THRY", 
    "course_rating": 4.8, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 4.4, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SUTNER": [
            4.8, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15455", 
    "course_name": "UG COMPLEX THEORY", 
    "course_rating": 4.705, 
    "description": "Complexity theory is the study of how much of a resource (such as time, space, parallelism, or randomness) is required to perform some of the computations that interest us the most. In a standard algorithms course, one concentrates on giving resource efficient methods to solve interesting problems. In this course, we concentrate on techniques that prove or suggest that there are no efficient methods to solve many important problems.\n\nWe will develop the theory of various complexity classes, such as P, NP, co-NP, PH, #P, PSPACE, NC, AC, L, NL, UP, RP, BPP, IP, and PCP. We will study techniques to classify problems according to our available taxonomy. By developing a subtle pattern of reductions between classes we will suggest an (as yet unproven!) picture of how by using limited amounts of various resources, we limit our computational power.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 6.88, 
    "numRatings": 2, 
    "prereqs": "15251", 
    "professors": {
        "BLUM": [
            4.705, 
            2
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "8624", 
    "course_name": "INFLNC PERSN ONLINE", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 4.7, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "HERBSLEB": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17678", 
    "course_name": "PRACTICUM SE II", 
    "course_rating": 3.2722222222222226, 
    "description": "Practicum for Software Engineering II is a continuation of the Practicum for Software Engineering I from another semester.", 
    "endTime": "", 
    "hrsPerWeek": 14.126666666666667, 
    "numRatings": 9, 
    "prereqs": "None", 
    "professors": {
        "BASS": [
            4.45, 
            1
        ], 
        "PETERSON": [
            2.5, 
            2
        ], 
        "ROOT": [
            3.6666666666666665, 
            3
        ], 
        "ROSSO-LLOPART": [
            2.5, 
            2
        ], 
        "VIEIRA": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17679", 
    "course_name": "PRACT SOFTWR ENG III", 
    "course_rating": 1.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "ROOT": [
            1.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17677", 
    "course_name": "PRACTICUM SOFT ENG I", 
    "course_rating": 4.308571428571429, 
    "description": "The project is a student's opportunity to demonstrate their software\nengineering knowledge in a real-live software project.  The focus of that\ndemonstration will be the material learned in the core courses, and the\nelectives the student has taken. The Project is a mentor guided software\nproject that will focus on major aspects of the software development\nlife-cycle in detail.  Admission is by permission only.\n\nThe Project may also be done in very small teams established with the\nmentors in advance of beginning the project.  All the people on the team\nmust have completed the core courses in the MSIT Program prior to\nbeginning the Project.\n\nThe Project can be completed on or off campus.  Summary of steps for a\nProject:\n.  Propose a project using the defined formal format provided.  In the\nproposal you will provide: \n(1) An Executive summary\n(2) Definition of the work to be completed, which will include:\n\t(a) Deliverables \n\t(b) Time lines\n\t(c) Two Reviews (mid point presentation and Final presentation)\n\t(d) Final report\n.  Discuss the project with a designated faculty mentor\n.  Discuss the project with a technical mentor (Certain requirements must be\nmet by your technical advisor, speak to your mentor)\n.  Get your proposal signed off (The CMU director faculty mentor and your\ntechnical mentor will approve your Project proposal.)\n.  Begin the project, reporting periodically to the faculty mentor and\nworkplace mentor.\n\nAnother form of project is to subcontract with a MSE team to provide\ndeliverables.  This option would be primarily available to on campus MSIT\nstudents.  The project will be an independent part of the MSE project which\nmust be deliverable if the MSE project fails.  Work with your mentor to\ninsure this aspect of the project.", 
    "endTime": "", 
    "hrsPerWeek": 12.709285714285713, 
    "numRatings": 14, 
    "prereqs": "None", 
    "professors": {
        "BASS": [
            4.3100000000000005, 
            5
        ], 
        "LATTANZE": [
            4.415, 
            2
        ], 
        "PETERSON": [
            5.0, 
            1
        ], 
        "ROOT": [
            4.262499999999999, 
            4
        ], 
        "ROSSO-LLOPART": [
            3.9450000000000003, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15513", 
    "course_name": "INTRO COMPUTER SYSTM", 
    "course_rating": 4.52, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.605, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KESDEN": [
            4.52, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17672", 
    "course_name": "SFTWRE DVL STUDIO II", 
    "course_rating": 4.363333333333333, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 13.06, 
    "numRatings": 3, 
    "prereqs": "Registration in the Software Development Studio is limited to those students who have been accepted into the Master of Software Engineering Program or those students who are invited by the faculty to register.\r\n\r\nThe Studio provides students with a laboratory for direct application of concepts\r\nlearned in core courses.", 
    "professors": {
        "ROOT": [
            4.295, 
            2
        ], 
        "ROSSO-LLOPART": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12, 24      "
}
{
    "cid": "17673", 
    "course_name": "SOFTWR DEV STUDO III", 
    "course_rating": 3.0625, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 18.335, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "BASS": [
            2.67, 
            1
        ], 
        "MIRANDA": [
            3.33, 
            1
        ], 
        "ROOT": [
            3.0, 
            1
        ], 
        "ROSSO-LLOPART": [
            3.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17671", 
    "course_name": "SFTWR DEV STUDIO I", 
    "course_rating": 3.835, 
    "description": "Registration in the Software Development Studio is limited to those students who have been accepted into the Master of Software Engineering Program (MSE/MSIT-SE) or those students who are invited by the faculty to register.\r\n\r\nThe Studio provides students with a laboratory for direct application of concepts\r\nlearned in core courses.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 10.875, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "BASS": [
            3.67, 
            1
        ], 
        "ROOT": [
            4.0, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "11663", 
    "course_name": "APPLIED MACH. LRNG.", 
    "course_rating": 4.43, 
    "description": "Machine Learning is concerned with computer programs that enable the behavior of a computer to be learned from examples or experience rather than dictated through rules written by hand.  It has practical value in many application areas of computer science such as on-line communities and digital libraries.  This class is meant to teach the practical side of machine learning for applications, such as mining newsgroup data or building adaptive user interfaces.  The emphasis will be on learning the process of applying machine learning effectively to a variety of problems rather than emphasizing an understanding of the theory behind what makes machine learning work.  This course does not assume any prior exposure to machine learning theory or practice. In the first 2/3 of the course, we will cover a wide range of learning algorithms that can be applied to a variety of problems.  In particular, we will cover topics such as decision trees, rule based classification, support vector machines, Bayesian networks, and clustering. In the final third of the class, we will go into more depth on one application area, namely the application of machine learning to problems involving text processing, such as information retrieval or text categorization.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 8.86, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "ROSE": [
            4.43, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15685", 
    "course_name": "COMPUTER VISION", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.67, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "NARASIMHAN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16681", 
    "course_name": "MRSD PROJECT I", 
    "course_rating": 4.43, 
    "description": "Students will be required to participate in a two-semester on-campus lecture- and laboratory-style project course. The project course will allow students to form project teams to work on a hands-on robotics / automation topic proposed by the instructor(s) of interest to the robotics / automation industry at large. The project is intended to allow students to acquire hands-on experience and apply concepts and methods taught in class. Students will learn the interconnection of theory and practice and understand the challenges of real-world application. The setting will consist of a mix of targeted technology instruction / lectures and hands-on work in the laboratory. Students will be taught the project / technology development process all the way from developing performance-requirements/system-specifications through the technology development cycle, all the way to test-plan development and results analysis and reporting. The outcome of this two-semester course will be a final project report, coupled with a demonstration and group presentation.\r\n\r\nThe goal of the MRSD Project Course is to provide practical experience in robotic system development ranging from specification and design to implementation and testing. Projects will be defined jointly with industrial clients, and small student teams will work with these client companies in implementing, refining, and presenting the results of their projects. The course will provide opportunities to apply principles from other MRSD courses, especially the Systems Engineering course, as well as those from the Business Seminar series. Class lectures will emphasize practical application and cover relevant topics including robotic design methodologies, system modeling, mechanical components, sensor and I/O interfacing, motor control, microcontroller and embedded control basics, basic software development methodologies, and troubleshooting.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 16.76, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "DOLAN": [
            4.43, 
            1
        ]
    }, 
    "startTime": "10:00AM", 
    "units": ""
}
{
    "cid": "16682", 
    "course_name": "MRSD PROJECT II", 
    "course_rating": 4.335, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 14.969999999999999, 
    "numRatings": 2, 
    "prereqs": "Students will be required to participate in a two-semester on-campus lecture- and laboratory-style project course. The project course will allow students to form project teams to work on a hands-on robotics / automation topic proposed by the instructor(s) of interest to the robotics / automation industry at large. The project is intended to allow students to acquire hands-on experience and apply concepts and methods taught in class. Students will learn the interconnection of theory and practice and understand the challenges of real-world application. The setting will consist of a mix of targeted technology instruction / lectures and hands-on work in the laboratory. Students will be taught the project / technology development process all the way from developing performance-requirements/system-specifications through the technology development cycle, all the way to test-plan development and results analysis and reporting. The outcome of this two-semester course will be a final project report, coupled with a demonstration and group presentation.\n\nThe goal of the MRSD Project Course is to provide practical experience in robotic system development ranging from specification and design to implementation and testing. Projects will be defined jointly with industrial clients, and small student teams will work with these client companies in implementing, refining, and presenting the results of their projects. The course will provide opportunities to apply principles from other MRSD courses, especially the Systems Engineering course, as well as those from the Business Seminar series. Class lectures will emphasize practical application and cover relevant topics including robotic design methodologies, system modeling, mechanical components, sensor and I/O interfacing, motor control, microcontroller and embedded control basics, basic software development methodologies, and troubleshooting.", 
    "professors": {
        "DOLAN": [
            4.335, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15686", 
    "course_name": "NEURAL COMPUTATION", 
    "course_rating": 4.0, 
    "description": "15112 and 21122", 
    "endTime": "", 
    "hrsPerWeek": 9.5, 
    "numRatings": 1, 
    "prereqs": "Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.", 
    "professors": {
        "LEE": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11700", 
    "course_name": "LTI COLLOQUIUM", 
    "course_rating": 3.9699999999999998, 
    "description": "The LTI colloquium is a series of talks related to language technologies. The topics include but are not restricted to Computational Linguistics, Machine Translation, Speech Recognition and Synthesis, Information Retrieval, Computational Biology, Machine Learning, Text Mining, Knowledge Representation, Computer-Assisted Language Learning and Intelligent Language Tutoring. To get credit of the course, students are required to write either a short critique of one of the presentations or a comparison of two.", 
    "endTime": "03:50PM", 
    "hrsPerWeek": 3.215, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "ROSENFELD": [
            3.9699999999999998, 
            2
        ]
    }, 
    "startTime": "02:30PM", 
    "units": ""
}
{
    "cid": "10725", 
    "course_name": "CONVEX OPTIMIZATION", 
    "course_rating": 4.175, 
    "description": "Nearly every problem in computer science and statistics can be formulated as the optimization of some function, possibly under some set of constraints.  This universal reduction may seem to suggest that such optimization tasks are intractable. Fortunately, many real world problems have special structure, such as convexity, smoothness, separability, etc., which allow us to formulate optimization problems that can often be solved efficiently. This course is designed to give a graduate-level student a thorough grounding in the formulation of optimization problems that exploit such structure, and in efficient solution methods for these problems. The main focus is on the formulation and solution of convex optimization problems. These general concepts will also be illustrated through applications in machine learning and statistics.  Students entering the class should have a pre-existing working knowledge of algorithms, though the class has been designed to allow students with a strong numerate background to catch up and fully participate. Though not required, having taken 10-701 or an equivalent machine learning or statistics class is strongly encouraged, since we will use applications in machine learning and statistics to demonstrate the concepts we cover in class.  Students will work on an extensive optimization-based project throughout the semester; those wanting to take the class without the project can register under the 9 unit option.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 13.829999999999998, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "POCZOS": [
            3.69, 
            1
        ], 
        "TIBSHIRANI": [
            4.66, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "53711", 
    "course_name": "IMPROVSTNAL ACTING", 
    "course_rating": 4.794, 
    "description": "This course uses the craft of improvisational acting to foster team building and encourage students to overcome their inhibitions when working with others. In this course students will learn how to work together as an ensemble, how to develop a dramatic theme or idea, how to respond to moments of uncertainty on stage in a quick and confident manner, and how to increase the students' awareness of what takes place moment-to-moment on stage. This course will introduce and drill students in improvisational techniques and exercises that will enhance their abilities in performance. Students will learn the rules of improvisation, warm-ups, anti-editing, and the exploration of space and time. Students will commence with an exploration of C.R.O.W.,(i.e.,character-relationship-objective-and-where), followed by 'offers,' 'assumptions,' and 'give-and-take,' such as character storytelling and the furthering of space and time.", 
    "endTime": "01:50PM", 
    "hrsPerWeek": 2.908, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "HARGER": [
            4.794, 
            5
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "53713", 
    "course_name": "IMPROVSTNL ACTG III", 
    "course_rating": 5.0, 
    "description": "53711", 
    "endTime": "", 
    "hrsPerWeek": 3.04, 
    "numRatings": 2, 
    "prereqs": "A continuation of Improvisational Acting I and Improvisational Acting II, exercises build on previous course. This course uses the craft of improvisational acting to foster team building and encourage students to overcome their inhibitions when working with others. In this course students will learn how to work together as an ensemble, how to develop a dramatic theme or idea, how to respond to moments of uncertainty on stage in a quick and confident manner, and how to increase the students' awareness of what takes place moment-to-moment on stage. This course will introduce and drill students in improvisational techniques and exercises that will enhance their abilities in performance. Students will learn the rules of improvisation, warm-ups, anti-editing, and the exploration of space and time. Students will commence with an exploration of C.R.O.W.,(i.e.,character-relationship-objective-and-where), followed by 'offers,' 'assumptions,' and 'give-and-take,' such as character storytelling and the furthering of space and time.", 
    "professors": {
        "HARGER": [
            5.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "53712", 
    "course_name": "IMPROV ACTING II", 
    "course_rating": 4.943333333333333, 
    "description": "53711", 
    "endTime": "", 
    "hrsPerWeek": 2.46, 
    "numRatings": 3, 
    "prereqs": "A continuation of Improvisational Acting I, exercises build on previous course.  This course uses the craft of improvisational acting to foster team building and encourage students to overcome their inhibitions when working with others. In this course students will learn how to work together as an ensemble, how to develop a dramatic theme or idea, how to respond to moments of uncertainty on stage in a quick and confident manner, and how to increase the students' awareness of what takes place moment-to-moment on stage. This course will introduce and drill students in improvisational techniques and exercises that will enhance their abilities in performance. Students will learn the rules of improvisation, warm-ups, anti-editing, and the exploration of space and time. Students will commence with an exploration of C.R.O.W.,(i.e.,character-relationship-objective-and-where), followed by 'offers,' 'assumptions,' and 'give-and-take,' such as character storytelling and the furthering of space and time.", 
    "professors": {
        "HARGER": [
            4.943333333333333, 
            3
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15424", 
    "course_name": "ST: FNDN CYB PHY SYS", 
    "course_rating": 4.67, 
    "description": "Cyber-physical systems (CPSs) combine cyber effects (computation and/or communication) with physical effects (motion or other physical processes). Designing algorithms to control CPSs, such as those in cars, aircraft and robots, is challenging due to their tight coupling with physical behavior. At the same time, it is vital that these algorithms be correct, since we rely on CPSs for safety-critical tasks like keeping aircraft from colliding.\n\nStudents in this course will understand the core principles behind CPSs, develop models and controls, identify safety specifications and critical properties of CPSs, understand abstraction and system architectures, learn how to design by invariant, reason rigorously about CPS models, verify CPS models of appropriate scale, understand the semantics of a CPS model and develop an intuition for operational effects. Students will write hybrid programs (HPs), which capture relevant dynamical aspects of CPSs in a simple programming language with a simple semantics, allowing the programmer to refer to real-valued variables representing real quantities and specify their dynamics as part of the HP.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 11.33, 
    "numRatings": 1, 
    "prereqs": "15122 and 15251 and 21122", 
    "professors": {
        "PLATZER": [
            4.67, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15355", 
    "course_name": "MDRN COMPUTR ALGEBRA", 
    "course_rating": 3.5, 
    "description": "15251", 
    "endTime": "", 
    "hrsPerWeek": 7.25, 
    "numRatings": 1, 
    "prereqs": "The goal of this course is to investigate the relationship between algebra\r\nand computation. The course is designed to expose students to algorithms\r\nused for symbolic computation, as well as to the concepts from modern\r\nalgebra which are applied to the development of these algorithms. This\r\ncourse provides a hands-on introduction to many of the most important ideas\r\nused in symbolic mathematical computation, which involves solving system of\r\npolynomial equations (via Groebner bases), analytic integration, and solving\r\nlinear difference equations. Throughout the course the computer algebra system Mathematica will be used for computation.", 
    "professors": {
        "ADAMCHIK": [
            3.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "15354", 
    "course_name": "COMPTNL DISCRTE MATH", 
    "course_rating": 5.0, 
    "description": "This course is about the computational aspects of some of the standard\r\nconcepts of discrete mathematics (relations, functions, logic, graphs,\r\nalgebra, automata), with emphasis on efficient algorithms.  We begin\r\nwith a brief introduction to computability and computational complexity. Other topics include: iteration, orbits and fixed points, order and equivalence relations, propositional logic and satisfiability testing, finite fields and shift register sequences, finite state machines, and cellular automata.\r\n\r\nComputational support for some of the material is available in the form of a Mathematica package.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 11.2, 
    "numRatings": 1, 
    "prereqs": "15251 or 21228", 
    "professors": {
        "SUTNER": [
            5.0, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15421", 
    "course_name": "INFR SECURTY & PRVCY", 
    "course_rating": 4.29, 
    "description": "The objective of this course is to introduce students to the technologies of Web Commerce, Security and Privacy as well as to related business, policy and usability issues. Content: Over the past 15 years, the Web has become an integral part of our daily life, whether at home or at work. This course provides students with an overview of the technologies and practices associated with Web Security, Privacy and Commerce. In the process, students will learn what it takes to design and develop successful web applications and services, reconciling security, privacy, usability and business considerations. The course is organized around two parts: Part I - Web Security & Privacy Technologies The big picture, gentle introduction to cryptography, digital signatures, key management, authentication, Internet security protocols, certificates & PKI, decentralized trust management, privacy enhancing technologies, electronic payments. Part II - Web Commerce The big picture, Internet marketing & personalization, search engines, B2B and electronic markets, P2P, Web 2.0, Mobile Commerce, social networking. Format: Lectures (including guest lectures), discussions, student presentations, and class projects.\r\nPrerequisites: 15122 or 15211", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 8.86, 
    "numRatings": 1, 
    "prereqs": "15122 or 15211", 
    "professors": {
        "SADEH": [
            4.29, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "15423", 
    "course_name": "ST DGTL SIG PRCG CS", 
    "course_rating": 1.0, 
    "description": "(15112 or 15122) and (21325 or 36625 or 36217 or 36225 or 15359)", 
    "endTime": "", 
    "hrsPerWeek": 2.0, 
    "numRatings": 1, 
    "prereqs": "Digital signals comprise a large fraction of the data analyzed by computer scientists. Sound, e.g. speech and music, images, radar and many other signal types that were conventionally considered to be the domain of the Electrical engineer are now also in the domain of computer scientists, who must analyze them, make inferences, and develop machine learning techinques to analyze, classify and reconstruct such data. In this course we will cover the basics of Digital Signal Processing. We will concentrate on the basic mathematical formulations, rather than in-depth implementation details. We will cover the breadth of topics, beginning with the basics of signals and their representations, the theory of sampling, important transform representations, key processing techniques, and spectral estimation.", 
    "professors": {
        "RAMAKRISHNAN": [
            1.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15296", 
    "course_name": "ST:UND BRDN IMG CMPT", 
    "course_rating": 3.57, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 6.285, 
    "numRatings": 2, 
    "prereqs": "In this research and action based course we will explore computing from a cultural perspective. We will reflect on some issues often taken for granted e.g. are our attitudes to computing generalizable or culturally specific? How are computing and its workforce perceived and represented in US culture and in cultures from around the world? In particular we will be examining how images of the field might affect public attitudes, access to resources and understanding of computer science. Representations of the field take on particular significance in light of recent US government projections: between now and 2018, among all occupations in all fields of science and engineering, computer science occupations will account for nearly 60% of all job growth [Computing Community Consortium, 2010]. \n\nThis course is aimed primarily at students who are interested in exploring some of the broad issues of computer science and its cultural context. Students will gain experience in teamwork, teaching and presenting. We will use academic papers, web sites, group discussion/debate and popular media. Findings from our investigations will inspire the action component in which student teams develop and implement a public/outreach presentation aimed at re-presenting the exciting field of computer science with broad appeal in mind.", 
    "professors": {
        "FRIEZE": [
            3.57, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "8532", 
    "course_name": "LAW OF COMPUTER TECH", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SHAMOS": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15295", 
    "course_name": "COMPTN PGMG PBL SLVG", 
    "course_rating": 4.263333333333333, 
    "description": "Each year, Carnegie Mellon fields two teams for participation in the\nACM-ICPC Regional Programming Contest. During many recent years, one of\nthose teams has earned the right to represent Carnegie Mellon at the\nACM-ICPC World Finals.  This course is a vehicle for those who\nconsistently and rigorously train in preparation for the contests to\nearn course credit for their effort and achievement.\n\nPreparation involves the study of algorithms, the practice of\nprogramming and debugging, the development of test sets, and the\ngrowth of team, communication, and problem solving skills.\n\nNeither the course grade nor the number of units earned are dependent\non ranking in any contest.  Students are not required to earn course\ncredit to participate in practices or to compete in ACM-ICPC events.", 
    "endTime": "09:20PM", 
    "hrsPerWeek": 4.9816666666666665, 
    "numRatings": 6, 
    "prereqs": "15122", 
    "professors": {
        "FINK": [
            4.180000000000001, 
            3
        ], 
        "SLEATOR": [
            4.346666666666667, 
            3
        ]
    }, 
    "startTime": "06:30PM", 
    "units": ""
}
{
    "cid": "15292", 
    "course_name": "ST HISTORY COMUTNG", 
    "course_rating": 4.67, 
    "description": "(76101) and (15110 or 15112 or 15122 or 15150)", 
    "endTime": "", 
    "hrsPerWeek": 8.75, 
    "numRatings": 2, 
    "prereqs": "This course traces the history of computational devices, pioneers and principles from the early ages through the present. Topics include early computational devices, mechanical computation in the 19th century, events that led to electronic computing advances in the 20th century, the advent of personal computing and the Internet, and the social, legal and ethical impact of modern computational artifacts. This course also includes a history of programming languages, operating systems, processors and computing platforms. Students should have an introductory exposure to programming prior to taking this course.", 
    "professors": {
        "CORTINA": [
            4.67, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15359", 
    "course_name": "PROBABILITY & COMPTG", 
    "course_rating": 4.314, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.905999999999999, 
    "numRatings": 5, 
    "prereqs": "", 
    "professors": {
        "ADAMCHIK": [
            3.23, 
            1
        ], 
        "HARCHOL-BALTER": [
            4.8, 
            3
        ], 
        "SUTNER": [
            3.94, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15291", 
    "course_name": "APPLD CMP INTEL LAB", 
    "course_rating": 4.217499999999999, 
    "description": "What would an \"intelligent\" picture on the wall do? What if it could see and hear you? What should it say if it could talk? What if your pantry, wardrobe or medicine cabinet could sense, think and act? What should they do and say? What should your cell phone be saying to you? These are not whimsical or theoretical questions...they inevitably arise as ordinary everyday objects around us acquire the ability to sense changes in their environment, think about their implications, and act in pursuit of their goals. These objects are connected to the web and become conduits for services, erasing the distinction between products and services. The ability to invent and build smart products/services is becoming a key skill in the new technology-driven services economy.\r\n\r\nThe focus of the course will be on building \"ordinary\" objects that can sense, think and act in the real world and on exploring the implications of these capabilities. Students will select their own project and by the end of the semester will create a working prototype that will be exhibited in a public place. Prizes will be offered for the most creative projects. In the course of their projects, students will learn how to use state-of-the-art tools for:\r\n\r\nObject detection using video cameras, microphones and other sensors\r\nMovement and gesture detection\r\nSpeech recognition and generation\r\n\r\nReasoning and planning:\r\nWhile the course organizers have many ideas for specific projects, students will be encouraged to design their own projects. Students are expected to work in small groups on their own time and receive faculty advice as needed. There will be weekly meetings of the whole class.", 
    "endTime": "07:20PM", 
    "hrsPerWeek": 5.0, 
    "numRatings": 4, 
    "prereqs": "15122 and 15251", 
    "professors": {
        "BLACK": [
            4.4, 
            2
        ], 
        "GERSHMAN": [
            4.035, 
            2
        ]
    }, 
    "startTime": "06:30PM", 
    "units": ""
}
{
    "cid": "11761", 
    "course_name": "LANG & STAT", 
    "course_rating": 4.87, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.985, 
    "numRatings": 2, 
    "prereqs": "Language technologies (search, text mining, information retrieval, speech recognition, machine translation, question answering, biological sequence analysis...) are at the forefront of this century's information revolution.  In addition to their use of machine learning, these technologies rely centrally on classic statistical estimation techniques.   Yet most CS and engineering undergraduate programs do not prepare students in this area beyond an introductory prob&stats course.  This course is designed to plug this hole.\n\nThe goal of \"Language and Statistics\" is to ground the data-driven techniques used in language technologies in sound statistical methodology.   We start by formulating various language technology problems in both an information theoretic framework (the source-channel paradigm) and a Bayesian framework (the Bayes classifier).  We then discuss the statistical properties of words, sentences, documents and whole languages, and the computational formalisms used to represent language.  These discussions naturally lead to specific concepts in statistical estimation.\n\nTopics include: Zipf's distribution and type-token curves; point estimators, Maximum Likelihood estimation, bias and variance, sparseness, smoothing and clustering; interpolation, shrinkage, and backoff; entropy, cross entropy and mutual information;  decision tree models applied to language; latent variable models and the EM algorithm; hidden Markov models; exponential models and maximum entropy; semantic modeling and dimensionality reduction; probabilistic context-free grammars and syntactic language models.\n\nThe course is designed for LTI & SCS graduate students, but others are welcome.  CS UG upperclassmen who've taken it have done well, though they found it challenging.\n\nThe 11-661 version does not require the course project.\n\nPrerequisites: Strong quantitative aptitude.  Comfort with basic UG-level probability.  Some programming skill.", 
    "professors": {
        "ROSENFELD": [
            4.87, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5610", 
    "course_name": "USER-CN RSRCH EVALN", 
    "course_rating": 3.615, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.555, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KRAUT": [
            3.5, 
            1
        ], 
        "MORRIS": [
            3.73, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15199", 
    "course_name": "ST:DISCOVERING LOGIC", 
    "course_rating": 4.0, 
    "description": "This course is ONLY offered at Carnegie Mellon in Qatar.\n\nThis course has the purpose of introducing first-year Computer Science students to elements of formal logic as well as to the historical context in which this discipline developed. As all subsequent courses in the CS curriculum rely on students having mastered basic logical notions and skills, it will test and enhance your preparation, thereby putting you in a better position to succeed in the program. It will also help you understand and appreciate how CS came about since Computer Science grew out of logic. The specific knowledge and skills you will learn in is course include: an enhanced ability to research topics, give presentations and write technical prose, some elementary logic, some historical depth into Computer Science, mathematics and logic itself. This course is open to Computer Science freshmen only.", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "CERVESATO": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5391", 
    "course_name": "DES HUMN CENTRD SFTW", 
    "course_rating": 3.9, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.4, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DEY": [
            3.9, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5395", 
    "course_name": "APPLCTNS COG SCIENCE", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.5, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KLATZKY": [
            5.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17704", 
    "course_name": "INFLN PERSN ONLINE", 
    "course_rating": 4.17, 
    "description": "The marketplace of ideas is moving online.  Social networks play a dominant role in product success, the blogosphere shapes opinion and policy, and internet strategy strongly influences outcomes of elections at all levels.  The Internet makes much more information and opinion available to everyone, but also makes it possible to construct information bubbles that hold divergent opinions at bay.  The course will examine research and practice of influence and persuasion, at the individual, social, and societal levels.  We will examine such questions as What makes web sites credible?  How and why do memes circulate through the blogosphere?  What strategies make Internet-based campaigns successful?  In this course, students will challenged with readings about research and current issues, invited to blog about the topic, and will undertake an individual or team project in an are of interest.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 10.17, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "HERBSLEB": [
            4.17, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "53622", 
    "course_name": "DESGN SOC VLU BRD GM", 
    "course_rating": 5.0, 
    "description": "53609", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "This course explores integrating social values into the game design and gameplay of board games. The course will incorporate the Grow-A-Game cards from the Values @ Play project (http://valuesatplay.org/) to help with the designing and developing of board games. \r\n\r\nRequirements\r\nInstructor's Permission\r\nGame Design (53-609)", 
    "professors": {
        "DAVIDSON": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "53788", 
    "course_name": "INTRO TO MAYA", 
    "course_rating": 4.885, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.645, 
    "numRatings": 2, 
    "prereqs": "This is an introductory class for Autodesk's Maya 2014. Students will master the complex interface and tool-set of Maya.  Prior experience with 3D modeling/animation is not required.  Introduction to Maya will concentrate primarily on the proficiency of use for the application itself, and secondarily on the sharpening of personal skill sets such as modeling and animating.  There will be in-depth discussion of the basic methodologies used in all leading 3D modeling packages for a better understanding of how Maya and other 3D applications work internally.  Students will be assigned small-scope projects in modeling, animating, texturing and rigging.  Most techniques discussed will be geared towards current video game industry use.", 
    "professors": {
        "AUDIA": [
            4.885, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15221", 
    "course_name": "TECHNCL COMMUNCTN CS", 
    "course_rating": 4.482857142857143, 
    "description": "The course is designed for sophomore computer science majors to improve their\r\nabilities in practical, professional communications (both written and oral).\r\nIt aims to help students compose clear, concise technical writings and oral\r\npresentations for multi-level audiences.  Assignments include technical\r\ndefinitions, descriptions, instructions, process explanations, abstracts,\r\nmemos, and research reports.  Assignments may incorporate recent computer\r\nscience research at Carnegie Mellon, projects in related technical courses,\r\nand professional case studies.  Sophomores will likely find the course more useful if they have either had an internship or faculty-supervised research, including SURG projects prior to enrollment.", 
    "endTime": "10:20AM", 
    "hrsPerWeek": 6.86, 
    "numRatings": 7, 
    "prereqs": "76101", 
    "professors": {
        "KARATSOLIS": [
            4.88, 
            1
        ], 
        "KEATING": [
            4.416666666666667, 
            6
        ]
    }, 
    "startTime": "09:00AM", 
    "units": ""
}
{
    "cid": "15884", 
    "course_name": "SP TPC CMP MTH SM GD", 
    "course_rating": 3.83, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.33, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KOLTER": [
            3.83, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15883", 
    "course_name": "CMP MDLS NEURAL SYST", 
    "course_rating": 4.67, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.8, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "TOURETZKY": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53689", 
    "course_name": "ETC INDEPNDT STUDY", 
    "course_rating": 2.93, 
    "description": "For ETC students \r\nIndependent study is available for students who are in good academic standing. Independent study allows the student, with the support of a faculty advisor, to develop a self-generated project or body of work outside the classroom or project course setting. In order to register for an independent study, the student must first propose their idea to a faculty member (who does not have to be from our department) who agrees to oversee the project, and then fill out the appropriate paperwork available from the Director of Student Services. \r\n\r\nFor non-ETC students \r\nThe Entertainment Technology Center offers independent study opportunities to non-ETC students on a very limited basis. Registering for the independent study allows students, in essence, to work be a part of ETC project course in which ETC students are in small, interdisciplinary teams, creating artifacts under direct faculty supervision. The number of projects per semester will vary. The primary objective of the courses is to provide a hands-on working experience with teammates who are from different backgrounds and disciplines. Other objectives are to experience project management, and have the possibility of working with an external client (some projects have external collaborators). The requirements for a project are that: the team contain students from both technology and non-technology backgrounds, the team must prototype and produce a tangible artifact (not a paper), and the work must be supervised by a faculty member approved by the ETC for this project.", 
    "endTime": "", 
    "hrsPerWeek": 8.32, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "HALEY": [
            4.0, 
            1
        ], 
        "MACAU": [
            1.86, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15612", 
    "course_name": "OPERTNG SYSTM PRCTM", 
    "course_rating": 5.0, 
    "description": "The goal of this class is for students to acquire hands-on experience\r\nwith operating-system code as it is developed and deployed in the\r\nreal world.  Groups of two to four students will select, build,\r\ninstall, and become familiar with an open-source operating system\r\nproject; propose a significant extension or upgrade to that project;\r\nand develop a production-quality implementation meeting the coding\r\nstandards of that project.  Unless infeasible, the results will be\r\nsubmitted to the project for inclusion in the code base.\r\n\r\nVariations on this theme are possible at the discretion of the\r\ninstructor.  For example, it may be possible to work within the\r\ncontext of a non-operating-system software infrastructure project\r\n(window system, web server, or embedded network device kernel) or\r\nto extend a 15-410 student kernel.  In some situations students\r\nmay work alone.  Group membership and unit count (9 units versus\r\n12) will be decided by the third week of the semester.\r\n\r\nContributing to a real-world project will involve engaging\r\nin some mixture of messy, potentially open-ended activities\r\nsuch as: learning a revision control system, writing a\r\nshort design document, creating and updating a simple project\r\nplan, participating in an informal code review, synthesizing\r\nscattered information about hardware and software, classifying\r\nand/or reading large amounts of code written by various people\r\nover a long period of time, etc.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 19.0, 
    "numRatings": 1, 
    "prereqs": "15410 or 15412 or 18347", 
    "professors": {
        "ECKHARDT": [
            5.0, 
            1
        ]
    }, 
    "startTime": "12:30PM", 
    "units": ""
}
{
    "cid": "16650", 
    "course_name": "SYSTEMS ENGINEERING", 
    "course_rating": 4.51, 
    "description": "Most everything around us is a system-from the cell phone in your pocket to the International Space System up in the sky. The higher the complexity of the system, the more its creators benefit from applying formal processes to its development-processes that are collectively known under the umbrella \"systems engineering.\" Systems engineering is not a layer of management demanding reports from the technical wizards who conceive great products. It is a formal discipline that guides a product from conception and design all the way to production, marketing, servicing, and disposal. In this course we will study the fundamental elements of systems engineering as they apply to the development robotic systems. Topics will include: requirements analysis, use case analysis, functional analysis, design synthesis and validation, system simulation, system testing, safety and reliability, user studies, manufacturability, project management (including scheduling and costing), knowledge management, and logistics and supply chain. Many of these elements will be applied in the MRSD Project Course I and II, thus giving students an opportunity to put the theory in practice in a real product design activity.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 6.89, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "APOSTOLOPOULOS": [
            4.51, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "8533", 
    "course_name": "PRIVCY POLCY LAW TEC", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "BREAUX": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5320", 
    "course_name": "SOCIAL WEB", 
    "course_rating": 3.4, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.666666666666666, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "HONG": [
            3.0, 
            1
        ], 
        "KITTUR": [
            4.0, 
            1
        ], 
        "KRAUT": [
            3.2, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15637", 
    "course_name": "WEB APPLCTN DEVLPMNT", 
    "course_rating": 4.841666666666668, 
    "description": "This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of\nprogramming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include:\nHTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web\nServices, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.", 
    "endTime": "12:20PM", 
    "hrsPerWeek": 11.814999999999998, 
    "numRatings": 6, 
    "prereqs": "15214", 
    "professors": {
        "EPPINGER": [
            4.725, 
            2
        ], 
        "GARROD": [
            4.9, 
            4
        ]
    }, 
    "startTime": "11:30AM", 
    "units": ""
}
{
    "cid": "5872", 
    "course_name": "RPD PROTOTYPNG CP SY", 
    "course_rating": 2.835, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.0, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "SIEWIOREK": [
            2.67, 
            1
        ], 
        "SMAILAGIC": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17674", 
    "course_name": "SOFTWR DEV STUDIO IV", 
    "course_rating": 3.9175, 
    "description": "Registration in the Software Development Studio is limited to those students who have been accepted into the Master of Software Engineering Program or those students who are invited by the faculty to register.\r\n\r\nThe Studio provides students with a laboratory for direct application of concepts\r\nlearned in core courses.", 
    "endTime": "", 
    "hrsPerWeek": 11.5625, 
    "numRatings": 4, 
    "prereqs": "None", 
    "professors": {
        "BASS": [
            4.0, 
            1
        ], 
        "MIRANDA": [
            4.0, 
            1
        ], 
        "ROOT": [
            4.0, 
            1
        ], 
        "ROSSO-LLOPART": [
            3.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8810", 
    "course_name": "CMP MDL SOC TCH SYS", 
    "course_rating": 4.43, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.71, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "CARLEY": [
            4.43, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17630", 
    "course_name": "CMP SCI SFTW PRC ENG", 
    "course_rating": 4.67, 
    "description": "Products today rely on computer hardware and software for basic functionality. Because deep domain knowledge is needed to build these products, organizations often hire engineers with traditional engineering backgrounds to build the product platform. These same engineers, with backgrounds in disciplines other than computer science and software engineering, also write the software that makes the product work.  Too often this can lead to poorly designed systems, defect-laden software, bloated development costs, and other problems. \r\n\r\nThe objective of this course is to provide engineers without formal training in computer science with a solid background in the discipline\ufffds key principles.  This will enable them to better design and build software intensive systems. \r\n\r\n\r\nPP section is not for on-campus students.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 12.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "ROSSO-LLOPART": [
            4.67, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15121", 
    "course_name": "INTRO DATA STRUCTURS", 
    "course_rating": 3.815, 
    "description": "A continuation of the process of program design and analysis for \nstudents with some prior programming experience (functions, loops, and \narrays, not necessarily in Java). The course reinforces object-oriented \nprogramming techniques in Java and covers data aggregates, data \nstructures (e.g., linked lists, stacks, queues, trees, and graphs), and \nan introduction to the analysis of algorithms that operate on those data \nstructures.\n\nPre-req: 15-112 or placement", 
    "endTime": "03:50PM", 
    "hrsPerWeek": 11.174999999999999, 
    "numRatings": 8, 
    "prereqs": "15112", 
    "professors": {
        "CARRASQUEL": [
            3.4924999999999997, 
            4
        ], 
        "FOSSATI": [
            3.25, 
            1
        ], 
        "SANS": [
            3.67, 
            1
        ], 
        "STEHLIK": [
            4.8149999999999995, 
            2
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15122", 
    "course_name": "PRIN IMPRTV COMPTATN", 
    "course_rating": 4.005789473684212, 
    "description": "For students with a basic understanding of programming (variables, expressions, loops, arrays, functions).\nTeaches imperative programming and methods for ensuring the correctness of\nprograms.  Students will learn the process and concepts needed to go from\nhigh-level descriptions of algorithms to correct imperative implementations, with\nspecific application to basic data structures and algorithms.  Much of the course\nwill be conducted in a subset of C amenable to verification, with a transition to\nfull C near the end. This course prepares students for 15-213 and 15-210.\n\nNOTE: students must achieve a C or better in order to use \nthis course to satisfy the pre-requisite for any subsequent Computer \nScience course.", 
    "endTime": "10:20AM", 
    "hrsPerWeek": 12.583684210526316, 
    "numRatings": 19, 
    "prereqs": "15112", 
    "professors": {
        "ADAMCHIK": [
            3.7925, 
            4
        ], 
        "ANDERSON": [
            4.67, 
            1
        ], 
        "CORTINA": [
            4.69, 
            2
        ], 
        "GUNAWARDENA": [
            2.955, 
            2
        ], 
        "MORGENSTERN": [
            3.75, 
            1
        ], 
        "PFENNING": [
            4.17, 
            1
        ], 
        "PLATZER": [
            3.065, 
            2
        ], 
        "RAZAK": [
            4.760000000000001, 
            3
        ], 
        "SIMMONS": [
            4.216666666666666, 
            3
        ]
    }, 
    "startTime": "09:00AM", 
    "units": ""
}
{
    "cid": "17635", 
    "course_name": "SOFTWARE MEASUREMENT", 
    "course_rating": 5.0, 
    "description": "Sections D and PP are NOT available for on-campus students.\r\n\r\nThe purpose of this course is to introduce students to software measurement -- from need identification through analysis and feedback and into the process. Much of the course material demonstrates concepts of software measurement that are used by managers and practitioners in industry today. The course is taught within the framework of the software engineering process. \r\n\r\nRequired text: Selected Readings handed out in class\r\n\r\nRequirement: This course is intended for individuals who have industrial software engineering experience with a large project, or a comprehensive undergraduate course in software engineering.", 
    "endTime": "08:20PM", 
    "hrsPerWeek": 5.75, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "ROZUM": [
            5.0, 
            2
        ]
    }, 
    "startTime": "06:00PM", 
    "units": ""
}
{
    "cid": "17638", 
    "course_name": "SYS ARCH FOR MANAGRS", 
    "course_rating": 4.142, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.79, 
    "numRatings": 5, 
    "prereqs": "Modern business is run on information systems of ever-increasing complexity \t\r\nand sophistication. As a result, business managers must be able to make effective decisions \t\t\t\t\r\nregarding the strategic selection, specification, design, and deployment of information systems.\t\t\t\t\r\nAppropriate application of architectural design concepts and techniques can significantly improve these decisions.\t\t\t\t\r\nThe course introduces key architectural concepts, techniques, and guidance to aspiring managers of organizations so as to enable them to make more effective architectural decisions and avoid common pitfalls. Although the course covers a significant body of technical material, the focus is on managerial challenges rather than technical implementation.  There is no formal prerequisite for this class other than a solid academic standing and some familiarity with software development.  Experience building, designing, specifying, or working with large information systems will be helpful, but is not required.  This course is not appropriate for students who have taken 17-655.", 
    "professors": {
        "BASS": [
            4.4624999999999995, 
            4
        ], 
        "KEELING": [
            2.86, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "17639", 
    "course_name": "MNGT SFTW DVL TCH EX", 
    "course_rating": 3.875, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.625, 
    "numRatings": 2, 
    "prereqs": "The course explores organizational issues in software development and\nsupport. The perspective taken is that of a manager or executive making\ndecisions above the single project or product level in the context of the\nentire software lifecycle and not just its development.\n\nThe course focus is one of breadth, rather than depth. Lectures are designed\nto provide the student with a cursory understanding of the issues, their\nrelevance, alternative course of actions, and examples from industry. Topics\nthat will be covered include: software development and support process;\nquality improvement frameworks; cost estimation and risk management; release\nplanning; project governance; project management offices; project portfolio\nplanning; distributed teams; and emerging trends such as DevOps and software\necosystems.\n\nStudents taking the course are required to write a brief essay on a topic\nselected from a number of instructor-proposed subjects and to work on a\ngroup project.\n\nThis course is not appropriate for students who have taken 17-653, Managing Software Development.", 
    "professors": {
        "MIRANDA": [
            3.875, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15128", 
    "course_name": "FRSHMN IMGRATN COURS", 
    "course_rating": 3.7800000000000002, 
    "description": "The Freshman Immigration Course is taken by first-semester Computer Science majors on the Pittsburgh campus. The course is designed to acquaint incoming majors with computer science at CMU. Talks range from historical perspectives in the field to descriptions of the cutting edge research being conducted in the School of Computer Science. Enrollment is limited to SCS Freshmen ONLY.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 2.26, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "CARRASQUEL": [
            3.7800000000000002, 
            2
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15129", 
    "course_name": "FRESHMN INNIGRTN II", 
    "course_rating": 4.605, 
    "description": "This course is ONLY offered at Carnegie Mellon in Qatar.\r\n\r\nStudents and instructors will solve different problems each week by searching the Web and other likely places for answers. The problems will be submitted by other faculty who will grade the quality of the answers. Students will learn strategies and techniques for finding information on the Web more efficiently; learn when to start with a search engine, a subject-oriented directory, or other tools; explore and practice using advanced search syntax for major search engines; experience specialized search engines for images, sound, multimedia, newsgroups, and discussion lists as well as subject-specific search engines; discover valuable resources to help keep you up-to-date in this fast-changing environment.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 6.1, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "HARRAS": [
            4.605, 
            2
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "8741", 
    "course_name": "SEMINAR IN DATA SCI", 
    "course_rating": 3.8, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 4.75, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "NYBERG": [
            3.8, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15649", 
    "course_name": "SEMINAR DATA SYSTEMS", 
    "course_rating": 5.0, 
    "description": "This three unit seminar is intended primarily for the Big Data Systems track of the Very Large Informations Systems program.  The content of the seminar will be the integration of the material in the courses and projects on this program; how everything fits into the computing world today, and whatever else is missing from the rest of the program.  Most meetings will be informal discussions with the program leadership, some guest speakers, and some little reading. Students not registered in the Big Data Systems track of the Very Large Informations Systems program need instructor approval to register for this seminar.\n\nCo-requisite: 15-648", 
    "endTime": "08:00PM", 
    "hrsPerWeek": 5.915, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "GIBSON": [
            5.0, 
            2
        ]
    }, 
    "startTime": "05:00PM", 
    "units": ""
}
{
    "cid": "15648", 
    "course_name": "STUDIO DATA SYSTEMS", 
    "course_rating": 4.5, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 17.5, 
    "numRatings": 1, 
    "prereqs": "Advancing the state of the art in large scale systems is challenging for many reasons including algorithm efficiency, weak consistency, failure tolerance, etc. However, as observed repeatedly among the Googles, Facebooks and Yahoo!'s, all the rest of these hardly matter if the developer is not experienced with large systems, if the logistics of large scale systems are not easily mastered, and if the large collection of core systems is unfamiliar. Without good hands on experience with the current systems and their tools, theoretical knowledge leads to theoretical success, and too often little more. This course is a project course intended primarily for the Big Data Systems track of the Very Large Informations Systems program. Others need instructor approval to register.", 
    "professors": {
        "GIBSON": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "17807", 
    "course_name": "RSRCH WRTG SFT ENGNR", 
    "course_rating": 4.75, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.75, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SHAW": [
            4.75, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16722", 
    "course_name": "SENSING & SENSORS", 
    "course_rating": 3.0766666666666667, 
    "description": "The principles and practices of quantitative perception (sensing) illustrated by the devices and algorithms (sensors) that implement them. Learn to critically examine the sensing requirements of proposed applications of robotics to real problems, to specify the required sensor characteristics, to analyze whether these specifications can be realized even in principle, to compare what can be realized in principle to what can actually be purchased, to understand the engineering factors that account for the discrepancies, and to design transducing, digitizing, and computing systems that come tolerably close to realizing the actual capabilities of available sensors. To the extent that time and interest permit, in addition to the sensing requirements of robot function (manipulation, mobility) per se, illustrative applications will also be drawn from the domain of observations that robots are employed to make (e.g., noninvasively locating buried objects or skeletal features, or nondestructively characterizing natural or manufactured materials), and the domain of infrastructures that robotic applications depend on (e.g., broadcast communication and navigation signals).", 
    "endTime": "05:50PM", 
    "hrsPerWeek": 7.616666666666667, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "SIEGEL": [
            3.0766666666666667, 
            3
        ]
    }, 
    "startTime": "04:30PM", 
    "units": ""
}
{
    "cid": "16720", 
    "course_name": "COMPUTER VISION", 
    "course_rating": 4.72, 
    "description": "This course introduces the fundamental techniques used in computer vision, that is, the analysis of patterns in visual images to reconstruct and understand the objects and scenes that generated them. Topics covered include image formation and representation, camera geometry, and calibration, computational imaging, multi-view geometry, stereo, 3D reconstruction from images, motion analysis, physics-based vision, image segmentation and object recognition. The material is based on graduate-level texts augmented with research papers, as appropriate. Evaluation is based on homeworks and a final project. The homeworks involve considerable Matlab programming exercises.\n\nTexts recommended but not required:\n\nTitle: \"Computer Vision Algorithms and Applications\"\nAuthor: Richard Szeliski\nSeries: Texts in Computer Science\nPublisher: Springer\nISBN: 978-1-84882-934-3\n\nTitle: \"Computer Vision: A Modern Approach\"\nAuthors: David Forsyth and Jean Ponce\nPublisher: Prentice Hall\nISBN: 0-13-085198-1", 
    "endTime": "05:50PM", 
    "hrsPerWeek": 15.475000000000001, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "HEBERT": [
            4.72, 
            2
        ]
    }, 
    "startTime": "04:30PM", 
    "units": ""
}
{
    "cid": "15641", 
    "course_name": "COMPUTER NETWORKS", 
    "course_rating": 3.9266666666666663, 
    "description": "The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.\r\n\r\nThe goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,\r\npeer-to-peer and the web, internetworking, and network security.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 16.583333333333332, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "ANDERSON": [
            2.85, 
            1
        ], 
        "STEENKISTE": [
            4.23, 
            1
        ], 
        "ZHANG": [
            4.7, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15640", 
    "course_name": "DISTRIBUTED SYSTEMS", 
    "course_rating": 3.6266666666666665, 
    "description": "The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.\n\nThe major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.", 
    "endTime": "", 
    "hrsPerWeek": 14.743333333333332, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "ANDERSEN": [
            4.14, 
            1
        ], 
        "KESDEN": [
            2.6, 
            1
        ], 
        "SESHAN": [
            4.14, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16725", 
    "course_name": "MEDICAL IMAGE ANALYS", 
    "course_rating": 4.67, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "Students will gain theoretical and practical skills in medical image analysis, including skills relevant to general image analysis.  The fundamentals of computational medical image analysis will be explored, leading to current research in applying geometry and statistics to segmentation, registration, visualization, and image understanding. Student will develop practical experience through projects using the National Library of Medicine Insight Toolkit ( ITK ), a popular open-source software library developed by a consortium of institutions including Carnegie Mellon University and the University of Pittsburgh.  In addition to image analysis, the course will include interaction with clinicians at UPMC.  It is possible that a few class lectures may be videoed for public distribution.\n\nPrerequisites:  Knowledge of vector calculus,  basic probability, and either C++ or python.  Required textbook, \"Machine Vision\", ISBN: 052116981X; Optional textbook, \"Insight to Images\", ISBN: 9781568812175.", 
    "professors": {
        "GALEOTTI": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5432", 
    "course_name": "PERSONL ONLN LEARNG", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.4, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "ALEVEN": [
            4.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5433", 
    "course_name": "USER INTERFACE LAB", 
    "course_rating": 3.755, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.4625, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "DEY": [
            3.8, 
            2
        ], 
        "HUDSON": [
            3.71, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5430", 
    "course_name": "PRGMG USABLE INTFCE", 
    "course_rating": 4.1, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.2, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DEY": [
            4.1, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5431", 
    "course_name": "SFTWR STRCT US INTRF", 
    "course_rating": 4.1, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "HUDSON": [
            4.1, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11744", 
    "course_name": "EXPMNTL INFM RETRVL", 
    "course_rating": 5.0, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.8, 
    "numRatings": 1, 
    "prereqs": "This seminar studies the experimental evaluation of information retrieval systems in community-wide evaluation forums such as TREC, CLEF, NTCIR, INEX, TAC, and other annual research evaluations. The content will change from year to year, but the general format will be an in-depth introduction to the evaluation forum; its tracks or tasks, test collections, evaluation methodologies, and metrics; and several of the most competitive or interesting systems in each track or task. Class discussions will explore and develop new methods that might be expected to be competitive. The seminar includes a significant project component in which small teams develop systems intended to be competive with the best recent systems. \r\n\r\nStudents are not required to participate in actual TREC, CLEF, etc., evaluations, however some students may wish to do so. A specific goal of the seminar is to prepare students to compete effectively in such evaluations. \r\n\r\nThe course meets twice a week during the first half of the semester. This part of the course is a combination of seminar-style presentations and brainstorming sessions about how to build competitive systems. The course meets once a week during the second half of the semester, when students are doing their projects. This part of the class is essentially weekly progress reports about student projects.", 
    "professors": {
        "CALLAN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5434", 
    "course_name": "APPLD MACHINE LEARNG", 
    "course_rating": 4.165, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.75, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "ROSE": [
            4.165, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5438", 
    "course_name": "RLE TCH LRNG 21ST CN", 
    "course_rating": 3.25, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KAM": [
            3.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "10915", 
    "course_name": "MLD JOURNAL CLUB", 
    "course_rating": 4.785, 
    "description": "This course provides a forum for students in Machine Learning to practice public speaking and technical reading skills. In addition, it will provide a venue for satisfying the MLD speaking requirement as well as the oral part of the Data Analysis Project. All requirements talks will be open to the public and advertised on the relevant seminar lists. During a typical meeting, one of the students will present a 20-30 minute talk and answer questions; then, the remaining students and the instructors will give advide for improving the talk and responding better to questions.\r\n\r\nPresentations can be based on a research paper or papers from the literature, or on the student's own work, or a cobination of the two. Students will present at least once or twice before attempting to pass the speaking requirement or DAP oral requirement.\r\n\r\nThe talk schedule for the semester will be formed during the first course meeting, so students who cannot attend the first meeting are strongly encouraged to contact the instructors ahead of time. All students wishing to satisfy the speaking or DAP oral requirement in a given semester must register for this course. In addition, this course is required for all first-year MLD students.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 4.355, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "GORDON": [
            4.785, 
            2
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15392", 
    "course_name": "ST:SECURE PROGRAMMNG", 
    "course_rating": 4.3, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SEACORD": [
            4.3, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15463", 
    "course_name": "COMPUTATNL PHOTGRPHY", 
    "course_rating": 4.67, 
    "description": "Computational Photography is an emerging new field created by the\r\nconvergence of computer graphics, computer vision and\r\nphotography. Its role is to overcome the limitations of the\r\ntraditional camera by using computational techniques to produce a\r\nricher, more vivid, perhaps more perceptually meaningful\r\nrepresentation of our visual world.\r\n\r\nThe aim of this advanced undergraduate course is to study ways in\r\nwhich samples from the real world (images and video) can be used to\r\ngenerate compelling computer graphics imagery. We will learn how to\r\nacquire, represent, and render scenes from digitized photographs.\r\nSeveral popular image-based algorithms will be presented, with an\r\nemphasis on using these techniques to build practical systems. This\r\nhands-on emphasis will be reflected in the programming assignments, in\r\nwhich students will have the opportunity to acquire their own images\r\nof indoor and outdoor scenes and develop the image analysis and\r\nsynthesis tools needed to render and view the scenes on the computer.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 10.5, 
    "numRatings": 1, 
    "prereqs": "(15213) and (21241 or 18202)", 
    "professors": {
        "KITANI": [
            4.67, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "15462", 
    "course_name": "COMPUTER GRAPHICS", 
    "course_rating": 4.1033333333333335, 
    "description": "This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 11.233333333333334, 
    "numRatings": 3, 
    "prereqs": "(21259 and 15213 and 21241) or (18213 and 18202)", 
    "professors": {
        "NARASIMHAN": [
            4.26, 
            1
        ], 
        "POLLARD": [
            4.025, 
            2
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15465", 
    "course_name": "ANIMATION ART & TECH", 
    "course_rating": 3.84, 
    "description": "15462", 
    "endTime": "", 
    "hrsPerWeek": 11.715, 
    "numRatings": 4, 
    "prereqs": "Animation Art and Technology is an interdisciplinary course cross-listed between Art and Computer Science. Faculty and teaching assistants from computer science and art teach the class as a team. It is a project-based course in which four to five interdisciplinary teams of students produce animations. Most of the animations have a substantive technical component and the students are challenged to consider innovation with content to be equal with the technical. The class includes basic tutorials for work in Maya leading toward more advanced applications and extensions of the software such as motion capture and algorithms for animating cloth, hair, particles, and grouping behaviors. The first class will meet in CFA room 303.", 
    "professors": {
        "DUESING": [
            3.75, 
            2
        ], 
        "HODGINS": [
            3.9299999999999997, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15396", 
    "course_name": "ST: SCIENCE OF WEB", 
    "course_rating": 4.25, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.41, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "VON AHN ARELLANO": [
            4.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5650", 
    "course_name": "INTERACTN DESGN STDO", 
    "course_rating": 4.448333333333333, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.67, 
    "numRatings": 6, 
    "prereqs": "", 
    "professors": {
        "DOW": [
            3.56, 
            1
        ], 
        "FASTE": [
            4.843333333333334, 
            3
        ], 
        "PAULOS": [
            4.0, 
            1
        ], 
        "ZIMMERMAN": [
            4.6, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15466", 
    "course_name": "COMPTR GAME PROGRMNG", 
    "course_rating": 4.14, 
    "description": "The goal of the course is two-fold. The first goal is to teach students some of the higher-level techniques that are necessary to implement interesting computer games. In particular, a large emphasis will be on game AI. The class will also cover such topics as game networking, scheduling of tasks in computationally intensive games, and game design. The class will also briefly cover few selected topics such as collision detection and physically-based animation that are good to know even if one is developing games using a game engine. The second goal of the class is to get students familiar with programming games on various platforms using state-of-the-art game engines. To this end, the course will have a heavy programming focus. It will have a number of projects requiring students to apply the learned material to develop games using Unity 3D game engine. The students will develop games that run on a standalone PC, games that run on an Android platform and games that work in a multi-user mode.\r\nIn addition to learning the material and learning how to use game engines, the projects will provide students with portfolios of games they have developed. Such a portfolio is important in getting a job in game industry.\r\n\r\nPrerequisite is 15-462 or contact the instructor for permission.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 9.71, 
    "numRatings": 1, 
    "prereqs": "15462", 
    "professors": {
        "LIKHACHEV": [
            4.14, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "15494", 
    "course_name": "ST:COGNTVE ROBOTICS", 
    "course_rating": 3.25, 
    "description": "15213", 
    "endTime": "", 
    "hrsPerWeek": 10.25, 
    "numRatings": 1, 
    "prereqs": "Cognitive robotics is a new approach to robot programming based on\r\n  high level primitives for perception and action. These primitives draw\r\n  inspiration from ideas in cognitive science combined with state of the\r\n  art robotics algorithms. Students will experiment with these\r\n  primitives and help develop new ones using the Tekkotsu software\r\n  framework on the Calliope robot, which includes a 5 degree-of-freedom\r\n  arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu\r\n  Linux on a dual-core on-board netbook. Prior robotics experience is\r\n  not necessary, but strong programming skills are required.", 
    "professors": {
        "TOURETZKY": [
            3.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11734", 
    "course_name": "ADV MACH TRNSLTN SEM", 
    "course_rating": 4.5, 
    "description": "11731", 
    "endTime": "", 
    "hrsPerWeek": 2.0, 
    "numRatings": 1, 
    "prereqs": "The Advanced Machine Translation Seminar is a graduate-level seminar on current research topics in Machine Translation. The seminar will cover recent research on different approaches to Machine Translation (Statistical MT, Example-based MT, Interlingua and rule-based approaches, hybrid approaches, etc.). Related problems that are common to many of the various approaches will also be discussed, including the acquisition and construction of language resources for MT (translation lexicons, language models, etc.), methods for building large sentence-aligned bilingual corpora, automatic word alignment of sentence-parallel data, etc. The material covered will be mostly drawn from recent conference and journal publications on the topics of interest and will vary from year to year. The course will be run in a seminar format, where the students prepare presentations of selected research papers and lead in class discussion about the presented papers. \r\nPrerequisites & corequisites: \r\n\r\n11-731: Machine Translation, or instructor approval.", 
    "professors": {
        "LAVIE": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15496", 
    "course_name": "ST:CS THRY INFO AGE", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.5, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "GURUSWAMI": [
            5.0, 
            1
        ], 
        "KANNAN": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11736", 
    "course_name": "GRAD SEM ENDG LANG", 
    "course_rating": 4.25, 
    "description": "The purpose of this seminar is to allow students to better understand the linguistic, social and political issues when working with language technologies for endangered languages. Often in LTI we concentrate on issues of modeling with small amounts of data, or designing optimal strategies for collecting data, but ignore many of wider practical issues that appear when working with endangered languages. \r\n\r\nThis seminar will consist of reading books and papers, and having participants give presentations; a few invited talks (e.g. from field linguists, and language advocates) will also be included. It will count for 6 units of LTI course credit. It may be possible for interested students to also carry out a related 6-unit project as a lab.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 4.25, 
    "numRatings": 4, 
    "prereqs": "None", 
    "professors": {
        "BLACK": [
            4.5, 
            1
        ], 
        "FREDERKING": [
            4.25, 
            1
        ], 
        "LEVIN": [
            3.75, 
            1
        ], 
        "TOMOKIYO": [
            4.5, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "11731", 
    "course_name": "MACHINE TRANSLATION", 
    "course_rating": 4.205, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.9, 
    "numRatings": 2, 
    "prereqs": "Instructors: Teruko Mitamura (leader), Bob Frederking, Eric Nyberg, Alon Lavie\r\n\r\nPrerequisites:\r\n11-721 \"Grammars and Lexicons\" or equivalent background is recommended. \r\n11-711 \"Algorithms for NLP\" or equivalent background is recommended. \r\n\r\nCourse Description\r\nMachine Translation is an introductory graduate-level course surveying history, techniques, and research topics in the field. \r\n\r\nThe main objectives of the course are:\r\n\r\nObtain a basic understanding of MT systems and MT-related issues. \r\nLearn about theory and approaches in Machine Translation. \r\nLearn about basic techniques for MT development, in preparation for the MT Lab course and real-world MT system project development. \r\nObtain in-depth knowledge of one current topic in MT, or\r\nPerform an analysis of a given MT problem, matching it with the most suitable techniques (includes research, report and presentation).", 
    "professors": {
        "DYER": [
            4.91, 
            1
        ], 
        "LAVIE": [
            3.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11733", 
    "course_name": "MULTILNG SPCH TRANS", 
    "course_rating": 5.0, 
    "description": "Building speech-to-speech translation systems (S-2-S) is an extremely complex task, involving research in Automatic Speech Recognition (ASR), Machine Translation (MT), Natural Language Understanding (NLU), as well as Text-to-Speech (TTS) and doing this for many languages doesn't make it easier. Although substantial progress has been made in each of these areas over the last years, the integration of the invididual ASR, MT, NLU, and TTS components to build a good S-2-S system is still a very challenging task.\r\n\r\nThe seminar course on Multilingual Speech-to-Speech Translation will cover important recent work in the areas of ASR, MT, NLU, and TTS with a special focus on language portable approaches and discuss solutions for rapidly building state-of-the-art speech-to-speech translation systems.\r\n\r\nIn the beginning sessions the instructors and other invited lecturers will give a brief introduction into the broad field. We will select papers on particular topics to read by each week. While everyone will do all readings and participate in the discussions, one person is assigned per session to present the basic ideas of the topic specific papers and lead the concluding discussion.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "BLACK": [
            5.0, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15493", 
    "course_name": "DATA MINING", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "FOSSATI": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15498", 
    "course_name": "ST: FORENSIC CMP SCI", 
    "course_rating": 4.5649999999999995, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.5, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KESDEN": [
            4.5649999999999995, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2513", 
    "course_name": "ALGTH & DATA STRUCTR", 
    "course_rating": 3.75, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KINGSFORD": [
            3.75, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2730", 
    "course_name": "CELL SYSTMS MODELING", 
    "course_rating": 4.0575, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.2075, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "LANGMEAD": [
            4.0575, 
            4
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15302", 
    "course_name": "ST: INNV UNDSRVD COM", 
    "course_rating": 4.598333333333334, 
    "description": "76101", 
    "endTime": "", 
    "hrsPerWeek": 12.055, 
    "numRatings": 6, 
    "prereqs": "The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by one of the underserved community partners of the TechBridgeWorld research group at Carnegie Mellon University. This year, the course will focus on innovating virtual navigation tools for visually impaired adults. Promising outcomes of this course will be further developed by the TechBridgeWorld research group and tested with visually impaired users with the permission of students involved with producing these outcomes.", 
    "professors": {
        "COOPER": [
            4.835, 
            2
        ], 
        "DIAS": [
            4.48, 
            4
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15303", 
    "course_name": "ST:SM INNVG UNDS COM", 
    "course_rating": 4.335, 
    "description": "76101", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 2, 
    "prereqs": "The ultimate goal of this course is to familiarize students with ongoing\nwork in the area of technology innovations for underserved communites.\nThis seminar course will review several key publications and\npresentations on this topic and teach students the necessary skills to\nanalyze and critique this work in useful ways.   Class sessions will be\ndedicated to discussing reading/viewing assignments and each class\ndiscussion will be led by students.  Assignments will involve analyzing,\nwriting, and presenting critiques of specific projects.", 
    "professors": {
        "COOPER": [
            4.0, 
            1
        ], 
        "DIAS": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "2740", 
    "course_name": "BIOIMAGE INFORMTCS", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.5, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "YANG": [
            4.5, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53871", 
    "course_name": "DRAM STRCT INTER STR", 
    "course_rating": 4.5, 
    "description": "Interactive Stories are experienced as linear stories by the player. In order to write for interactive media, writers will use experience with and knowledge of traditional dramatic media to create new media interactive stories. To teach these techniques, we use the medium of television. Students will create spec scripts for various one-hour dramas as a way to dig deep into their writing skill and to understand how these stories work the way they do. Through this methodology, students will learn skills and come away with writing samples that will increase their knowledge in any storytelling medium. This is a course for writers; we will be doing a nigh volume of writing followed by critiques in class. \nPrereq: No specific prereq; all applicants must contact the professor for permission.", 
    "endTime": "03:50PM", 
    "hrsPerWeek": 10.25, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "KLUG": [
            4.5, 
            1
        ]
    }, 
    "startTime": "01:00PM", 
    "units": ""
}
{
    "cid": "5834", 
    "course_name": "APPLD MACHINE LEARNG", 
    "course_rating": 4.473333333333334, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.073333333333332, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "ROSE": [
            4.473333333333334, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5832", 
    "course_name": "PERSONL ONLN LEARNG", 
    "course_rating": 4.025, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.875, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "ALEVEN": [
            4.025, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5833", 
    "course_name": "GADG SENS & ACTV REC", 
    "course_rating": 4.225, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.49, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "HUDSON": [
            4.225, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5830", 
    "course_name": "ADV USER INTFC SFTW", 
    "course_rating": 4.53, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.73, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MYERS": [
            4.53, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5838", 
    "course_name": "RL TCH LRNG 21ST CNY", 
    "course_rating": 4.29, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 10.14, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "KAM": [
            4.29, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15605", 
    "course_name": "OPRG SYS DSG IMPLMN", 
    "course_rating": 4.543333333333333, 
    "description": "Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.\r\nThe core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware\r\nsimulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and \"team programming\" skills (source control,\r\nmodularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.\r\n\r\nStudents, especially graduate students, who have not satisfied the prerequisite at\r\nCarnegie Mellon are strongly cautioned - to enter the class you must be able\r\nto write a storage allocator in C, use a debugger, understand 2's-complement\r\narithmetic, and translate between C and x86 assembly language.  The\r\ninstructor may require you to complete a skills assessment exercise before\r\nthe first week of the semester in order to remain registered in the class.\r\n\r\nAuditing:  this course is usually full, and we generally receive\r\nmany more requests to audit than we can accept.  If you wish to\r\naudit, please have your advisor contact us before the semester\r\nbegins to discuss your educational goals.", 
    "endTime": "11:20AM", 
    "hrsPerWeek": 23.69333333333333, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "ECKHARDT": [
            4.67, 
            2
        ], 
        "MOWRY": [
            4.29, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "11785", 
    "course_name": "LB COURSE DEEP LRNG", 
    "course_rating": 3.56, 
    "description": "to be determined by department", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 8.9, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "RAMAKRISHNAN": [
            3.56, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "11786", 
    "course_name": "SEMINAR ON DEEP LNG", 
    "course_rating": 4.25, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 3.5, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "RAMAKRISHNAN": [
            4.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11783", 
    "course_name": "SLF-PCD LAB RCH IN", 
    "course_rating": 4.89, 
    "description": "11751 and 18781 and 18799", 
    "endTime": "", 
    "hrsPerWeek": 5.333333333333333, 
    "numRatings": 3, 
    "prereqs": "Massively Multi-player Online Role-Playing Games have evolved into Virtual Worlds (VWs), and are creating ever richer environments for experimentation on all aspects of human to human, or human to machine communication, as well as for information discovery and access. So far, interaction has been constrained by the limited capabilities of keyboards, joysticks, or computer mice. This creates an exciting opportunity for explorative research on speech input and output, speech-to-speech translation, or any aspect of language technology. Of particular interest will be a combination with other novel \"real world\" (RW) input, or output devices, such as mobile phones or portable games consoles, because they can be used to control the VW, or make it accessible everywhere in RW. Language technologies in particular profit from \"context awareness\", because domain adaptation can be performed. For scientific experimentation in that area, Virtual Worlds offer the opportunity to concentrate on algorithms, because context sensors can be written with a few lines of code, without the need for extra hardware sensors. Algorithms can also run \"continuously\", without the need for specific data collection times or places, because the VW is \"always on\".\r\n\r\nIn this lab, we will enhance existing clients to virtual worlds so that they can connect to various speech and language related research systems developed at LTI and CMU's Silicon Valley campus. The lab will be held jointly at the CMU's Pittsburgh and Silicon Valley Campuses. We will \"eat our own dog food\", so the goal will be to hold the last session entirely in a virtual class room, which will by that time include speech control of virtual equipment, speech-to-speech translation, and some devices that can be controlled using non-PC type equipment, like mobile phones. Eventually, this virtual room or the know-how gathered", 
    "professors": {
        "METZE": [
            4.835, 
            2
        ], 
        "ZHANG": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15123", 
    "course_name": "EFFCTV PGMMNG C UNIX", 
    "course_rating": 3.0700000000000003, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.215, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "MTIBAA": [
            2.14, 
            1
        ], 
        "RAZAK": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16467", 
    "course_name": "HUMAN ROBOT INTERACT", 
    "course_rating": 4.67, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 9.78, 
    "numRatings": 2, 
    "prereqs": "The field of human-robot interaction (HRI) is fast becoming a significant area of research in robotics. The basic objective is to create and investigate interfaces that enable natural and effective modes of interaction with robotic technologies. HRI is highly interdisciplinary, bringing together methodologies and techniques from robotics, artificial intelligence, human-computer interaction, human factors, interaction design, psychology, anthropology, education, drama, and other fields.\r\n\r\nThis course is primarily lecture-based, with in-class participatory mini-projects, group homework assignments, and a group term project that will enable students to put theory to practice using state-of-the-art interactive robots. The topics covered will include man-machine coupling, underlying robotic technologies, as they relate to human-robot interaction, interaction methodologies and techniques, the singularity, and will include significant discussion of application domains that feature HRI.\r\n\r\nThis course has no prerequisites, but some basic familiarity with robots is recommended (programming knowledge is not necessary, but is useful for the term project).", 
    "professors": {
        "NOURBAKHSH": [
            4.78, 
            1
        ], 
        "SIMMONS": [
            4.56, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "8743", 
    "course_name": "INFR SYSTMS PROJECT", 
    "course_rating": 4.075, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.91, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "NYBERG": [
            3.79, 
            1
        ], 
        "TOMASIC": [
            4.36, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8632", 
    "course_name": "LAW COMPTR TECHNOLGY", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SHAMOS": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16264", 
    "course_name": "HUMANOIDS", 
    "course_rating": 3.8299999999999996, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 6.696666666666666, 
    "numRatings": 3, 
    "prereqs": "This course surveys perception, cognition, and movement in humans, humanoid robots, and humanoid graphical characters. Application areas include more human-like robots, video game characters, and interactive movie characters.", 
    "professors": {
        "ATKESON": [
            3.69, 
            2
        ], 
        "NAGARAJAN": [
            4.11, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "17643", 
    "course_name": "HARDWRE FOR SW ENGRS", 
    "course_rating": 5.0, 
    "description": "The goal of this course is to provide an understanding of electronics beyond the average computer organization course.  Its purpose is to enable software engineers to be more effective in domains where software and hardware are closely coupled. Examples of such domains include robotics, avionics, automotive, process control, and many others. Students successfully completing this course will be better prepared to communicate with hardware-oriented engineers, understand the hardware environment, and the subtle regions where software and hardware meet. \r\n\r\nRequirement: Students need not have a hardware background, but they should have a solid computer science background including languages, data structures, discrete math, operating systems, and computer organization.  It is highly desirable that students have project experience, preferably real-world experience, although project course work and/or internships will suffice. Undergraduates need instructor approval (lattanze@cs.cmu.edu).", 
    "endTime": "05:00PM", 
    "hrsPerWeek": 11.67, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "LATTANZE": [
            5.0, 
            1
        ]
    }, 
    "startTime": "03:30PM", 
    "units": ""
}
{
    "cid": "15110", 
    "course_name": "PRINCPLS OF COMPUTNG", 
    "course_rating": 3.89551724137931, 
    "description": "A course in fundamental computing principles for students with minimal or no\r\ncomputing background. Programming constructs: sequencing, selection,\r\niteration, and recursion. Data organization: arrays and lists. Use of\r\nabstraction in computing: data representation, computer organization,\r\ncomputer networks, functional decomposition, and application programming\r\ninterfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems\r\nbased on complexity, non-computable functions, and using heuristics to\r\nfind reasonable solutions to complex problems. Social, ethical and legal\r\nissues associated with the development of new computational artifacts will\r\nalso be discussed.", 
    "endTime": "03:20PM", 
    "hrsPerWeek": 11.187931034482757, 
    "numRatings": 29, 
    "prereqs": "None", 
    "professors": {
        "CORTINA": [
            4.5633333333333335, 
            3
        ], 
        "DANNENBERG": [
            3.6950000000000003, 
            2
        ], 
        "FOSSATI": [
            4.2139999999999995, 
            5
        ], 
        "GUNAWARDENA": [
            3.785, 
            6
        ], 
        "KAYNAR": [
            3.6383333333333336, 
            6
        ], 
        "KESDEN": [
            4.5, 
            1
        ], 
        "MOHIT": [
            4.67, 
            1
        ], 
        "SANS": [
            4.85, 
            1
        ], 
        "TOURETZKY": [
            3.1399999999999997, 
            2
        ], 
        "VON RONNE": [
            2.99, 
            2
        ]
    }, 
    "startTime": "02:30PM", 
    "units": ""
}
{
    "cid": "15112", 
    "course_name": "FNDMTLS OF PGMG & CS", 
    "course_rating": 4.266000000000001, 
    "description": "A technical introduction to the fundamentals of programming with an emphasis\r\non producing clear, robust, and reasonably efficient code using top-down\r\ndesign, informal analysis, and effective testing and debugging. Starting\r\nfrom first principles, we will cover a large subset of the Python\r\nprogramming language, including its standard libraries and programming\r\nparadigms.  We will also target numerous deployment scenarios, including\r\nstandalone programs, shell scripts, and web-based applications.\r\nThis course assumes no prior programming experience. Even so, it is a\r\nfast-paced and rigorous preparation for 15-122.  Students seeking a more\r\ngentle introduction to computer science should consider first taking 15-110.\r\n\r\nNOTE: students must achieve a C or better in order to use \r\nthis course to satisfy the pre-requisite for any subsequent Computer \r\nScience course.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 13.985999999999999, 
    "numRatings": 15, 
    "prereqs": "None", 
    "professors": {
        "": [
            4.27, 
            1
        ], 
        "KESDEN": [
            3.348, 
            5
        ], 
        "KOSBIE": [
            4.808333333333333, 
            6
        ], 
        "RAZAK": [
            4.565, 
            2
        ], 
        "SANS": [
            5.0, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "11675", 
    "course_name": "BIG DTA SYS BIOTCHLG", 
    "course_rating": 4.83, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 8.5, 
    "numRatings": 1, 
    "prereqs": "To be determined", 
    "professors": {
        "VU": [
            4.83, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15694", 
    "course_name": "ST:COGNTVE ROBOTICS", 
    "course_rating": 5.0, 
    "description": "15214", 
    "endTime": "", 
    "hrsPerWeek": 11.0, 
    "numRatings": 1, 
    "prereqs": "Cognitive robotics is a new approach to robot programming based on\r\n  high level primitives for perception and action. These primitives draw\r\n  inspiration from ideas in cognitive science combined with state of the\r\n  art robotics algorithms. Students will experiment with these\r\n  primitives and help develop new ones using the Tekkotsu software\r\n  framework on the Calliope robot, which includes a 5 degree-of-freedom\r\n  arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu\r\n  Linux on a dual-core on-board netbook. Prior robotics experience is\r\n  not necessary, but strong programming skills are required.", 
    "professors": {
        "TOURETZKY": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "2252", 
    "course_name": "INTRO CMPTL CELL BLY", 
    "course_rating": 4.6, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 2.9, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "Murphy": [
            4.6, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2251", 
    "course_name": "INTR CMPTNL MLCR BLY", 
    "course_rating": 3.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SCHWARTZ": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2250", 
    "course_name": "INTRO COMPTNL BIOLGY", 
    "course_rating": 3.875, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.2075, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "Murphy": [
            3.8600000000000003, 
            2
        ], 
        "SCHWARTZ": [
            3.8899999999999997, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "53708", 
    "course_name": "ADV VISUAL STORY", 
    "course_rating": 4.4, 
    "description": "53608", 
    "endTime": "", 
    "hrsPerWeek": 13.0, 
    "numRatings": 1, 
    "prereqs": "Advanced Visual Story further explores the fundamental principles taught in Visual Story. Advanced aspects of mise-en-scene, visual storytelling, continuity-style coverage, temporal and spatial montage theory, directing actors, film theory and aesthetics will be studied in depth.  The aesthetics of designing and directing scenes for motion pictures will also be addressed in this course by breaking down and analyzing classic film scenes.  Visiting production houses in the area will be planned throughout the term.  This will be a workshop-based course with students working on either projects of their own or part of a team.  Students will be expected to assist in classmate production teams. Prerequisite 53-608", 
    "professors": {
        "VITUCCIO": [
            4.4, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "53700", 
    "course_name": "ETC FUNDAMENTALS", 
    "course_rating": 4.106, 
    "description": "The Fundamentals of ETC covers the breadth and specificity of the field of entertainment technology. A main focus of this course will be to create and establish a shared interdisciplinary vocabulary of the design and development aspects pertinent to the field. Similarly, presentation skills will be emphasized to enable students to communicate their ideas effectively across a variety of perspectives. Also, project management techniques will be explored that will be directly applicable to ETC projects. Throughout the semester, ETC faculty and industry professionals will provide historical context and experiential referents in relation to entertainment technology. Students will have the opportunity to begin shaping their professional networks as well as establishing a fundamental understanding of how experiences engage and inform.", 
    "endTime": "11:20AM", 
    "hrsPerWeek": 4.521999999999999, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "CHRISTEL": [
            4.2, 
            1
        ], 
        "DAVIDSON": [
            4.1000000000000005, 
            3
        ], 
        "YEE": [
            4.03, 
            1
        ]
    }, 
    "startTime": "09:30AM", 
    "units": ""
}
{
    "cid": "15437", 
    "course_name": "WEB APPLCTN DEVLPMNT", 
    "course_rating": 4.687142857142857, 
    "description": "This course will introduce concepts in programming web application\nservers. We will study the fundamental architectural elements of\nprogramming web sites that produce content dynamically. The primary\ntechnologies introduced will be the Django framework for Python and\nJava Servlets, but we will cover related topics as necessary so that\nstudents can build significant applications. Such topics include:\nHTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and\nNon-relational Databases, Object-Relation Mapping tools, Security, Web\nServices, Cloud Deployment, Internationalization, and Scalability and\nPerformance Issues. Students must be comfortable programming in Java\nand/or Python to register for this course. Students must provide their\nown computer hardware for this course. Please see the Related URL\nabove for more information.", 
    "endTime": "12:20PM", 
    "hrsPerWeek": 10.075714285714287, 
    "numRatings": 7, 
    "prereqs": "15214", 
    "professors": {
        "EPPINGER": [
            4.615, 
            2
        ], 
        "GARROD": [
            4.795, 
            4
        ], 
        "SANS": [
            4.4, 
            1
        ]
    }, 
    "startTime": "11:30AM", 
    "units": ""
}
{
    "cid": "17808", 
    "course_name": "SOFTWARE ENGNG RESRC", 
    "course_rating": 4.428571428571429, 
    "description": "This course prepares PhD students to begin research in software\r\nengineering. It introduces important ideas across the breadth of software\r\nengineering and the major research strategies of the field. Students\r\nwill become familiar with the structure of the field; they will learn\r\nthe seminal ideas and developments that led to current research\r\nquestions; they will learn to critique research papers to evaluate\r\ntheir claims and evidence; and they will also become familiar with the\r\ncurrent research themes at CMU.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 11.428571428571429, 
    "numRatings": 7, 
    "prereqs": "None", 
    "professors": {
        "ALDRICH": [
            4.0, 
            1
        ], 
        "BREAUX": [
            4.0, 
            1
        ], 
        "GARLAN": [
            5.0, 
            1
        ], 
        "HERBSLEB": [
            5.0, 
            1
        ], 
        "KASTNER": [
            4.0, 
            1
        ], 
        "SCHERLIS": [
            4.0, 
            1
        ], 
        "SHAW": [
            5.0, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "17413", 
    "course_name": "SFTWR ENGRNG RFLCTN", 
    "course_rating": 4.67, 
    "description": "This course is an opportunity to reflect on a software engineering experience you have had in industry.  It is structured as a writers workshop, in which you will work with the instructor and other students to identify and flesh out a software engineering theme that is illustrated by your industry experience.  You will prepare a 10-page report on this theme, comparable to a practitioner's report at a conference like ICSE or OOPSLA, and a 30-minute presentation to match.\r\n\r\nThis course fulfills a requirement of the Software Engineering Minor program, but students in other programs may take the course if they meet the prerequisite industry experience and if space is available.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 4.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "SCHERLIS": [
            4.67, 
            1
        ]
    }, 
    "startTime": "03:30PM", 
    "units": ""
}
{
    "cid": "53831", 
    "course_name": "BUILDNG VIRTUAL WRLD", 
    "course_rating": 4.282857142857144, 
    "description": "This is a project course, where interdisciplinary teams build rapidly prototyped immersive interactive virtual worlds. The course will cover world building, environmental design, non-linear storytelling, and related topics. Students will use modeling tools, paint tools, sound processing tools, and the Unity game engine. At the end of the semester, we hold an exhibition on campus to show class projects to the Carnegie Mellon community. The goal of the course is to take students with varying talents, backgrounds, and perspectives and put them together to do what they couldn\ufffdt do alone.   The course is primarily for ETC graduate students, but occasionally other students are admitted by special permission from the instructors. To enroll, students must have ONE of the following skills: 3D modeling, high quality 2D art skills,strong programming skills, or the ability to compose and record original music and/or sound effects. The key is that there are no \ufffdidea people\ufffd in the course; everyone must share in the mechanical creation of the worlds. Students in the course may be assigned to a role that is not their primary skill set due to the distribution of the enrollees. This is a hands-on course and it takes a lot of time, but most students find it very fulfilling and fun. Note that we don\ufffdt try to teach artists to program, or engineers to paint; we form teams where everyone does what they\ufffdre already skilled at to attack a joint project. Class time includes a split between regular lectures, display/critique of group projects, guest lectures and workshops designed to aid in world creation. Significant out-of-classroom time is required at the ETC working with your group, and non-ETC students must be sure to contact the faculty before the semester begins to get clarity on what time in class will be required.", 
    "endTime": "03:20PM", 
    "hrsPerWeek": 19.344285714285714, 
    "numRatings": 7, 
    "prereqs": "None", 
    "professors": {
        "COMLEY": [
            4.0, 
            1
        ], 
        "CULYBA": [
            4.63, 
            1
        ], 
        "KLUG": [
            4.180000000000001, 
            3
        ], 
        "SCHELL": [
            4.81, 
            1
        ], 
        "VITUCCIO": [
            4.0, 
            1
        ]
    }, 
    "startTime": "09:30AM", 
    "units": ""
}
{
    "cid": "16868", 
    "course_name": "BIOMCHC & MOTOR CNTL", 
    "course_rating": 4.72, 
    "description": "The course provides an introduction into the mechanics and control of legged locomotion with a focus on the human system. The main topics covered include fundamental concepts, muscle-skeleton mechanics, and neural control. Examples of bio-inspiration in robots and rehabilitation devices are highlighted.  By the end of the course, you will have the basic knowledge to build your own dynamic an control models of animal and human motions. The course develops the material in parallel with an introduction into Matlab's Simulink and SimMechanics environments for modeling nonlinear dynamic systems. Assignments and team projects will let you apply your knowledge to problems of animal and human motion in theory and computer simulations.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 13.22, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "GEYER": [
            4.72, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "16865", 
    "course_name": "ADV MOBILE ROB DEV", 
    "course_rating": 4.455, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 13.25, 
    "numRatings": 2, 
    "prereqs": "This course will develop the robot that CMU will drive on the moon to win the Lunar XPrize while mentoring the tributary technologies and creative process. The course will also claim the first cash from Google?s Lunar Milestone Prize by demonstrating flight readiness of the rover.\n\nThe tributary technologies addressed in this course include mechanisms, actuation, thermal regulation, power, sensing, computing, communication, and operations.  Process includes robot development and verification of functionality, reliability, and flight readiness.  Relevant skills include robotics, mechanics, electronics, software, fabrication, testing, documentation, and systems engineering.  The course is appropriate for a broad range of interests and experience.", 
    "professors": {
        "WHITTAKER": [
            4.455, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "16861", 
    "course_name": "MOBILE ROBOT DESIGN", 
    "course_rating": 3.89, 
    "description": "This course investigates robot mobility, energetics, sensing, computing, software, payload, and operating environment in the context of space navigation and planetary landing. These are modeled in simulation, implemented and evaluated as components, integrated into, and tested as comprehensive, tangible prototypes. The context is robotic pursuit of the Moon. Scope incorporates landing, locomotion, navigation, communication, sensing, power and thermal, in addition to the traditional challenges of low mass, energetics, space environment, and reliability of space robot design.\r\n", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 16.11, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "WHITTAKER": [
            3.89, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "10601", 
    "course_name": "MACHINE LEARNING", 
    "course_rating": 3.7975000000000003, 
    "description": "Machine Learning (ML) attempts to design programs that automatically improve their performance through experience.   This includes learning many types of tasks based on many types of experience, e.g. spotting high-risk medical patients, recognizing speech, classifying text documents, detecting credit card fraud, or driving autonomous vehicles.\n\n10601 covers all or most of: concept learning, version spaces, decision trees, neural networks, computational learning theory, active learning, estimation & the bias-variance tradeoff, hypothesis testing, Bayesian learning, the MDL principle, the Gibbs classifier, Naive Bayes, Bayes Nets & Graphical Models, the EM algorithm, Hidden Markov Models, K-Nearest-Neighbors and nonparametric learning, reinforcement learning, genetic algorithms, bagging, boosting and discriminative training.\n\nGrading will be based on weekly or biweekly assignments (written and/or programming), a midterm, a final exam, and possibly a project (details may vary depending on the section).\n\n10601 is recommended for CS Seniors & Juniors, quantitative Masters students, & non-MLD PhD students.  \n\nPrerequisites (strictly enforced): strong quantitative aptitude, college prob&stats course, and programming proficiency.  For learning to apply ML practically & effectively, without the above prerequisites, consider 11344/05834 instead.\n\nFor section-specific information, see:\n\n\tSection 10601A: http://www.cs.cmu.edu/~roni/10601A\n        Section 10601B: http://www.cs.cmu.edu/~sssykim/teaching/s14/s14.html", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 11.5225, 
    "numRatings": 4, 
    "prereqs": "(15122) and (21127 or 15151)", 
    "professors": {
        "COHEN": [
            3.24, 
            1
        ], 
        "ROSENFELD": [
            4.300000000000001, 
            2
        ], 
        "XING": [
            3.35, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "10605", 
    "course_name": "MCH LRNG LRG DTAST", 
    "course_rating": 4.46, 
    "description": "15210 or 15214", 
    "endTime": "", 
    "hrsPerWeek": 10.415, 
    "numRatings": 2, 
    "prereqs": "Large datasets are difficult to work with for several reasons. They\nare difficult to visualize, and it is difficult to understand what\nsort of errors and biases are present in them. They are\ncomputationally expensive to process, and often the cost of learning\nis hard to predict - for instance, and algorithm that runs quickly in\na dataset that fits in memory may be exorbitantly expensive when the\ndataset is too large for memory. Large datasets may also display\nqualitatively different behavior in terms of which learning methods\nproduce the most accurate predictions.\n\nThis course is intended to provide a student practical knowledge of,\nand experience with, the issues involving large datasets. Among the\nissues considered are: scalable learning techniques, such as streaming\nmachine learning techniques; parallel infrastructures such as\nmap-reduce; practical techniques for reducing the memory requirements\nfor learning methods, such as feature hashing and Bloom filters; and\ntechniques for analysis of programs in terms of memory, disk usage,\nand (for parallel methods) communication complexity.\n\nThe class will include programming assignments, and a one-month short\nproject chosen by the student. The project will be designed to compare\nthe scalability of variant learning algorithms on datasets.\n\nAn introductory course in machine learning, like 10-601 or 10-701, is\na prerequisite or a co-requisite. If you plan to take this course and\n10-601 concurrently please tell the instructor.\n\nThe course will include several substantial programming assignments,\nso an additional prerequisite is 15-211, or 15-214, or comparable\nfamiliarity with Java and good programming skills.\n\nUndergraduates need permission of the instructor to enroll.", 
    "professors": {
        "COHEN": [
            4.46, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "11741", 
    "course_name": "INFO RETRIEVAL", 
    "course_rating": 3.9300000000000006, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.985, 
    "numRatings": 4, 
    "prereqs": "This course studies the theory, design, and implementation of text-based information systems. The Information Retrieval core components of the course include statistical characteristics of text, representation of information needs and documents, several important retrieval models (Boolean, vector space, probabilistic, inference net, language modeling), clustering algorithms, automatic text categorization, and experimental evaluation. The software architecture components include design and implementation of high-capacity text retrieval and text filtering systems. A variety of current research topics are also covered, including cross-lingual retrieval, document summarization, machine learning, topic detection and tracking, and multi-media retrieval. \r\n \r\nPrerequisites:  \r\n\r\nProgramming and data-structures at the level of 15-212 or higher.\r\nAlgorithms comparable to the undergraduate CS algorithms course (15-451) or higher.\r\nBasic linear algebra (21-241 or 21-341). \r\nBasic statistics (36-202) or higher.", 
    "professors": {
        "CALLAN": [
            4.53, 
            2
        ], 
        "YANG": [
            3.33, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "53630", 
    "course_name": "ENTRPRNSHP ENTRN TCH", 
    "course_rating": 4.833333333333333, 
    "description": "This course is an introduction to Entrepreneurship designed to develop skills related to entrepreneurship and innovation for non-business students in the Entertainment Technology Center. The course assumes no background courses in business and is appropriate for those who are interested in bringing innovations to market either through new companies or existing companies. The course provides an overview of entrepreneurship and innovation, develops an entrepreneurial frame of mind, and provides a framework for taking ideas from concept to launched product. Students will work in teams to develop both business and practical skills in areas such as creative development, financial planning and financing, business models, organization structures, and management. The class will also include visits with Silicon Valley entrepreneurs and venture capitalists.  This course is reserved for ETC students attending the ETC-SV location.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 12.093333333333334, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "ROSENDAHL": [
            4.833333333333333, 
            3
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "15239", 
    "course_name": "ST SFTWR DEV SOCL GD", 
    "course_rating": 4.355, 
    "description": "15237 or 15112", 
    "endTime": "", 
    "hrsPerWeek": 13.0, 
    "numRatings": 2, 
    "prereqs": "CMU has extensive global service learning opportunities promoting the advancement of social causes through technology.  In this real-world project-based course, we will work closely with some of these projects to produce free and open-source software products of real and immediate value.  We expect many but not all projects to include mobile web apps, though target platforms will be selected to best suit the projects we are servicing.  Topics include elements of project management, design, and software development practices, tools, and techniques as required.  Students will work in teams across all phases of product development, including requirements gathering, user experience design, software design, implementation, test, deployment, support, and maintenance.  We aim to provide opportunities for students to interact with end-users who will directly benefit from these projects.  Additional topics may include support for large-scale open-source software projects which are compatible with the goals of this course.  In keeping with the goals of the course, all content created by students and faculty in this course will be released under free and open-source licenses.  [Note: This course may serve as a CS Elective towards the CS major or CS minor.]\r\n\r\nPrerequisites: Permission of the instructor and either (B or higher in 15-237) OR (B or higher in 15-112 and extensive web programming experience).", 
    "professors": {
        "DIAS": [
            4.21, 
            1
        ], 
        "KOSBIE": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "15237", 
    "course_name": "ST: MOBILE WEB APPS", 
    "course_rating": 4.455, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 13.545, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "KOSBIE": [
            4.455, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15892", 
    "course_name": "FND ELECTRNC MRKTPLC", 
    "course_rating": 4.8, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "SANDHOLM": [
            4.8, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15895", 
    "course_name": "AI SUSTNABLY HLTH CR", 
    "course_rating": 4.835, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 7.0, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "BRUNSKILL": [
            5.0, 
            1
        ], 
        "VELOSO": [
            4.67, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15896", 
    "course_name": "ALGTHMS GAMES & NETW", 
    "course_rating": 4.705, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.15, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "BLUM": [
            4.59, 
            1
        ], 
        "PROCACCIA": [
            4.82, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16642", 
    "course_name": "MANPLTN MOBLY & CNTR", 
    "course_rating": 4.353333333333333, 
    "description": "This course provides an overview of the current techniques that allow robots to locomote and interact with the world. The kinematics and dynamics of electromechanical systems will be covered with a particular focus on their application to robotic arms. Some basic principles of robot control will be discussed, ranging from independent- joint PID tracking to coupled computed torque approaches. The practice and theory of robotic mobility will be investigated through various mobile robot platforms, including wheeled and tracked vehicle and legged robots. Hands-on experience with some of the topics in the class will be provided through practical demonstrations and lab assignments.", 
    "endTime": "04:20PM", 
    "hrsPerWeek": 10.743333333333334, 
    "numRatings": 3, 
    "prereqs": "None", 
    "professors": {
        "APOSTOLOPOULOS": [
            4.21, 
            1
        ], 
        "GEYER": [
            4.54, 
            1
        ], 
        "KANTOR": [
            4.31, 
            1
        ]
    }, 
    "startTime": "03:00PM", 
    "units": ""
}
{
    "cid": "5863", 
    "course_name": "INTRO HCI TECH EXECS", 
    "course_rating": 4.14, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 12.1, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "MYERS": [
            4.14, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15151", 
    "course_name": "MATH FOUNDATIONS CS", 
    "course_rating": 4.095, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 14.580833333333333, 
    "numRatings": 12, 
    "prereqs": "", 
    "professors": {
        "BLANK": [
            4.295000000000001, 
            6
        ], 
        "SUTNER": [
            3.8949999999999996, 
            6
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15150", 
    "course_name": "PRIN FNCTIONL PRGMMG", 
    "course_rating": 3.7619999999999996, 
    "description": "An introduction to programming based on a \"functional\" model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.\r\n\r\nNOTE: students must achieve a C or better in order to use \r\nthis course to satisfy the pre-requisite for any subsequent Computer \r\nScience course.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 13.157, 
    "numRatings": 10, 
    "prereqs": "(21127 or 15151) and (15112)", 
    "professors": {
        "BROOKES": [
            3.125, 
            2
        ], 
        "CERVESATO": [
            3.6566666666666667, 
            3
        ], 
        "ERDMANN": [
            3.795, 
            2
        ], 
        "LICATA": [
            4.65, 
            1
        ], 
        "VOYSEY": [
            4.57, 
            1
        ], 
        "Wing": [
            3.59, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "17603", 
    "course_name": "TEAM SOFTWR PROCESS", 
    "course_rating": 5.0, 
    "description": "17602", 
    "endTime": "", 
    "hrsPerWeek": 11.75, 
    "numRatings": 2, 
    "prereqs": "This course provides the student with an overview of a process that enables a team of software engineers to better work together. This process focuses on various disciplined approaches and strategies related to  problems that regularly occur during team formation. The course relies on the text book \"Introduction to the Team Software Process\" by Watts Humphrey. Upon completion of this course, the student will be able to recognize the roles and strategies that can be used to form successful teams for working on software projects.\r\n\r\nPrior to enrolling in this course, the student should have already completed a disciplined approach to personal software development. This is normally the Personal Software Process as explained in \"A Discipline for Software Engineering\" by Watts Humphrey.\r\n\r\nPrerequisite: Personal Software Process (PSP) course.  This course can be taken as credit or non-credit from the Software Engineering Distance Education Program.", 
    "professors": {
        "ROSSO-LLOPART": [
            5.0, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "17602", 
    "course_name": "INTRO PRSNL SFTWR PR", 
    "course_rating": 4.82, 
    "description": "The purpose of this course is to introduce the highest-leverage metrics of the Personal Software Process (PSP), specifically the ones associated with improving time estimation and reducing defects.\n\nThe central subject of this course is process, not product. The programs that you will do are a means of teaching process, not an end product in themselves. The amount of process activity is clearly excessive for these\nsimple problems. We suggest you read through all the programming problem specifications at the beginning so you will know where they are going early in the course. Then, when you feel that the process burden is too great, imagine doing a series of 300 line modules using the PSP, and see if you feel differently. We think that you will see the point very quickly and find yourself unconsciously applying parts of PSP to your own work before the course is done.\n\nThis course is intended for practicing software engineers and their managers. The measures introduced can serve as the basis for software development process improvement in the organization as well as helping individuals. Students who go on to take a more comprehensive course in the PSP will be able to concentrate more completely on advanced metrics and PSP is required if you intend to follow on with the concepts in the Team Software Process (TSP).\n\nRequirement:  Since this is a development oriented class and involves writing code, all the normal tools one may use to develop code in their language of choice are required. You should NOT use this course as an opportunity to learn a new language as this course is intended to measure your already instantiated personal process.  Learning a new language will most likely cause you to change your personal process. Course requirements are not solely grounded in theory.\n\nTextbook Required: PSP: Self-Improvement Process for Software Engineers - 05 edition\nAuthor: Watts Humphrey", 
    "endTime": "", 
    "hrsPerWeek": 9.028, 
    "numRatings": 5, 
    "prereqs": "None", 
    "professors": {
        "ROSSO-LLOPART": [
            4.82, 
            5
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15659", 
    "course_name": "PROBLTY & COMPUTING", 
    "course_rating": 4.4075, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.6, 
    "numRatings": 4, 
    "prereqs": "", 
    "professors": {
        "ADAMCHIK": [
            3.25, 
            1
        ], 
        "HARCHOL-BALTER": [
            4.793333333333333, 
            3
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15799", 
    "course_name": "SPEC TOP SOFT SYS", 
    "course_rating": 4.73, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 13.55, 
    "numRatings": 1, 
    "prereqs": "Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.\n\nThis course will consist of a paper-led survey of recent publications in modern operating and distributed systems and a time-consuming set of deep-dive coding projects starting with the first four projects of the concurrently offered 15-605, Operating Systems Design and Implementation, course and ending with a fifth project extending the fourth project to incorporate a state-of-the-art hardware/software challenge.  The lecture material from 15-410/605 is assumed to have been learned in a prior course and enrollment in 15-605 is not required (although auditing some of the 15-605 lectures that address details of the early projects may be useful and 15-605 bulletin boards and TA hours may be similarly useful). This course is being offered as an elective (non-star course) for CSD (or ECE) PhD students, typically computer architecture or software systems students.  Other students need instructor approval.", 
    "professors": {
        "PAVLO": [
            4.73, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "15651", 
    "course_name": "ALGORITHM DES & ANLS", 
    "course_rating": 4.3825, 
    "description": "This course is intended for SCS graduate students. ECE graduate students should register for either 15-351 or 15-451. All other graduate students should register for 15-650.\" \n\nThis course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 13.147499999999999, 
    "numRatings": 4, 
    "prereqs": "None", 
    "professors": {
        "BLUM": [
            4.78, 
            1
        ], 
        "GUPTA": [
            4.75, 
            1
        ], 
        "MILLER": [
            4.4, 
            1
        ], 
        "SLEATOR": [
            3.6, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "15385", 
    "course_name": "INTRO COMPUTER VISN", 
    "course_rating": 4.486666666666667, 
    "description": "(15122) and (21241)", 
    "endTime": "", 
    "hrsPerWeek": 6.6000000000000005, 
    "numRatings": 3, 
    "prereqs": "An introduction to the science and engineering of computer vision,\r\ni.e.  the analysis of the patterns in visual images with the view to\r\nunderstanding the objects and processes in the world that generate\r\nthem.  Major topics include image formation and sensing, fourier\r\nanalysis, edge and contour detection, inference of depth, shape and\r\nmotion, classification, recognition, tracking, and active vision. The\r\nemphasis is on the learning of fundamental mathematical concepts and\r\ntechniques and applying them to solve real vision problems. The\r\ndiscussion will also include comparison with human and animal vision\r\nfrom psychological and biological perspectives. Students will learn to\r\nthink mathematically and develop skills in translating ideas and\r\nmathematical thoughts into programs to solve real vision problems.", 
    "professors": {
        "KANADE": [
            4.7, 
            2
        ], 
        "NARASIMHAN": [
            4.06, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "15386", 
    "course_name": "NEURAL COMPUTATION", 
    "course_rating": 4.17, 
    "description": "21122 and 15112", 
    "endTime": "", 
    "hrsPerWeek": 9.0, 
    "numRatings": 1, 
    "prereqs": "Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.", 
    "professors": {
        "LEE": [
            4.17, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "9.0"
}
{
    "cid": "15387", 
    "course_name": "COMPTNL PERCEPTN", 
    "course_rating": 4.8, 
    "description": "In this course, we will first cover the biological and psychological foundational knowledge of biological perceptual systems, and then apply computational thinking to investigate the principles and mechanisms underlying natural perception. The course will focus on vision this year, but will also touch upon other sensory modalities. You will learn how to reason scientifically and computationally about problems and issues in perception, how to extract the essential computational properties of those abstract ideas, and finally how to convert these into explicit mathematical models and computational algorithms. Topics include perceptual representation and inference, perceptual organization, perceptual constancy, object recognition, learning and scene analysis. Prerequisites: First year college calculus, some basic knowledge of linear algebra and probability and some programming experience are desirable.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 10.0, 
    "numRatings": 1, 
    "prereqs": "21122 and 21241 and 15112", 
    "professors": {
        "LEE": [
            4.8, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "15381", 
    "course_name": "AI RPRSNTN & PRB SLV", 
    "course_rating": 3.69, 
    "description": "This course is about the theory and practice of Artificial Intelligence. We will study modern techniques for computers to represent task-relevant information and make intelligent (i.e. satisficing or optimal) decisions towards the achievement of goals. The search and problem solving methods are applicable throughout a large range of industrial, civil, medical, financial, robotic, and information systems.  We will investigate questions about AI systems such as: how to represent knowledge, how to effectively generate appropriate sequences of actions and how to search among alternatives to find optimal or near-optimal solutions.  We will also explore how to deal with uncertainty in the world, how to learn from experience, and how to learn decision rules from data.  We expect that by the end of the course students will have a thorough understanding of the algorithmic foundations of AI, how probability and AI are closely interrelated, and how automated agents learn.  We also expect students to acquire a strong appreciation of the big-picture aspects of developing fully autonomous intelligent agents.  Other lectures will introduce additional aspects of AI, including natural language processing, web-based search engines, industrial applications, autonomous robotics, and economic/game-theoretic decision making.", 
    "endTime": "01:20PM", 
    "hrsPerWeek": 7.925, 
    "numRatings": 4, 
    "prereqs": "15122 or 15211", 
    "professors": {
        "BAGNELL": [
            3.86, 
            1
        ], 
        "BROWNING": [
            4.0, 
            1
        ], 
        "BRUNSKILL": [
            2.9, 
            1
        ], 
        "DIAS": [
            4.0, 
            1
        ]
    }, 
    "startTime": "12:00PM", 
    "units": ""
}
{
    "cid": "15383", 
    "course_name": "INTROTEXTPROCESSNG", 
    "course_rating": 4.333333333333333, 
    "description": "Text processing is a mini-course about text basic techniques of processing human language in text format.  The course has theoretical and hands-on components. In the theoretical component, the course will discuss challenges in processing human languages, and review the  basics of statistics and probability theory and their application to language problems.  In the hands-on part, students will learn about Python programming and use it to process large volumes of text using various\r\ntechniques. The processing will range from simple steps such as tokenization and part-of-speech tagging to full-fledged  applications such as  statistical machine translation,  search and document/topic classification.  The course is suited for junior and senior students in CS and IS.", 
    "endTime": "11:50AM", 
    "hrsPerWeek": 7.7, 
    "numRatings": 3, 
    "prereqs": "15121 or 15122", 
    "professors": {
        "MOHIT": [
            4.375, 
            2
        ], 
        "OFLAZER": [
            4.25, 
            1
        ]
    }, 
    "startTime": "10:30AM", 
    "units": ""
}
{
    "cid": "8997", 
    "course_name": "COS GRAD READ RSRCH", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 19.611666666666668, 
    "numRatings": 6, 
    "prereqs": "", 
    "professors": {
        "BREAUX": [
            5.0, 
            1
        ], 
        "CARLEY": [
            5.0, 
            2
        ], 
        "CRANOR": [
            5.0, 
            1
        ], 
        "HERBSLEB": [
            5.0, 
            1
        ], 
        "SADEH": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "17691", 
    "course_name": "SOFTWARE DEVPT TOOLS", 
    "course_rating": 4.0649999999999995, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 5.105, 
    "numRatings": 2, 
    "prereqs": "This half-semester seminar will provide students with an appreciation of the amount, and form, of automation available (commercial and internally developed) in support of the software development lifecycle.  The intent is to build a student\ufffds awareness of what is available for each of the common lifecycle phases in terms of tool support for the lifecycle process.  Students will learn how choosing an appropriate tool can dramatically improve their organization\ufffds productivity and quality, as well as gain an appreciation of how choosing the wrong tool can be disastrous to their organization.  \r\n\r\nThe intent of each class is to illustrate the pitfalls and opportunities for automation of the development process in a process specific area / phase. Each class will also feature a discussion on processes associated tool-based processes including cost benefit analysis, tool implementation success criteria, tool evaluations, piloting tools/ tool demos, and integrating a tool into an organization\ufffds development process.  A typical class would include:\r\n- Overview of the process phase / activity to be covered\r\n- Presentation on what, and how, automation in this space can help software\r\n   engineers\r\n- A review of tools in this space\r\n- Demo of a tool in this space\r\n- Discussion on pros and cons of tool support in this space\r\n\r\nRequirement:  Completion of at least 1 semester (36 units) of Master\ufffds level courses.", 
    "professors": {
        "ROZUM": [
            4.0649999999999995, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "16822", 
    "course_name": "GMTRY BSD MTH IN VIS", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.27, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "HEBERT": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16824", 
    "course_name": "LRNG BASD MTHD VISN", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 8.78, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "EFROS": [
            4.69, 
            1
        ], 
        "GUPTA": [
            4.64, 
            1
        ], 
        "SIGAL": [
            4.17, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "15579", 
    "course_name": "IND STUDY ROBOTICS", 
    "course_rating": 5.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 11.0, 
    "numRatings": 3, 
    "prereqs": "", 
    "professors": {
        "BROWNING": [
            5.0, 
            1
        ], 
        "DIAS": [
            5.0, 
            1
        ], 
        "SAKR": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11726", 
    "course_name": "MEANING LANG LAB SP", 
    "course_rating": 5.0, 
    "description": "The self-paced Meaning in Language Lab is intended to follow-up on the 11-725 lecture course (Meaning in Language) by providing a chance for hands-on, in-depth, computational exploration of various semantics and pragmatics research topics. The course is self-paced and there will be no scheduled lecture times, however, students are welcome to set up meetings with the instructor as desired, and students who prefer to have a weekly or bi-monthly regularly scheduled meeting with the instructor are welcome to arrange for that. If there is sufficient interest, an informal reading group may be formed to supplement the lab work.\r\n\r\nStudents will design their own project, which they will discuss with the instructor for approval. Students are encouraged to select a topic from semantics, pragmatics, or discourse analysis, such as entailment, evidentiality, implicature, information status, or rhetorical structure, and a topic from language technologies, such as sentiment analysis or summarization, and explore how the linguistic topic applies to some aspect of the chosen language technology. Students are encouraged to contrast symbolic, formal, and knowledge based approaches with empirical approaches.\r\n\r\nEach student will work independently. If multiple students work as a team on a particular topic, each should choose an approach that is different from the approaches used by the other students working on the same problem. Students will be responsible to set up a web page, blog, or wiki to post progress reports and other supporting documents, data, and analyses. The web space will be checked by the instructor periodically , and thus should be kept updated in order to reflect on-going progress. The web space will also serve as a shared project space in the case that students are working in a team for the project.", 
    "endTime": "", 
    "hrsPerWeek": 2.0, 
    "numRatings": 1, 
    "prereqs": "None", 
    "professors": {
        "ROSE": [
            5.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11722", 
    "course_name": "GRAMMAR FORMALISMS", 
    "course_rating": 4.125, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.625, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "BLACK": [
            4.0, 
            1
        ], 
        "LEVIN": [
            4.25, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "11723", 
    "course_name": "LINGUISTICS LAB", 
    "course_rating": 3.0, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 2.0, 
    "numRatings": 1, 
    "prereqs": "Formal Semantics is an introductory graduate course on formal linguistic semantics: Given a syntactic analysis of a natural language utterance, how can one assign the correct meaning representation to it, using a formal logical system? More details TBA.", 
    "professors": {
        "LEVIN": [
            3.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": "6.0"
}
{
    "cid": "11721", 
    "course_name": "GRAMMARS & LEXICONS", 
    "course_rating": 3.58, 
    "description": "Grammars and Lexicons is an introductory graduate course on linguistic data analysis and theory, focusing on methodologies that are suitable for computational implementations. The course covers major syntactic and morphological phenomena in a variety of languages. The emphasis will be on examining both the diversity of linguistic structures and the constraints on variation across languages. Students will be expected to develop and defend analyses of data, capturing linguistic generalizations and making correct predictions within and across languages. The goal is for students to become familiar with the range of phenomena that occur in human languages so that they can generalize the insights into the design of computational systems. The theoretical framework for syntactic and lexical analysis will be Lexical Functional Grammar. Grades will be based on problem sets and take-home exams.", 
    "endTime": "02:50PM", 
    "hrsPerWeek": 7.654999999999999, 
    "numRatings": 2, 
    "prereqs": "None", 
    "professors": {
        "LEVIN": [
            4.08, 
            1
        ], 
        "MITAMURA": [
            3.08, 
            1
        ]
    }, 
    "startTime": "01:30PM", 
    "units": ""
}
{
    "cid": "11641", 
    "course_name": "SRCH ENGS & WEB MING", 
    "course_rating": 3.94, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 16.115000000000002, 
    "numRatings": 2, 
    "prereqs": "", 
    "professors": {
        "CALLAN": [
            4.72, 
            1
        ], 
        "YANG": [
            3.16, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "2722", 
    "course_name": "ADV ALGR CMP STR BIO", 
    "course_rating": 4.5, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "LANGMEAD": [
            4.5, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "8999", 
    "course_name": "COS PRACTICUM MTHODL", 
    "course_rating": 4.0, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.0, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "CARLEY": [
            4.0, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "16850", 
    "course_name": "SYSTEMS ENGINEERING", 
    "course_rating": 3.66, 
    "description": "None", 
    "endTime": "", 
    "hrsPerWeek": 10.510000000000002, 
    "numRatings": 2, 
    "prereqs": "Systems Engineering is a multidisciplinary approach and means of creating complex devices and systems. It recognizes that hardware and software and the operating environment are interrelated in the process of creating complex systems. How do we trade off hardware \"apples\" and software \"oranges\"? What methods and tools can we apply to help make wise decisions? To create effective systems we must recognize and consider many perspectives, issues, and disciplines simultaneously.\n\nIn this course our focus is on systems of hardware and software components engineered to perform complex behavior. Such systems embed computing elements, integrate sensors and actuators, operate in a reliable and timely fashion, and demand rigorous engineering from conception through production. Applications of robotics technology will be used to illustrate applications and the challenges in engineering complex systems.\n\nConcepts, problems, and methods of systems engineering are introduced and discussed in lectures and developed in assignments. Case studies and guest lectures present best practice in the field. Readings from current literature will tie theory to practical methods of creating complex devices.\n\nStudents gain practical experience through a highly-structured small group project that will run the entire semester.  We will progress through systems engineering processes of analysis, design, implementation, and deployment with parallel consideration of testing and evaluation. Past projects have used the Pittsburgh Children's Museum as context where we have collaborated to create and deploy interactive exhibits within the museum.\n\nThis course should be appropriate for graduate students in engineering, sciences and design and for advanced undergraduates with the permission of the instructor. Class size will be limited.", 
    "professors": {
        "WETTERGREEN": [
            3.66, 
            2
        ]
    }, 
    "startTime": "", 
    "units": "12.0"
}
{
    "cid": "5630", 
    "course_name": "PRGMG USABLE INTFCE", 
    "course_rating": 4.35, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 6.3, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "DEY": [
            4.35, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5631", 
    "course_name": "SFTWR STRCT US INTRF", 
    "course_rating": 4.05, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 5.82, 
    "numRatings": 1, 
    "prereqs": "", 
    "professors": {
        "HUDSON": [
            4.05, 
            1
        ]
    }, 
    "startTime": "", 
    "units": ""
}
{
    "cid": "5633", 
    "course_name": "USER INTERFACE LAB", 
    "course_rating": 3.9979999999999998, 
    "description": "", 
    "endTime": "", 
    "hrsPerWeek": 9.846, 
    "numRatings": 5, 
    "prereqs": "", 
    "professors": {
        "ALEVEN": [
            3.4, 
            1
        ], 
        "DEY": [
            4.505, 
            2
        ], 
        "HUDSON": [
            3.79, 
            2
        ]
    }, 
    "startTime": "", 
    "units": ""
}
